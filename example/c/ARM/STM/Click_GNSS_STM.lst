;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22.1.2019. 16:47:25
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x1FCD0000  	8141
0x0008	0x1F990000  	8089
0x000C	0x1F990000  	8089
0x0010	0x1F990000  	8089
0x0014	0x1F990000  	8089
0x0018	0x1F990000  	8089
0x001C	0x1F990000  	8089
0x0020	0x1F990000  	8089
0x0024	0x1F990000  	8089
0x0028	0x1F990000  	8089
0x002C	0x1F990000  	8089
0x0030	0x1F990000  	8089
0x0034	0x1F990000  	8089
0x0038	0x1F990000  	8089
0x003C	0x1F990000  	8089
0x0040	0x1F990000  	8089
0x0044	0x1F990000  	8089
0x0048	0x1F990000  	8089
0x004C	0x1F990000  	8089
0x0050	0x1F990000  	8089
0x0054	0x1F990000  	8089
0x0058	0x1F990000  	8089
0x005C	0x1F990000  	8089
0x0060	0x1F990000  	8089
0x0064	0x1F990000  	8089
0x0068	0x1F990000  	8089
0x006C	0x1F990000  	8089
0x0070	0x1F990000  	8089
0x0074	0x1F990000  	8089
0x0078	0x1F990000  	8089
0x007C	0x1F990000  	8089
0x0080	0x1F990000  	8089
0x0084	0x1F990000  	8089
0x0088	0x1F990000  	8089
0x008C	0x1F990000  	8089
0x0090	0x1F990000  	8089
0x0094	0x1F990000  	8089
0x0098	0x1F990000  	8089
0x009C	0x1F990000  	8089
0x00A0	0x1F990000  	8089
0x00A4	0x1F990000  	8089
0x00A8	0x1F990000  	8089
0x00AC	0x1F990000  	8089
0x00B0	0x1FA10000  	8097
0x00B4	0x1F990000  	8089
0x00B8	0x1F990000  	8089
0x00BC	0x1F990000  	8089
0x00C0	0x1F990000  	8089
0x00C4	0x1F990000  	8089
0x00C8	0x1F990000  	8089
0x00CC	0x1F990000  	8089
0x00D0	0x1F990000  	8089
0x00D4	0x1F990000  	8089
0x00D8	0x1F990000  	8089
0x00DC	0x1F990000  	8089
0x00E0	0x1F990000  	8089
0x00E4	0x1F990000  	8089
0x00E8	0x1F990000  	8089
0x00EC	0x1F990000  	8089
0x00F0	0x1F990000  	8089
0x00F4	0x1F990000  	8089
0x00F8	0x1F990000  	8089
0x00FC	0x1F990000  	8089
0x0100	0x1F990000  	8089
0x0104	0x1F990000  	8089
0x0108	0x1F990000  	8089
0x010C	0x1F990000  	8089
0x0110	0x1F990000  	8089
0x0114	0x1F990000  	8089
0x0118	0x1F990000  	8089
0x011C	0x1F990000  	8089
0x0120	0x1F990000  	8089
0x0124	0x1F990000  	8089
0x0128	0x1F990000  	8089
0x012C	0x1F990000  	8089
0x0130	0x1F990000  	8089
0x0134	0x1F990000  	8089
0x0138	0x1F990000  	8089
0x013C	0x1F990000  	8089
0x0140	0x1F990000  	8089
0x0144	0x1F990000  	8089
0x0148	0x1F990000  	8089
0x014C	0x1F990000  	8089
; end of ____SysVT
_main:
;Click_GNSS_STM.c, 171 :: 		void main()
0x1FCC	0xF000F80E  BL	8172
0x1FD0	0xF000FE0C  BL	11244
0x1FD4	0xF000F8AC  BL	8496
0x1FD8	0xF000FDC8  BL	11116
;Click_GNSS_STM.c, 173 :: 		systemInit();
0x1FDC	0xF7FFFF92  BL	_systemInit+0
;Click_GNSS_STM.c, 174 :: 		applicationInit();
0x1FE0	0xF7FFFF62  BL	_applicationInit+0
;Click_GNSS_STM.c, 176 :: 		while (1)
L_main20:
;Click_GNSS_STM.c, 178 :: 		applicationTask();
0x1FE4	0xF7FFFE96  BL	_applicationTask+0
;Click_GNSS_STM.c, 179 :: 		}
0x1FE8	0xE7FC    B	L_main20
;Click_GNSS_STM.c, 180 :: 		}
L_end_main:
L__main_end_loop:
0x1FEA	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x1BF8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x1BFA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1BFE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1C02	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x1C06	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x1C08	0xB001    ADD	SP, SP, #4
0x1C0A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1F5C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1F5E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1F62	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x1F66	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x1F6A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1F6C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1F70	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1F72	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1F74	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x1F76	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x1F7A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1F7E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1F80	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1F84	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x1F86	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1F88	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1F8C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1F90	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1F92	0xB001    ADD	SP, SP, #4
0x1F94	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_GNSS_STM.c, 66 :: 		void systemInit()
0x1F04	0xB081    SUB	SP, SP, #4
0x1F06	0xF8CDE000  STR	LR, [SP, #0]
;Click_GNSS_STM.c, 68 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT );
0x1F0A	0x2201    MOVS	R2, #1
0x1F0C	0x2100    MOVS	R1, #0
0x1F0E	0x2000    MOVS	R0, #0
0x1F10	0xF7FFFC94  BL	_mikrobus_gpioInit+0
;Click_GNSS_STM.c, 69 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_INPUT );
0x1F14	0x2201    MOVS	R2, #1
0x1F16	0x2106    MOVS	R1, #6
0x1F18	0x2000    MOVS	R0, #0
0x1F1A	0xF7FFFC8F  BL	_mikrobus_gpioInit+0
;Click_GNSS_STM.c, 70 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x1F1E	0x2201    MOVS	R2, #1
0x1F20	0x2107    MOVS	R1, #7
0x1F22	0x2000    MOVS	R0, #0
0x1F24	0xF7FFFC8A  BL	_mikrobus_gpioInit+0
;Click_GNSS_STM.c, 71 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x1F28	0x2200    MOVS	R2, #0
0x1F2A	0x2101    MOVS	R1, #1
0x1F2C	0x2000    MOVS	R0, #0
0x1F2E	0xF7FFFC85  BL	_mikrobus_gpioInit+0
;Click_GNSS_STM.c, 72 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x1F32	0x2200    MOVS	R2, #0
0x1F34	0x2102    MOVS	R1, #2
0x1F36	0x2000    MOVS	R0, #0
0x1F38	0xF7FFFC80  BL	_mikrobus_gpioInit+0
;Click_GNSS_STM.c, 73 :: 		mikrobus_uartInit( _MIKROBUS1, &_GNSS_UART_CFG[0] );
0x1F3C	0x4806    LDR	R0, [PC, #24]
0x1F3E	0x4601    MOV	R1, R0
0x1F40	0x2000    MOVS	R0, #0
0x1F42	0xF7FFFC9D  BL	_mikrobus_uartInit+0
;Click_GNSS_STM.c, 74 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x1F46	0xF2425180  MOVW	R1, #9600
0x1F4A	0x2020    MOVS	R0, #32
0x1F4C	0xF7FFFCB0  BL	_mikrobus_logInit+0
;Click_GNSS_STM.c, 75 :: 		}
L_end_systemInit:
0x1F50	0xF8DDE000  LDR	LR, [SP, #0]
0x1F54	0xB001    ADD	SP, SP, #4
0x1F56	0x4770    BX	LR
0x1F58	0x2B4C0000  	__GNSS_UART_CFG+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x183C	0xB081    SUB	SP, SP, #4
0x183E	0xF8CDE000  STR	LR, [SP, #0]
0x1842	0xFA5FF981  UXTB	R9, R1
0x1846	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x184A	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x184C	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1850	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1854	0xF7FFFCE4  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1858	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x185A	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x185E	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1862	0xF7FFFDB9  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1866	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1868	0x2001    MOVS	R0, #1
0x186A	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x186C	0x2800    CMP	R0, #0
0x186E	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x1870	0x2801    CMP	R0, #1
0x1872	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x1874	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x1876	0xF8DDE000  LDR	LR, [SP, #0]
0x187A	0xB001    ADD	SP, SP, #4
0x187C	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1220	0xB081    SUB	SP, SP, #4
0x1222	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x1226	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x1228	0x2901    CMP	R1, #1
0x122A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x122C	0xF2400110  MOVW	R1, #16
0x1230	0x4865    LDR	R0, [PC, #404]
0x1232	0xF7FFFD01  BL	_GPIO_Digital_Input+0
0x1236	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x1238	0xF2400110  MOVW	R1, #16
0x123C	0x4862    LDR	R0, [PC, #392]
0x123E	0xF7FFFD81  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x1242	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x1244	0x2901    CMP	R1, #1
0x1246	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x1248	0xF2400104  MOVW	R1, #4
0x124C	0x485F    LDR	R0, [PC, #380]
0x124E	0xF7FFFCF3  BL	_GPIO_Digital_Input+0
0x1252	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x1254	0xF2400104  MOVW	R1, #4
0x1258	0x485C    LDR	R0, [PC, #368]
0x125A	0xF7FFFD73  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x125E	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x1260	0x2901    CMP	R1, #1
0x1262	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x1264	0xF2420100  MOVW	R1, #8192
0x1268	0x4859    LDR	R0, [PC, #356]
0x126A	0xF7FFFCE5  BL	_GPIO_Digital_Input+0
0x126E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x1270	0xF2420100  MOVW	R1, #8192
0x1274	0x4856    LDR	R0, [PC, #344]
0x1276	0xF7FFFD65  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x127A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x127C	0x2901    CMP	R1, #1
0x127E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x1280	0xF2404100  MOVW	R1, #1024
0x1284	0x4851    LDR	R0, [PC, #324]
0x1286	0xF7FFFCD7  BL	_GPIO_Digital_Input+0
0x128A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x128C	0xF2404100  MOVW	R1, #1024
0x1290	0x484E    LDR	R0, [PC, #312]
0x1292	0xF7FFFD57  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x1296	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x1298	0x2901    CMP	R1, #1
0x129A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x129C	0xF6400100  MOVW	R1, #2048
0x12A0	0x484A    LDR	R0, [PC, #296]
0x12A2	0xF7FFFCC9  BL	_GPIO_Digital_Input+0
0x12A6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x12A8	0xF6400100  MOVW	R1, #2048
0x12AC	0x4847    LDR	R0, [PC, #284]
0x12AE	0xF7FFFD49  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x12B2	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x12B4	0x2901    CMP	R1, #1
0x12B6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x12B8	0xF2410100  MOVW	R1, #4096
0x12BC	0x4843    LDR	R0, [PC, #268]
0x12BE	0xF7FFFCBB  BL	_GPIO_Digital_Input+0
0x12C2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x12C4	0xF2410100  MOVW	R1, #4096
0x12C8	0x4840    LDR	R0, [PC, #256]
0x12CA	0xF7FFFD3B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x12CE	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x12D0	0x2901    CMP	R1, #1
0x12D2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x12D4	0xF2400101  MOVW	R1, #1
0x12D8	0x483B    LDR	R0, [PC, #236]
0x12DA	0xF7FFFCAD  BL	_GPIO_Digital_Input+0
0x12DE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x12E0	0xF2400101  MOVW	R1, #1
0x12E4	0x4838    LDR	R0, [PC, #224]
0x12E6	0xF7FFFD2D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x12EA	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x12EC	0x2901    CMP	R1, #1
0x12EE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x12F0	0xF2404100  MOVW	R1, #1024
0x12F4	0x4836    LDR	R0, [PC, #216]
0x12F6	0xF7FFFC9F  BL	_GPIO_Digital_Input+0
0x12FA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x12FC	0xF2404100  MOVW	R1, #1024
0x1300	0x4833    LDR	R0, [PC, #204]
0x1302	0xF7FFFD1F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x1306	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x1308	0x2901    CMP	R1, #1
0x130A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x130C	0xF2402100  MOVW	R1, #512
0x1310	0x482F    LDR	R0, [PC, #188]
0x1312	0xF7FFFC91  BL	_GPIO_Digital_Input+0
0x1316	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x1318	0xF2402100  MOVW	R1, #512
0x131C	0x482C    LDR	R0, [PC, #176]
0x131E	0xF7FFFD11  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x1322	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x1324	0x2901    CMP	R1, #1
0x1326	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x1328	0xF2401100  MOVW	R1, #256
0x132C	0x4828    LDR	R0, [PC, #160]
0x132E	0xF7FFFC83  BL	_GPIO_Digital_Input+0
0x1332	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x1334	0xF2401100  MOVW	R1, #256
0x1338	0x4825    LDR	R0, [PC, #148]
0x133A	0xF7FFFD03  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x133E	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x1340	0x2901    CMP	R1, #1
0x1342	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x1344	0xF2400140  MOVW	R1, #64
0x1348	0x4822    LDR	R0, [PC, #136]
0x134A	0xF7FFFC75  BL	_GPIO_Digital_Input+0
0x134E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x1350	0xF2400140  MOVW	R1, #64
0x1354	0x481F    LDR	R0, [PC, #124]
0x1356	0xF7FFFCF5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x135A	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x135C	0x2901    CMP	R1, #1
0x135E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x1360	0xF2400180  MOVW	R1, #128
0x1364	0x481B    LDR	R0, [PC, #108]
0x1366	0xF7FFFC67  BL	_GPIO_Digital_Input+0
0x136A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x136C	0xF2400180  MOVW	R1, #128
0x1370	0x4818    LDR	R0, [PC, #96]
0x1372	0xF7FFFCE7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x1376	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x1378	0x2001    MOVS	R0, #1
0x137A	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x137C	0x2800    CMP	R0, #0
0x137E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x1382	0x2801    CMP	R0, #1
0x1384	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x1388	0x2802    CMP	R0, #2
0x138A	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x138E	0x2803    CMP	R0, #3
0x1390	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x1394	0x2804    CMP	R0, #4
0x1396	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x139A	0x2805    CMP	R0, #5
0x139C	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x13A0	0x2806    CMP	R0, #6
0x13A2	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x13A6	0x2807    CMP	R0, #7
0x13A8	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x13AA	0x2808    CMP	R0, #8
0x13AC	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x13AE	0x2809    CMP	R0, #9
0x13B0	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x13B2	0x280A    CMP	R0, #10
0x13B4	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x13B6	0x280B    CMP	R0, #11
0x13B8	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x13BA	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x13BC	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x13BE	0xF8DDE000  LDR	LR, [SP, #0]
0x13C2	0xB001    ADD	SP, SP, #4
0x13C4	0x4770    BX	LR
0x13C6	0xBF00    NOP
0x13C8	0x08004001  	GPIOA_BASE+0
0x13CC	0x10004001  	GPIOC_BASE+0
0x13D0	0x14004001  	GPIOD_BASE+0
0x13D4	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0C38	0xB081    SUB	SP, SP, #4
0x0C3A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x0C3E	0xF04F0242  MOV	R2, #66
0x0C42	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0C44	0xF7FFFDC8  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x0C48	0xF8DDE000  LDR	LR, [SP, #0]
0x0C4C	0xB001    ADD	SP, SP, #4
0x0C4E	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x07D8	0xB081    SUB	SP, SP, #4
0x07DA	0xF8CDE000  STR	LR, [SP, #0]
0x07DE	0xB28C    UXTH	R4, R1
0x07E0	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x07E2	0x4B77    LDR	R3, [PC, #476]
0x07E4	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x07E8	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x07EA	0x4618    MOV	R0, R3
0x07EC	0xF7FFFD20  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x07F0	0xF1B40FFF  CMP	R4, #255
0x07F4	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x07F6	0x4B73    LDR	R3, [PC, #460]
0x07F8	0x429D    CMP	R5, R3
0x07FA	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x07FC	0xF04F3333  MOV	R3, #858993459
0x0800	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0802	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0804	0x2D42    CMP	R5, #66
0x0806	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0808	0xF04F3344  MOV	R3, #1145324612
0x080C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x080E	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0810	0xF64F73FF  MOVW	R3, #65535
0x0814	0x429C    CMP	R4, R3
0x0816	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0818	0x4B6A    LDR	R3, [PC, #424]
0x081A	0x429D    CMP	R5, R3
0x081C	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x081E	0xF04F3333  MOV	R3, #858993459
0x0822	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0824	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0826	0xF04F3333  MOV	R3, #858993459
0x082A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x082C	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x082E	0x2D42    CMP	R5, #66
0x0830	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0832	0xF04F3344  MOV	R3, #1145324612
0x0836	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0838	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x083A	0xF04F3344  MOV	R3, #1145324612
0x083E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0840	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0842	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0844	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0846	0xF0050301  AND	R3, R5, #1
0x084A	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x084C	0x2100    MOVS	R1, #0
0x084E	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0850	0xF0050302  AND	R3, R5, #2
0x0854	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0856	0xF40573C0  AND	R3, R5, #384
0x085A	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x085C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x085E	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0860	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0862	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0864	0xF0050304  AND	R3, R5, #4
0x0868	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x086A	0xF0050320  AND	R3, R5, #32
0x086E	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0870	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0872	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0874	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0876	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0878	0xF0050308  AND	R3, R5, #8
0x087C	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x087E	0xF0050320  AND	R3, R5, #32
0x0882	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0884	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0886	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0888	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x088A	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x088C	0x4B4E    LDR	R3, [PC, #312]
0x088E	0xEA050303  AND	R3, R5, R3, LSL #0
0x0892	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0894	0x2003    MOVS	R0, #3
0x0896	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0898	0xF4057300  AND	R3, R5, #512
0x089C	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x089E	0x2002    MOVS	R0, #2
0x08A0	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x08A2	0xF4056380  AND	R3, R5, #1024
0x08A6	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x08A8	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x08AA	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x08AC	0xF005030C  AND	R3, R5, #12
0x08B0	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x08B2	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x08B4	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x08B6	0xF00403FF  AND	R3, R4, #255
0x08BA	0xB29B    UXTH	R3, R3
0x08BC	0x2B00    CMP	R3, #0
0x08BE	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x08C0	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x08C2	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x08C4	0xFA1FF884  UXTH	R8, R4
0x08C8	0x4632    MOV	R2, R6
0x08CA	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x08CC	0x2808    CMP	R0, #8
0x08CE	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x08D0	0xF04F0301  MOV	R3, #1
0x08D4	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x08D8	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x08DC	0x42A3    CMP	R3, R4
0x08DE	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x08E0	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x08E2	0xF04F030F  MOV	R3, #15
0x08E6	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x08E8	0x43DB    MVN	R3, R3
0x08EA	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x08EE	0xFA01F305  LSL	R3, R1, R5
0x08F2	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x08F6	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x08F8	0xF4067381  AND	R3, R6, #258
0x08FC	0xF5B37F81  CMP	R3, #258
0x0900	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0902	0xF2020414  ADDW	R4, R2, #20
0x0906	0xF04F0301  MOV	R3, #1
0x090A	0x4083    LSLS	R3, R0
0x090C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x090E	0xF0060382  AND	R3, R6, #130
0x0912	0x2B82    CMP	R3, #130
0x0914	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0916	0xF2020410  ADDW	R4, R2, #16
0x091A	0xF04F0301  MOV	R3, #1
0x091E	0x4083    LSLS	R3, R0
0x0920	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0922	0x462F    MOV	R7, R5
0x0924	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0926	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0928	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x092A	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x092C	0xFA1FF088  UXTH	R0, R8
0x0930	0x460F    MOV	R7, R1
0x0932	0x4631    MOV	R1, R6
0x0934	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0936	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0938	0x460F    MOV	R7, R1
0x093A	0x4629    MOV	R1, R5
0x093C	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x093E	0xF1B00FFF  CMP	R0, #255
0x0942	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0944	0x1D33    ADDS	R3, R6, #4
0x0946	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x094A	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x094C	0x2A08    CMP	R2, #8
0x094E	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0950	0xF2020408  ADDW	R4, R2, #8
0x0954	0xF04F0301  MOV	R3, #1
0x0958	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x095C	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0960	0x42A3    CMP	R3, R4
0x0962	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0964	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0966	0xF04F030F  MOV	R3, #15
0x096A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x096C	0x43DB    MVN	R3, R3
0x096E	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0972	0xFA07F305  LSL	R3, R7, R5
0x0976	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x097A	0xF4017381  AND	R3, R1, #258
0x097E	0xF5B37F81  CMP	R3, #258
0x0982	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0984	0xF2060514  ADDW	R5, R6, #20
0x0988	0xF2020408  ADDW	R4, R2, #8
0x098C	0xF04F0301  MOV	R3, #1
0x0990	0x40A3    LSLS	R3, R4
0x0992	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0994	0xF0010382  AND	R3, R1, #130
0x0998	0x2B82    CMP	R3, #130
0x099A	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x099C	0xF2060510  ADDW	R5, R6, #16
0x09A0	0xF2020408  ADDW	R4, R2, #8
0x09A4	0xF04F0301  MOV	R3, #1
0x09A8	0x40A3    LSLS	R3, R4
0x09AA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x09AC	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x09AE	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x09B0	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x09B2	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x09B4	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x09B8	0xF8DDE000  LDR	LR, [SP, #0]
0x09BC	0xB001    ADD	SP, SP, #4
0x09BE	0x4770    BX	LR
0x09C0	0xFC00FFFF  	#-1024
0x09C4	0x00140008  	#524308
0x09C8	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0230	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0232	0x4919    LDR	R1, [PC, #100]
0x0234	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0238	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x023A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x023C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x023E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0240	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0242	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0244	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0246	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0248	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x024A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x024C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x024E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0250	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0252	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0254	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0256	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x025A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x025C	0x490F    LDR	R1, [PC, #60]
0x025E	0x4288    CMP	R0, R1
0x0260	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0262	0x490F    LDR	R1, [PC, #60]
0x0264	0x4288    CMP	R0, R1
0x0266	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0268	0x490E    LDR	R1, [PC, #56]
0x026A	0x4288    CMP	R0, R1
0x026C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x026E	0x490E    LDR	R1, [PC, #56]
0x0270	0x4288    CMP	R0, R1
0x0272	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0274	0x490D    LDR	R1, [PC, #52]
0x0276	0x4288    CMP	R0, R1
0x0278	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x027A	0x490D    LDR	R1, [PC, #52]
0x027C	0x4288    CMP	R0, R1
0x027E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0280	0x490C    LDR	R1, [PC, #48]
0x0282	0x4288    CMP	R0, R1
0x0284	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0286	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0288	0x490B    LDR	R1, [PC, #44]
0x028A	0x6809    LDR	R1, [R1, #0]
0x028C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0290	0x4909    LDR	R1, [PC, #36]
0x0292	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0294	0xB001    ADD	SP, SP, #4
0x0296	0x4770    BX	LR
0x0298	0xFC00FFFF  	#-1024
0x029C	0x08004001  	#1073809408
0x02A0	0x0C004001  	#1073810432
0x02A4	0x10004001  	#1073811456
0x02A8	0x14004001  	#1073812480
0x02AC	0x18004001  	#1073813504
0x02B0	0x1C004001  	#1073814528
0x02B4	0x20004001  	#1073815552
0x02B8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0D44	0xB081    SUB	SP, SP, #4
0x0D46	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x0D4A	0x4A04    LDR	R2, [PC, #16]
0x0D4C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0D4E	0xF7FFFD43  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0D52	0xF8DDE000  LDR	LR, [SP, #0]
0x0D56	0xB001    ADD	SP, SP, #4
0x0D58	0x4770    BX	LR
0x0D5A	0xBF00    NOP
0x0D5C	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x13D8	0xB081    SUB	SP, SP, #4
0x13DA	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x13DE	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x13E0	0x2901    CMP	R1, #1
0x13E2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x13E4	0xF2400120  MOVW	R1, #32
0x13E8	0x4865    LDR	R0, [PC, #404]
0x13EA	0xF7FFFC25  BL	_GPIO_Digital_Input+0
0x13EE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x13F0	0xF2400120  MOVW	R1, #32
0x13F4	0x4862    LDR	R0, [PC, #392]
0x13F6	0xF7FFFCA5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x13FA	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x13FC	0x2901    CMP	R1, #1
0x13FE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x1400	0xF2400108  MOVW	R1, #8
0x1404	0x485F    LDR	R0, [PC, #380]
0x1406	0xF7FFFC17  BL	_GPIO_Digital_Input+0
0x140A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x140C	0xF2400108  MOVW	R1, #8
0x1410	0x485C    LDR	R0, [PC, #368]
0x1412	0xF7FFFC97  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x1416	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x1418	0x2901    CMP	R1, #1
0x141A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x141C	0xF2440100  MOVW	R1, #16384
0x1420	0x4859    LDR	R0, [PC, #356]
0x1422	0xF7FFFC09  BL	_GPIO_Digital_Input+0
0x1426	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x1428	0xF2440100  MOVW	R1, #16384
0x142C	0x4856    LDR	R0, [PC, #344]
0x142E	0xF7FFFC89  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x1432	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x1434	0x2901    CMP	R1, #1
0x1436	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x1438	0xF2404100  MOVW	R1, #1024
0x143C	0x4851    LDR	R0, [PC, #324]
0x143E	0xF7FFFBFB  BL	_GPIO_Digital_Input+0
0x1442	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x1444	0xF2404100  MOVW	R1, #1024
0x1448	0x484E    LDR	R0, [PC, #312]
0x144A	0xF7FFFC7B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x144E	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x1450	0x2901    CMP	R1, #1
0x1452	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x1454	0xF6400100  MOVW	R1, #2048
0x1458	0x484A    LDR	R0, [PC, #296]
0x145A	0xF7FFFBED  BL	_GPIO_Digital_Input+0
0x145E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x1460	0xF6400100  MOVW	R1, #2048
0x1464	0x4847    LDR	R0, [PC, #284]
0x1466	0xF7FFFC6D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x146A	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x146C	0x2901    CMP	R1, #1
0x146E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x1470	0xF2410100  MOVW	R1, #4096
0x1474	0x4843    LDR	R0, [PC, #268]
0x1476	0xF7FFFBDF  BL	_GPIO_Digital_Input+0
0x147A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x147C	0xF2410100  MOVW	R1, #4096
0x1480	0x4840    LDR	R0, [PC, #256]
0x1482	0xF7FFFC5F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x1486	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x1488	0x2901    CMP	R1, #1
0x148A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x148C	0xF2410100  MOVW	R1, #4096
0x1490	0x483D    LDR	R0, [PC, #244]
0x1492	0xF7FFFBD1  BL	_GPIO_Digital_Input+0
0x1496	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x1498	0xF2410100  MOVW	R1, #4096
0x149C	0x483A    LDR	R0, [PC, #232]
0x149E	0xF7FFFC51  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x14A2	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x14A4	0x2901    CMP	R1, #1
0x14A6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x14A8	0xF6400100  MOVW	R1, #2048
0x14AC	0x4836    LDR	R0, [PC, #216]
0x14AE	0xF7FFFBC3  BL	_GPIO_Digital_Input+0
0x14B2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x14B4	0xF6400100  MOVW	R1, #2048
0x14B8	0x4833    LDR	R0, [PC, #204]
0x14BA	0xF7FFFC43  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x14BE	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x14C0	0x2901    CMP	R1, #1
0x14C2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x14C4	0xF2400140  MOVW	R1, #64
0x14C8	0x482F    LDR	R0, [PC, #188]
0x14CA	0xF7FFFBB5  BL	_GPIO_Digital_Input+0
0x14CE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x14D0	0xF2400140  MOVW	R1, #64
0x14D4	0x482C    LDR	R0, [PC, #176]
0x14D6	0xF7FFFC35  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x14DA	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x14DC	0x2901    CMP	R1, #1
0x14DE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x14E0	0xF2400120  MOVW	R1, #32
0x14E4	0x4828    LDR	R0, [PC, #160]
0x14E6	0xF7FFFBA7  BL	_GPIO_Digital_Input+0
0x14EA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x14EC	0xF2400120  MOVW	R1, #32
0x14F0	0x4825    LDR	R0, [PC, #148]
0x14F2	0xF7FFFC27  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x14F6	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x14F8	0x2901    CMP	R1, #1
0x14FA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x14FC	0xF2400140  MOVW	R1, #64
0x1500	0x4822    LDR	R0, [PC, #136]
0x1502	0xF7FFFB99  BL	_GPIO_Digital_Input+0
0x1506	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x1508	0xF2400140  MOVW	R1, #64
0x150C	0x481F    LDR	R0, [PC, #124]
0x150E	0xF7FFFC19  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x1512	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x1514	0x2901    CMP	R1, #1
0x1516	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x1518	0xF2400180  MOVW	R1, #128
0x151C	0x481B    LDR	R0, [PC, #108]
0x151E	0xF7FFFB8B  BL	_GPIO_Digital_Input+0
0x1522	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x1524	0xF2400180  MOVW	R1, #128
0x1528	0x4818    LDR	R0, [PC, #96]
0x152A	0xF7FFFC0B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x152E	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x1530	0x2001    MOVS	R0, #1
0x1532	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1534	0x2800    CMP	R0, #0
0x1536	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x153A	0x2801    CMP	R0, #1
0x153C	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x1540	0x2802    CMP	R0, #2
0x1542	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x1546	0x2803    CMP	R0, #3
0x1548	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x154C	0x2804    CMP	R0, #4
0x154E	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x1552	0x2805    CMP	R0, #5
0x1554	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x1558	0x2806    CMP	R0, #6
0x155A	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x155E	0x2807    CMP	R0, #7
0x1560	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x1562	0x2808    CMP	R0, #8
0x1564	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x1566	0x2809    CMP	R0, #9
0x1568	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x156A	0x280A    CMP	R0, #10
0x156C	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x156E	0x280B    CMP	R0, #11
0x1570	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1572	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x1574	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x1576	0xF8DDE000  LDR	LR, [SP, #0]
0x157A	0xB001    ADD	SP, SP, #4
0x157C	0x4770    BX	LR
0x157E	0xBF00    NOP
0x1580	0x08004001  	GPIOA_BASE+0
0x1584	0x10004001  	GPIOC_BASE+0
0x1588	0x14004001  	GPIOD_BASE+0
0x158C	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_uartInit:
;easymx_v7_STM32F107VC.c, 253 :: 		T_mikrobus_ret mikrobus_uartInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1880	0xB081    SUB	SP, SP, #4
0x1882	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 255 :: 		switch( bus )
0x1886	0xE009    B	L_mikrobus_uartInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 258 :: 		case _MIKROBUS1 : return _uartInit_1( cfg );
L_mikrobus_uartInit85:
0x1888	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x188A	0xF7FFFC91  BL	easymx_v7_STM32F107VC__uartInit_1+0
0x188E	0xE00A    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 261 :: 		case _MIKROBUS2 : return _uartInit_2( cfg );
L_mikrobus_uartInit86:
; cfg start address is: 4 (R1)
0x1890	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x1892	0xF7FFFCA9  BL	easymx_v7_STM32F107VC__uartInit_2+0
0x1896	0xE006    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 275 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_uartInit87:
0x1898	0x2001    MOVS	R0, #1
0x189A	0xE004    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 276 :: 		}
L_mikrobus_uartInit83:
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x189C	0x2800    CMP	R0, #0
0x189E	0xD0F3    BEQ	L_mikrobus_uartInit85
0x18A0	0x2801    CMP	R0, #1
0x18A2	0xD0F5    BEQ	L_mikrobus_uartInit86
; bus end address is: 0 (R0)
; cfg end address is: 4 (R1)
0x18A4	0xE7F8    B	L_mikrobus_uartInit87
;easymx_v7_STM32F107VC.c, 278 :: 		}
L_end_mikrobus_uartInit:
0x18A6	0xF8DDE000  LDR	LR, [SP, #0]
0x18AA	0xB001    ADD	SP, SP, #4
0x18AC	0x4770    BX	LR
; end of _mikrobus_uartInit
easymx_v7_STM32F107VC__uartInit_1:
;__em_f107vc_uart.c, 29 :: 		static T_mikrobus_ret _uartInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x11B0	0xB081    SUB	SP, SP, #4
0x11B2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 31 :: 		UART3_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART3_PD89);
0x11B6	0x4D0B    LDR	R5, [PC, #44]
0x11B8	0xF200010C  ADDW	R1, R0, #12
0x11BC	0x680C    LDR	R4, [R1, #0]
0x11BE	0xF2000108  ADDW	R1, R0, #8
0x11C2	0x680B    LDR	R3, [R1, #0]
0x11C4	0x1D01    ADDS	R1, R0, #4
0x11C6	0x680A    LDR	R2, [R1, #0]
0x11C8	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x11CA	0x4608    MOV	R0, R1
0x11CC	0xB291    UXTH	R1, R2
0x11CE	0xB29A    UXTH	R2, R3
0x11D0	0xB2A3    UXTH	R3, R4
0x11D2	0xB420    PUSH	(R5)
0x11D4	0xF7FFFCC6  BL	_UART3_Init_Advanced+0
0x11D8	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 32 :: 		return _MIKROBUS_OK;
0x11DA	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 33 :: 		}
L_end__uartInit_1:
0x11DC	0xF8DDE000  LDR	LR, [SP, #0]
0x11E0	0xB001    ADD	SP, SP, #4
0x11E2	0x4770    BX	LR
0x11E4	0x29540000  	__GPIO_MODULE_USART3_PD89+0
; end of easymx_v7_STM32F107VC__uartInit_1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0B64	0xB081    SUB	SP, SP, #4
0x0B66	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0B6A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x0B6C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0B6E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0B70	0xB408    PUSH	(R3)
0x0B72	0xB293    UXTH	R3, R2
0x0B74	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0B76	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0B78	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0B7A	0xF7FFFCCB  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0B7E	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x0B80	0xF8DDE000  LDR	LR, [SP, #0]
0x0B84	0xB001    ADD	SP, SP, #4
0x0B86	0x4770    BX	LR
0x0B88	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0514	0xB089    SUB	SP, SP, #36
0x0516	0xF8CDE000  STR	LR, [SP, #0]
0x051A	0x4683    MOV	R11, R0
0x051C	0xB298    UXTH	R0, R3
0x051E	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0520	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0524	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0526	0xAC04    ADD	R4, SP, #16
0x0528	0xF8AD1004  STRH	R1, [SP, #4]
0x052C	0xF8AD0008  STRH	R0, [SP, #8]
0x0530	0x4620    MOV	R0, R4
0x0532	0xF7FFFEC3  BL	_RCC_GetClocksFrequency+0
0x0536	0xF8BD0008  LDRH	R0, [SP, #8]
0x053A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x053E	0x4C64    LDR	R4, [PC, #400]
0x0540	0x45A3    CMP	R11, R4
0x0542	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0544	0x2501    MOVS	R5, #1
0x0546	0xB26D    SXTB	R5, R5
0x0548	0x4C62    LDR	R4, [PC, #392]
0x054A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x054C	0x4D62    LDR	R5, [PC, #392]
0x054E	0x4C63    LDR	R4, [PC, #396]
0x0550	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0552	0x4D63    LDR	R5, [PC, #396]
0x0554	0x4C63    LDR	R4, [PC, #396]
0x0556	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0558	0x4D63    LDR	R5, [PC, #396]
0x055A	0x4C64    LDR	R4, [PC, #400]
0x055C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x055E	0x4D64    LDR	R5, [PC, #400]
0x0560	0x4C64    LDR	R4, [PC, #400]
0x0562	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0564	0x9C07    LDR	R4, [SP, #28]
0x0566	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0568	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x056A	0x4C63    LDR	R4, [PC, #396]
0x056C	0x45A3    CMP	R11, R4
0x056E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0570	0x2501    MOVS	R5, #1
0x0572	0xB26D    SXTB	R5, R5
0x0574	0x4C61    LDR	R4, [PC, #388]
0x0576	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0578	0x4D61    LDR	R5, [PC, #388]
0x057A	0x4C58    LDR	R4, [PC, #352]
0x057C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x057E	0x4D61    LDR	R5, [PC, #388]
0x0580	0x4C58    LDR	R4, [PC, #352]
0x0582	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0584	0x4D60    LDR	R5, [PC, #384]
0x0586	0x4C59    LDR	R4, [PC, #356]
0x0588	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x058A	0x4D60    LDR	R5, [PC, #384]
0x058C	0x4C59    LDR	R4, [PC, #356]
0x058E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0590	0x9C06    LDR	R4, [SP, #24]
0x0592	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0594	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0596	0x4C5E    LDR	R4, [PC, #376]
0x0598	0x45A3    CMP	R11, R4
0x059A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x059C	0x2501    MOVS	R5, #1
0x059E	0xB26D    SXTB	R5, R5
0x05A0	0x4C5C    LDR	R4, [PC, #368]
0x05A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x05A4	0x4D5C    LDR	R5, [PC, #368]
0x05A6	0x4C4D    LDR	R4, [PC, #308]
0x05A8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x05AA	0x4D5C    LDR	R5, [PC, #368]
0x05AC	0x4C4D    LDR	R4, [PC, #308]
0x05AE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x05B0	0x4D5B    LDR	R5, [PC, #364]
0x05B2	0x4C4E    LDR	R4, [PC, #312]
0x05B4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x05B6	0x4D5B    LDR	R5, [PC, #364]
0x05B8	0x4C4E    LDR	R4, [PC, #312]
0x05BA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x05BC	0x9C06    LDR	R4, [SP, #24]
0x05BE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x05C0	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x05C2	0x4C59    LDR	R4, [PC, #356]
0x05C4	0x45A3    CMP	R11, R4
0x05C6	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x05C8	0x2501    MOVS	R5, #1
0x05CA	0xB26D    SXTB	R5, R5
0x05CC	0x4C57    LDR	R4, [PC, #348]
0x05CE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x05D0	0x4D57    LDR	R5, [PC, #348]
0x05D2	0x4C42    LDR	R4, [PC, #264]
0x05D4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x05D6	0x4D57    LDR	R5, [PC, #348]
0x05D8	0x4C42    LDR	R4, [PC, #264]
0x05DA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x05DC	0x4D56    LDR	R5, [PC, #344]
0x05DE	0x4C43    LDR	R4, [PC, #268]
0x05E0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x05E2	0x4D56    LDR	R5, [PC, #344]
0x05E4	0x4C43    LDR	R4, [PC, #268]
0x05E6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x05E8	0x9C06    LDR	R4, [SP, #24]
0x05EA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x05EC	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x05EE	0x4C54    LDR	R4, [PC, #336]
0x05F0	0x45A3    CMP	R11, R4
0x05F2	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x05F4	0x2501    MOVS	R5, #1
0x05F6	0xB26D    SXTB	R5, R5
0x05F8	0x4C52    LDR	R4, [PC, #328]
0x05FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x05FC	0x4D52    LDR	R5, [PC, #328]
0x05FE	0x4C37    LDR	R4, [PC, #220]
0x0600	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0602	0x4D52    LDR	R5, [PC, #328]
0x0604	0x4C37    LDR	R4, [PC, #220]
0x0606	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0608	0x4D51    LDR	R5, [PC, #324]
0x060A	0x4C38    LDR	R4, [PC, #224]
0x060C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x060E	0x4D51    LDR	R5, [PC, #324]
0x0610	0x4C38    LDR	R4, [PC, #224]
0x0612	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0614	0x9C06    LDR	R4, [SP, #24]
0x0616	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0618	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x061C	0xF8AD0008  STRH	R0, [SP, #8]
0x0620	0x4630    MOV	R0, R6
0x0622	0xF7FFFED7  BL	_GPIO_Alternate_Function_Enable+0
0x0626	0xF8BD0008  LDRH	R0, [SP, #8]
0x062A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x062E	0xF10B0510  ADD	R5, R11, #16
0x0632	0x2400    MOVS	R4, #0
0x0634	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0636	0xF10B0510  ADD	R5, R11, #16
0x063A	0x682C    LDR	R4, [R5, #0]
0x063C	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x063E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0640	0xF10B050C  ADD	R5, R11, #12
0x0644	0x2400    MOVS	R4, #0
0x0646	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0648	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x064A	0xF4406080  ORR	R0, R0, #1024
0x064E	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0650	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0652	0xF10B050C  ADD	R5, R11, #12
0x0656	0x682C    LDR	R4, [R5, #0]
0x0658	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x065A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x065C	0xF10B060C  ADD	R6, R11, #12
0x0660	0x2501    MOVS	R5, #1
0x0662	0x6834    LDR	R4, [R6, #0]
0x0664	0xF365344D  BFI	R4, R5, #13, #1
0x0668	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x066A	0xF10B060C  ADD	R6, R11, #12
0x066E	0x2501    MOVS	R5, #1
0x0670	0x6834    LDR	R4, [R6, #0]
0x0672	0xF36504C3  BFI	R4, R5, #3, #1
0x0676	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0678	0xF10B060C  ADD	R6, R11, #12
0x067C	0x2501    MOVS	R5, #1
0x067E	0x6834    LDR	R4, [R6, #0]
0x0680	0xF3650482  BFI	R4, R5, #2, #1
0x0684	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0686	0xF10B0514  ADD	R5, R11, #20
0x068A	0x2400    MOVS	R4, #0
0x068C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x068E	0x9D03    LDR	R5, [SP, #12]
0x0690	0x2419    MOVS	R4, #25
0x0692	0x4365    MULS	R5, R4, R5
0x0694	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0698	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x069C	0x2464    MOVS	R4, #100
0x069E	0xFBB7F4F4  UDIV	R4, R7, R4
0x06A2	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x06A4	0x0935    LSRS	R5, R6, #4
0x06A6	0x2464    MOVS	R4, #100
0x06A8	0x436C    MULS	R4, R5, R4
0x06AA	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x06AC	0x0124    LSLS	R4, R4, #4
0x06AE	0xF2040532  ADDW	R5, R4, #50
0x06B2	0x2464    MOVS	R4, #100
0x06B4	0xFBB5F4F4  UDIV	R4, R5, R4
0x06B8	0xF004040F  AND	R4, R4, #15
0x06BC	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x06C0	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x06C4	0xB2A4    UXTH	R4, R4
0x06C6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x06C8	0xF8DDE000  LDR	LR, [SP, #0]
0x06CC	0xB009    ADD	SP, SP, #36
0x06CE	0x4770    BX	LR
0x06D0	0x38004001  	USART1_SR+0
0x06D4	0x03384242  	RCC_APB2ENR+0
0x06D8	0x039D0000  	_UART1_Write+0
0x06DC	0x09DC2000  	_UART_Wr_Ptr+0
0x06E0	0x0B050000  	_UART1_Read+0
0x06E4	0x09E02000  	_UART_Rd_Ptr+0
0x06E8	0x0B350000  	_UART1_Data_Ready+0
0x06EC	0x09E42000  	_UART_Rdy_Ptr+0
0x06F0	0x0B1D0000  	_UART1_Tx_Idle+0
0x06F4	0x09E82000  	_UART_Tx_Idle_Ptr+0
0x06F8	0x44004000  	USART2_SR+0
0x06FC	0x03C44242  	RCC_APB1ENR+0
0x0700	0x03B90000  	_UART2_Write+0
0x0704	0x0A5D0000  	_UART2_Read+0
0x0708	0x0AA50000  	_UART2_Data_Ready+0
0x070C	0x0A8D0000  	_UART2_Tx_Idle+0
0x0710	0x48004000  	USART3_SR+0
0x0714	0x03C84242  	RCC_APB1ENR+0
0x0718	0x02150000  	_UART3_Write+0
0x071C	0x0A750000  	_UART3_Read+0
0x0720	0x0B4D0000  	_UART3_Data_Ready+0
0x0724	0x0DD10000  	_UART3_Tx_Idle+0
0x0728	0x4C004000  	UART4_SR+0
0x072C	0x03CC4242  	RCC_APB1ENR+0
0x0730	0x03810000  	_UART4_Write+0
0x0734	0x0D790000  	_UART4_Read+0
0x0738	0x0D910000  	_UART4_Data_Ready+0
0x073C	0x0D610000  	_UART4_Tx_Idle+0
0x0740	0x50004000  	UART5_SR+0
0x0744	0x03D04242  	RCC_APB1ENR+0
0x0748	0x03650000  	_UART5_Write+0
0x074C	0x0E010000  	_UART5_Read+0
0x0750	0x0E190000  	_UART5_Data_Ready+0
0x0754	0x0DE90000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 456 :: 		
; RCC_Clocks start address is: 0 (R0)
0x02BC	0xB082    SUB	SP, SP, #8
0x02BE	0xF8CDE000  STR	LR, [SP, #0]
0x02C2	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 459 :: 		
0x02C4	0x4619    MOV	R1, R3
0x02C6	0x9101    STR	R1, [SP, #4]
0x02C8	0xF7FFFF9E  BL	_Get_Fosc_kHz+0
0x02CC	0xF24031E8  MOVW	R1, #1000
0x02D0	0xFB00F201  MUL	R2, R0, R1
0x02D4	0x9901    LDR	R1, [SP, #4]
0x02D6	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 462 :: 		
0x02D8	0x491F    LDR	R1, [PC, #124]
0x02DA	0x7809    LDRB	R1, [R1, #0]
0x02DC	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x02E0	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 463 :: 		
0x02E2	0x491E    LDR	R1, [PC, #120]
0x02E4	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x02E6	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x02E8	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 465 :: 		
0x02EA	0x1D1A    ADDS	R2, R3, #4
0x02EC	0x6819    LDR	R1, [R3, #0]
0x02EE	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x02F0	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 467 :: 		
0x02F2	0x4919    LDR	R1, [PC, #100]
0x02F4	0x8809    LDRH	R1, [R1, #0]
0x02F6	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x02FA	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 468 :: 		
0x02FC	0x4917    LDR	R1, [PC, #92]
0x02FE	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0300	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0302	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 470 :: 		
0x0304	0xF2030208  ADDW	R2, R3, #8
0x0308	0x1D19    ADDS	R1, R3, #4
0x030A	0x6809    LDR	R1, [R1, #0]
0x030C	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x030E	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 472 :: 		
0x0310	0x4911    LDR	R1, [PC, #68]
0x0312	0x8809    LDRH	R1, [R1, #0]
0x0314	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0318	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 473 :: 		
0x031A	0x4910    LDR	R1, [PC, #64]
0x031C	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x031E	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0320	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 475 :: 		
0x0322	0xF203020C  ADDW	R2, R3, #12
0x0326	0x1D19    ADDS	R1, R3, #4
0x0328	0x6809    LDR	R1, [R1, #0]
0x032A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x032C	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
0x032E	0x490A    LDR	R1, [PC, #40]
0x0330	0x8809    LDRH	R1, [R1, #0]
0x0332	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0336	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 478 :: 		
0x0338	0x4909    LDR	R1, [PC, #36]
0x033A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x033C	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x033E	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 480 :: 		
0x0340	0xF2030210  ADDW	R2, R3, #16
0x0344	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0348	0x6809    LDR	R1, [R1, #0]
0x034A	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x034E	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 481 :: 		
L_end_RCC_GetClocksFrequency:
0x0350	0xF8DDE000  LDR	LR, [SP, #0]
0x0354	0xB002    ADD	SP, SP, #8
0x0356	0x4770    BX	LR
0x0358	0x10044002  	RCC_CFGRbits+0
0x035C	0x2B3B0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0360	0x2B680000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0208	0x4801    LDR	R0, [PC, #4]
0x020A	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x020C	0x4770    BX	LR
0x020E	0xBF00    NOP
0x0210	0x09D82000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x03D4	0xB081    SUB	SP, SP, #4
0x03D6	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x03DA	0x2201    MOVS	R2, #1
0x03DC	0xB252    SXTB	R2, R2
0x03DE	0x493E    LDR	R1, [PC, #248]
0x03E0	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x03E2	0xF2000168  ADDW	R1, R0, #104
0x03E6	0x680B    LDR	R3, [R1, #0]
0x03E8	0xF06F6100  MVN	R1, #134217728
0x03EC	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x03F0	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x03F2	0xF0036100  AND	R1, R3, #134217728
0x03F6	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x03F8	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x03FA	0xF0024100  AND	R1, R2, #-2147483648
0x03FE	0xF1B14F00  CMP	R1, #-2147483648
0x0402	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0404	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0406	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0408	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x040A	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x040C	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x040E	0xF4042170  AND	R1, R4, #983040
0x0412	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0414	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0416	0xF64F71FF  MOVW	R1, #65535
0x041A	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x041E	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0420	0xF4041140  AND	R1, R4, #3145728
0x0424	0xF5B11F40  CMP	R1, #3145728
0x0428	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x042A	0xF06F6170  MVN	R1, #251658240
0x042E	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0432	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0434	0x492A    LDR	R1, [PC, #168]
0x0436	0x680A    LDR	R2, [R1, #0]
0x0438	0xF06F6170  MVN	R1, #251658240
0x043C	0x400A    ANDS	R2, R1
0x043E	0x4928    LDR	R1, [PC, #160]
0x0440	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0442	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0444	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0446	0xF4041180  AND	R1, R4, #1048576
0x044A	0xF5B11F80  CMP	R1, #1048576
0x044E	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0450	0xF04F0103  MOV	R1, #3
0x0454	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0456	0x43C9    MVN	R1, R1
0x0458	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x045C	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0460	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0462	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0464	0x0D61    LSRS	R1, R4, #21
0x0466	0x0109    LSLS	R1, R1, #4
0x0468	0xFA05F101  LSL	R1, R5, R1
0x046C	0x43C9    MVN	R1, R1
0x046E	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0470	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0474	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0476	0x0D61    LSRS	R1, R4, #21
0x0478	0x0109    LSLS	R1, R1, #4
0x047A	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x047E	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0480	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0482	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0486	0xF1B14F00  CMP	R1, #-2147483648
0x048A	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x048C	0x4913    LDR	R1, [PC, #76]
0x048E	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0490	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0492	0x4913    LDR	R1, [PC, #76]
0x0494	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0496	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x049A	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x049C	0xEA4F018A  LSL	R1, R10, #2
0x04A0	0xEB090101  ADD	R1, R9, R1, LSL #0
0x04A4	0x6809    LDR	R1, [R1, #0]
0x04A6	0xF1B13FFF  CMP	R1, #-1
0x04AA	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x04AC	0xF1090134  ADD	R1, R9, #52
0x04B0	0xEA4F038A  LSL	R3, R10, #2
0x04B4	0x18C9    ADDS	R1, R1, R3
0x04B6	0x6809    LDR	R1, [R1, #0]
0x04B8	0x460A    MOV	R2, R1
0x04BA	0xEB090103  ADD	R1, R9, R3, LSL #0
0x04BE	0x6809    LDR	R1, [R1, #0]
0x04C0	0x4608    MOV	R0, R1
0x04C2	0x4611    MOV	R1, R2
0x04C4	0xF7FFFE54  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x04C8	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x04CC	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x04CE	0xF8DDE000  LDR	LR, [SP, #0]
0x04D2	0xB001    ADD	SP, SP, #4
0x04D4	0x4770    BX	LR
0x04D6	0xBF00    NOP
0x04D8	0x03004242  	RCC_APB2ENRbits+0
0x04DC	0x001C4001  	AFIO_MAPR2+0
0x04E0	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0170	0xB083    SUB	SP, SP, #12
0x0172	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0176	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x017A	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x017C	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x017E	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0182	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0184	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0186	0x4A19    LDR	R2, [PC, #100]
0x0188	0x9202    STR	R2, [SP, #8]
0x018A	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x018C	0x4A18    LDR	R2, [PC, #96]
0x018E	0x9202    STR	R2, [SP, #8]
0x0190	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0192	0x4A18    LDR	R2, [PC, #96]
0x0194	0x9202    STR	R2, [SP, #8]
0x0196	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0198	0x4A17    LDR	R2, [PC, #92]
0x019A	0x9202    STR	R2, [SP, #8]
0x019C	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x019E	0x4A17    LDR	R2, [PC, #92]
0x01A0	0x9202    STR	R2, [SP, #8]
0x01A2	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x01A4	0x4A16    LDR	R2, [PC, #88]
0x01A6	0x9202    STR	R2, [SP, #8]
0x01A8	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x01AA	0x4A16    LDR	R2, [PC, #88]
0x01AC	0x9202    STR	R2, [SP, #8]
0x01AE	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x01B0	0x2800    CMP	R0, #0
0x01B2	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01B4	0x2801    CMP	R0, #1
0x01B6	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01B8	0x2802    CMP	R0, #2
0x01BA	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01BC	0x2803    CMP	R0, #3
0x01BE	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01C0	0x2804    CMP	R0, #4
0x01C2	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01C4	0x2805    CMP	R0, #5
0x01C6	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01C8	0x2806    CMP	R0, #6
0x01CA	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01CC	0x2201    MOVS	R2, #1
0x01CE	0xB212    SXTH	R2, R2
0x01D0	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01D2	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01D6	0x9802    LDR	R0, [SP, #8]
0x01D8	0x460A    MOV	R2, R1
0x01DA	0xF8BD1004  LDRH	R1, [SP, #4]
0x01DE	0xF000FAFB  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01E2	0xF8DDE000  LDR	LR, [SP, #0]
0x01E6	0xB003    ADD	SP, SP, #12
0x01E8	0x4770    BX	LR
0x01EA	0xBF00    NOP
0x01EC	0x08004001  	#1073809408
0x01F0	0x0C004001  	#1073810432
0x01F4	0x10004001  	#1073811456
0x01F8	0x14004001  	#1073812480
0x01FC	0x18004001  	#1073813504
0x0200	0x1C004001  	#1073814528
0x0204	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__uartInit_2:
;__em_f107vc_uart.c, 35 :: 		static T_mikrobus_ret _uartInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x11E8	0xB081    SUB	SP, SP, #4
0x11EA	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 37 :: 		UART2_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART2_PD56);
0x11EE	0x4D0B    LDR	R5, [PC, #44]
0x11F0	0xF200010C  ADDW	R1, R0, #12
0x11F4	0x680C    LDR	R4, [R1, #0]
0x11F6	0xF2000108  ADDW	R1, R0, #8
0x11FA	0x680B    LDR	R3, [R1, #0]
0x11FC	0x1D01    ADDS	R1, R0, #4
0x11FE	0x680A    LDR	R2, [R1, #0]
0x1200	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1202	0x4608    MOV	R0, R1
0x1204	0xB291    UXTH	R1, R2
0x1206	0xB29A    UXTH	R2, R3
0x1208	0xB2A3    UXTH	R3, R4
0x120A	0xB420    PUSH	(R5)
0x120C	0xF7FFFCEA  BL	_UART2_Init_Advanced+0
0x1210	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 38 :: 		return _MIKROBUS_OK;
0x1212	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 39 :: 		}
L_end__uartInit_2:
0x1214	0xF8DDE000  LDR	LR, [SP, #0]
0x1218	0xB001    ADD	SP, SP, #4
0x121A	0x4770    BX	LR
0x121C	0x2A2C0000  	__GPIO_MODULE_USART2_PD56+0
; end of easymx_v7_STM32F107VC__uartInit_2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0BE4	0xB081    SUB	SP, SP, #4
0x0BE6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0BEA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x0BEC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0BEE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0BF0	0xB408    PUSH	(R3)
0x0BF2	0xB293    UXTH	R3, R2
0x0BF4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0BF6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0BF8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0BFA	0xF7FFFC8B  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0BFE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x0C00	0xF8DDE000  LDR	LR, [SP, #0]
0x0C04	0xB001    ADD	SP, SP, #4
0x0C06	0x4770    BX	LR
0x0C08	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x18B0	0xB081    SUB	SP, SP, #4
0x18B2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x18B6	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x18B8	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x18BA	0xF7FFFEA1  BL	easymx_v7_STM32F107VC__log_init1+0
0x18BE	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x18C0	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x18C2	0xF7FFFEB9  BL	easymx_v7_STM32F107VC__log_init2+0
0x18C6	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x18C8	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x18CA	0xF7FFFE61  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x18CE	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x18D0	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x18D2	0xF7FFFE79  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x18D6	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x18D8	0x2001    MOVS	R0, #1
0x18DA	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x18DC	0x2800    CMP	R0, #0
0x18DE	0xD0EB    BEQ	L_mikrobus_logInit90
0x18E0	0x2801    CMP	R0, #1
0x18E2	0xD0ED    BEQ	L_mikrobus_logInit91
0x18E4	0x2820    CMP	R0, #32
0x18E6	0xD0EF    BEQ	L_mikrobus_logInit92
0x18E8	0x2830    CMP	R0, #48
0x18EA	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x18EC	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x18EE	0xF8DDE000  LDR	LR, [SP, #0]
0x18F2	0xB001    ADD	SP, SP, #4
0x18F4	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1600	0xB081    SUB	SP, SP, #4
0x1602	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x1606	0x4909    LDR	R1, [PC, #36]
0x1608	0xB402    PUSH	(R1)
0x160A	0xF2400300  MOVW	R3, #0
0x160E	0xF2400200  MOVW	R2, #0
0x1612	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1616	0xF7FFFAA5  BL	_UART3_Init_Advanced+0
0x161A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x161C	0x4A04    LDR	R2, [PC, #16]
0x161E	0x4905    LDR	R1, [PC, #20]
0x1620	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x1622	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x1624	0xF8DDE000  LDR	LR, [SP, #0]
0x1628	0xB001    ADD	SP, SP, #4
0x162A	0x4770    BX	LR
0x162C	0x29540000  	__GPIO_MODULE_USART3_PD89+0
0x1630	0x02150000  	_UART3_Write+0
0x1634	0x03BC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x1638	0xB081    SUB	SP, SP, #4
0x163A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x163E	0x4909    LDR	R1, [PC, #36]
0x1640	0xB402    PUSH	(R1)
0x1642	0xF2400300  MOVW	R3, #0
0x1646	0xF2400200  MOVW	R2, #0
0x164A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x164E	0xF7FFFAC9  BL	_UART2_Init_Advanced+0
0x1652	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x1654	0x4A04    LDR	R2, [PC, #16]
0x1656	0x4905    LDR	R1, [PC, #20]
0x1658	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x165A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x165C	0xF8DDE000  LDR	LR, [SP, #0]
0x1660	0xB001    ADD	SP, SP, #4
0x1662	0x4770    BX	LR
0x1664	0x2A2C0000  	__GPIO_MODULE_USART2_PD56+0
0x1668	0x03B90000  	_UART2_Write+0
0x166C	0x03BC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x1590	0xB081    SUB	SP, SP, #4
0x1592	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x1596	0x4909    LDR	R1, [PC, #36]
0x1598	0xB402    PUSH	(R1)
0x159A	0xF2400300  MOVW	R3, #0
0x159E	0xF2400200  MOVW	R2, #0
0x15A2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x15A6	0xF7FFFBFF  BL	_UART1_Init_Advanced+0
0x15AA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x15AC	0x4A04    LDR	R2, [PC, #16]
0x15AE	0x4905    LDR	R1, [PC, #20]
0x15B0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x15B2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x15B4	0xF8DDE000  LDR	LR, [SP, #0]
0x15B8	0xB001    ADD	SP, SP, #4
0x15BA	0x4770    BX	LR
0x15BC	0x29C00000  	__GPIO_MODULE_USART1_PA9_10+0
0x15C0	0x039D0000  	_UART1_Write+0
0x15C4	0x03BC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0DA8	0xB081    SUB	SP, SP, #4
0x0DAA	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0DAE	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x0DB0	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0DB2	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0DB4	0xB408    PUSH	(R3)
0x0DB6	0xB293    UXTH	R3, R2
0x0DB8	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0DBA	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0DBC	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0DBE	0xF7FFFBA9  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0DC2	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x0DC4	0xF8DDE000  LDR	LR, [SP, #0]
0x0DC8	0xB001    ADD	SP, SP, #4
0x0DCA	0x4770    BX	LR
0x0DCC	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x15C8	0xB081    SUB	SP, SP, #4
0x15CA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x15CE	0x4909    LDR	R1, [PC, #36]
0x15D0	0xB402    PUSH	(R1)
0x15D2	0xF2400300  MOVW	R3, #0
0x15D6	0xF2400200  MOVW	R2, #0
0x15DA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x15DE	0xF7FFFB01  BL	_UART2_Init_Advanced+0
0x15E2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x15E4	0x4A04    LDR	R2, [PC, #16]
0x15E6	0x4905    LDR	R1, [PC, #20]
0x15E8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x15EA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x15EC	0xF8DDE000  LDR	LR, [SP, #0]
0x15F0	0xB001    ADD	SP, SP, #4
0x15F2	0x4770    BX	LR
0x15F4	0x2A2C0000  	__GPIO_MODULE_USART2_PD56+0
0x15F8	0x03B90000  	_UART2_Write+0
0x15FC	0x03BC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_applicationInit:
;Click_GNSS_STM.c, 77 :: 		void applicationInit()
0x1EA8	0xB081    SUB	SP, SP, #4
0x1EAA	0xF8CDE000  STR	LR, [SP, #0]
;Click_GNSS_STM.c, 80 :: 		gnss_configTimer();
0x1EAE	0xF7FFFD23  BL	Click_GNSS_STM_gnss_configTimer+0
;Click_GNSS_STM.c, 83 :: 		gnss_uartDriverInit((T_GNSS_P)&_MIKROBUS1_GPIO, (T_GNSS_P)&_MIKROBUS1_UART);
0x1EB2	0x4910    LDR	R1, [PC, #64]
0x1EB4	0x4810    LDR	R0, [PC, #64]
0x1EB6	0xF7FFFDC1  BL	_gnss_uartDriverInit+0
;Click_GNSS_STM.c, 84 :: 		gnss_coreInit( gnss_default_handler, 1500 );
0x1EBA	0x4810    LDR	R0, [PC, #64]
0x1EBC	0xF24051DC  MOVW	R1, #1500
0x1EC0	0xF7FFFD46  BL	_gnss_coreInit+0
;Click_GNSS_STM.c, 87 :: 		gnss_hfcEnable( 1 );
0x1EC4	0x2001    MOVS	R0, #1
0x1EC6	0xF7FFFE91  BL	_gnss_hfcEnable+0
;Click_GNSS_STM.c, 88 :: 		gnss_modulePower( 1 );
0x1ECA	0x2001    MOVS	R0, #1
0x1ECC	0xF7FFFC30  BL	_gnss_modulePower+0
;Click_GNSS_STM.c, 90 :: 		Delay_ms( 5000 );
0x1ED0	0xF24867FF  MOVW	R7, #34559
0x1ED4	0xF2C03793  MOVT	R7, #915
L_applicationInit1:
0x1ED8	0x1E7F    SUBS	R7, R7, #1
0x1EDA	0xD1FD    BNE	L_applicationInit1
0x1EDC	0xBF00    NOP
0x1EDE	0xBF00    NOP
0x1EE0	0xBF00    NOP
0x1EE2	0xBF00    NOP
0x1EE4	0xBF00    NOP
;Click_GNSS_STM.c, 91 :: 		timerCounter = 0;
0x1EE6	0x2100    MOVS	R1, #0
0x1EE8	0x4805    LDR	R0, [PC, #20]
0x1EEA	0x6001    STR	R1, [R0, #0]
;Click_GNSS_STM.c, 92 :: 		}
L_end_applicationInit:
0x1EEC	0xF8DDE000  LDR	LR, [SP, #0]
0x1EF0	0xB001    ADD	SP, SP, #4
0x1EF2	0x4770    BX	LR
0x1EF4	0x2B5C0000  	__MIKROBUS1_UART+0
0x1EF8	0x2A980000  	__MIKROBUS1_GPIO+0
0x1EFC	0x0F3D0000  	_gnss_default_handler+0
0x1F00	0x00002000  	_timerCounter+0
; end of _applicationInit
Click_GNSS_STM_gnss_configTimer:
;click_gnss_timer.h, 15 :: 		static void gnss_configTimer()
0x18F8	0xB081    SUB	SP, SP, #4
0x18FA	0xF8CDE000  STR	LR, [SP, #0]
;click_gnss_timer.h, 17 :: 		RCC_APB1ENR.TIM2EN = 1;
0x18FE	0x2101    MOVS	R1, #1
0x1900	0xB249    SXTB	R1, R1
0x1902	0x480E    LDR	R0, [PC, #56]
0x1904	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 18 :: 		TIM2_CR1.CEN = 0;
0x1906	0x2100    MOVS	R1, #0
0x1908	0xB249    SXTB	R1, R1
0x190A	0x480D    LDR	R0, [PC, #52]
0x190C	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 19 :: 		TIM2_PSC = 1;
0x190E	0x2101    MOVS	R1, #1
0x1910	0x480C    LDR	R0, [PC, #48]
0x1912	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 20 :: 		TIM2_ARR = 35999;
0x1914	0xF648419F  MOVW	R1, #35999
0x1918	0x480B    LDR	R0, [PC, #44]
0x191A	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 21 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x191C	0xF240002C  MOVW	R0, #44
0x1920	0xF7FFFC0A  BL	_NVIC_IntEnable+0
;click_gnss_timer.h, 22 :: 		TIM2_DIER.UIE = 1;
0x1924	0x2101    MOVS	R1, #1
0x1926	0xB249    SXTB	R1, R1
0x1928	0x4808    LDR	R0, [PC, #32]
0x192A	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 23 :: 		TIM2_CR1.CEN = 1;
0x192C	0x4804    LDR	R0, [PC, #16]
0x192E	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 24 :: 		EnableInterrupts();
0x1930	0xF7FFFBD2  BL	_EnableInterrupts+0
;click_gnss_timer.h, 25 :: 		}
L_end_gnss_configTimer:
0x1934	0xF8DDE000  LDR	LR, [SP, #0]
0x1938	0xB001    ADD	SP, SP, #4
0x193A	0x4770    BX	LR
0x193C	0x03804242  	RCC_APB1ENR+0
0x1940	0x00004200  	TIM2_CR1+0
0x1944	0x00284000  	TIM2_PSC+0
0x1948	0x002C4000  	TIM2_ARR+0
0x194C	0x01804200  	TIM2_DIER+0
; end of Click_GNSS_STM_gnss_configTimer
_NVIC_IntEnable:
;__Lib_System_105_107.c, 156 :: 		
; ivt start address is: 0 (R0)
0x1138	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_105_107.c, 168 :: 		
0x113A	0x2804    CMP	R0, #4
0x113C	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 173 :: 		
0x113E	0x4919    LDR	R1, [PC, #100]
0x1140	0x6809    LDR	R1, [R1, #0]
0x1142	0xF4413280  ORR	R2, R1, #65536
0x1146	0x4917    LDR	R1, [PC, #92]
0x1148	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 174 :: 		
0x114A	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_105_107.c, 175 :: 		
; ivt start address is: 0 (R0)
0x114C	0x2805    CMP	R0, #5
0x114E	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 180 :: 		
0x1150	0x4914    LDR	R1, [PC, #80]
0x1152	0x6809    LDR	R1, [R1, #0]
0x1154	0xF4413200  ORR	R2, R1, #131072
0x1158	0x4912    LDR	R1, [PC, #72]
0x115A	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 181 :: 		
0x115C	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_105_107.c, 182 :: 		
; ivt start address is: 0 (R0)
0x115E	0x2806    CMP	R0, #6
0x1160	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 187 :: 		
0x1162	0x4910    LDR	R1, [PC, #64]
0x1164	0x6809    LDR	R1, [R1, #0]
0x1166	0xF4412280  ORR	R2, R1, #262144
0x116A	0x490E    LDR	R1, [PC, #56]
0x116C	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 188 :: 		
0x116E	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_105_107.c, 189 :: 		
; ivt start address is: 0 (R0)
0x1170	0x280F    CMP	R0, #15
0x1172	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 194 :: 		
0x1174	0x490C    LDR	R1, [PC, #48]
0x1176	0x6809    LDR	R1, [R1, #0]
0x1178	0xF0410202  ORR	R2, R1, #2
0x117C	0x490A    LDR	R1, [PC, #40]
0x117E	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 195 :: 		
0x1180	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_105_107.c, 196 :: 		
; ivt start address is: 0 (R0)
0x1182	0x2810    CMP	R0, #16
0x1184	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_105_107.c, 201 :: 		
0x1186	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x118A	0x0961    LSRS	R1, R4, #5
0x118C	0x008A    LSLS	R2, R1, #2
0x118E	0x4907    LDR	R1, [PC, #28]
0x1190	0x188B    ADDS	R3, R1, R2
;__Lib_System_105_107.c, 202 :: 		
0x1192	0xF004021F  AND	R2, R4, #31
0x1196	0xF04F0101  MOV	R1, #1
0x119A	0x4091    LSLS	R1, R2
0x119C	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 203 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_105_107.c, 204 :: 		
L_end_NVIC_IntEnable:
0x119E	0xB001    ADD	SP, SP, #4
0x11A0	0x4770    BX	LR
0x11A2	0xBF00    NOP
0x11A4	0xED24E000  	SCB_SHCRS+0
0x11A8	0xE010E000  	STK_CTRL+0
0x11AC	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_EnableInterrupts:
;__Lib_System_105_107.c, 107 :: 		
0x10D8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 110 :: 		
0x10DA	0xF3EF8C10  MRS	R12, #16
0x10DE	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_105_107.c, 111 :: 		
0x10E0	0xB662    CPSIE	i
;__Lib_System_105_107.c, 113 :: 		
; result end address is: 0 (R0)
;__Lib_System_105_107.c, 114 :: 		
L_end_EnableInterrupts:
0x10E2	0xB001    ADD	SP, SP, #4
0x10E4	0x4770    BX	LR
; end of _EnableInterrupts
_gnss_uartDriverInit:
;__gnss_driver.c, 541 :: 		void gnss_uartDriverInit(T_GNSS_P gpioObj, T_GNSS_P uartObj)
; uartObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x1A3C	0xB081    SUB	SP, SP, #4
0x1A3E	0xF8CDE000  STR	LR, [SP, #0]
0x1A42	0x4603    MOV	R3, R0
; uartObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; uartObj start address is: 4 (R1)
;__gnss_driver.c, 543 :: 		hal_uartMap( (T_HAL_P)uartObj );
0x1A44	0x4608    MOV	R0, R1
; uartObj end address is: 4 (R1)
0x1A46	0xF7FFFB4F  BL	__gnss_driver_hal_uartMap+0
;__gnss_driver.c, 544 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x1A4A	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x1A4C	0xF7FFFB24  BL	__gnss_driver_hal_gpioMap+0
;__gnss_driver.c, 545 :: 		}
L_end_gnss_uartDriverInit:
0x1A50	0xF8DDE000  LDR	LR, [SP, #0]
0x1A54	0xB001    ADD	SP, SP, #4
0x1A56	0x4770    BX	LR
; end of _gnss_uartDriverInit
__gnss_driver_hal_uartMap:
;__hal_stm32.c, 133 :: 		static void hal_uartMap(T_HAL_P uartObj)
; uartObj start address is: 0 (R0)
; uartObj end address is: 0 (R0)
; uartObj start address is: 0 (R0)
;__hal_stm32.c, 137 :: 		fp_uartWrite = tmp->uartWrite;
0x10E8	0x6802    LDR	R2, [R0, #0]
0x10EA	0x4906    LDR	R1, [PC, #24]
0x10EC	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 138 :: 		fp_uartRead  = tmp->uartRead;
0x10EE	0x1D01    ADDS	R1, R0, #4
0x10F0	0x680A    LDR	R2, [R1, #0]
0x10F2	0x4905    LDR	R1, [PC, #20]
0x10F4	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 139 :: 		fp_uartReady = tmp->uartReady;
0x10F6	0xF2000108  ADDW	R1, R0, #8
; uartObj end address is: 0 (R0)
0x10FA	0x680A    LDR	R2, [R1, #0]
0x10FC	0x4903    LDR	R1, [PC, #12]
0x10FE	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 140 :: 		}
L_end_hal_uartMap:
0x1100	0x4770    BX	LR
0x1102	0xBF00    NOP
0x1104	0x09C82000  	__gnss_driver_fp_uartWrite+0
0x1108	0x09CC2000  	__gnss_driver_fp_uartRead+0
0x110C	0x09D02000  	__gnss_driver_fp_uartReady+0
; end of __gnss_driver_hal_uartMap
__gnss_driver_hal_gpioMap:
;__gnss_hal.c, 215 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__gnss_hal.c, 262 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x1098	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x109A	0x680A    LDR	R2, [R1, #0]
0x109C	0x4901    LDR	R1, [PC, #4]
0x109E	0x600A    STR	R2, [R1, #0]
;__gnss_hal.c, 291 :: 		}
L_end_hal_gpioMap:
0x10A0	0x4770    BX	LR
0x10A2	0xBF00    NOP
0x10A4	0x09D42000  	__gnss_driver_hal_gpio_rstSet+0
; end of __gnss_driver_hal_gpioMap
_gnss_coreInit:
;__gnss_driver.c, 550 :: 		void gnss_coreInit(T_gnss_handler defaultHdl, uint32_t defaultWdog)
; defaultWdog start address is: 4 (R1)
; defaultHdl start address is: 0 (R0)
0x1950	0xB081    SUB	SP, SP, #4
0x1952	0xF8CDE000  STR	LR, [SP, #0]
; defaultWdog end address is: 4 (R1)
; defaultHdl end address is: 0 (R0)
; defaultHdl start address is: 0 (R0)
; defaultWdog start address is: 4 (R1)
;__gnss_driver.c, 552 :: 		f_sequence_active          = false;
0x1956	0x2300    MOVS	R3, #0
0x1958	0x4A27    LDR	R2, [PC, #156]
0x195A	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 553 :: 		f_buffer_warning           = false;
0x195C	0x2300    MOVS	R3, #0
0x195E	0x4A27    LDR	R2, [PC, #156]
0x1960	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 554 :: 		f_response_ready           = false;
0x1962	0x2300    MOVS	R3, #0
0x1964	0x4A26    LDR	R2, [PC, #152]
0x1966	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 555 :: 		f_wdog_timeout             = false;
0x1968	0x2300    MOVS	R3, #0
0x196A	0x4A26    LDR	R2, [PC, #152]
0x196C	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 558 :: 		hdlBuff.storage[0].handler = defaultHdl;
0x196E	0x4A26    LDR	R2, [PC, #152]
0x1970	0x6010    STR	R0, [R2, #0]
; defaultHdl end address is: 0 (R0)
;__gnss_driver.c, 559 :: 		hdlBuff.storage[0].timeout = defaultWdog;
0x1972	0x4A26    LDR	R2, [PC, #152]
0x1974	0x6011    STR	R1, [R2, #0]
; defaultWdog end address is: 4 (R1)
;__gnss_driver.c, 560 :: 		hdlBuff.storage[0].hash    = generateHash("");
0x1976	0x4A26    LDR	R2, [PC, #152]
0x1978	0x4610    MOV	R0, R2
0x197A	0xF7FFFB95  BL	__gnss_driver_generateHash+0
0x197E	0x4A25    LDR	R2, [PC, #148]
0x1980	0x6010    STR	R0, [R2, #0]
;__gnss_driver.c, 561 :: 		hdlBuff.storage[0].len     = 0;
0x1982	0x2300    MOVS	R3, #0
0x1984	0x4A24    LDR	R2, [PC, #144]
0x1986	0x8013    STRH	R3, [R2, #0]
;__gnss_driver.c, 562 :: 		hdlBuff.idx                = 1;
0x1988	0x2301    MOVS	R3, #1
0x198A	0x4A24    LDR	R2, [PC, #144]
0x198C	0x8013    STRH	R3, [R2, #0]
;__gnss_driver.c, 565 :: 		CORE_CLEAN_RX();
0x198E	0x2300    MOVS	R3, #0
0x1990	0x4A23    LDR	R2, [PC, #140]
0x1992	0x8013    STRH	R3, [R2, #0]
0x1994	0x2300    MOVS	R3, #0
0x1996	0x4A23    LDR	R2, [PC, #140]
0x1998	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 566 :: 		CORE_BLOCK();
0x199A	0x2300    MOVS	R3, #0
0x199C	0x4A19    LDR	R2, [PC, #100]
0x199E	0x7013    STRB	R3, [R2, #0]
0x19A0	0x2300    MOVS	R3, #0
0x19A2	0x4A17    LDR	R2, [PC, #92]
0x19A4	0x7013    STRB	R3, [R2, #0]
0x19A6	0x2301    MOVS	R3, #1
0x19A8	0x4A13    LDR	R2, [PC, #76]
0x19AA	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 567 :: 		CORE_UNBLOCK();
0x19AC	0x2300    MOVS	R3, #0
0x19AE	0x4A15    LDR	R2, [PC, #84]
0x19B0	0x7013    STRB	R3, [R2, #0]
0x19B2	0x2300    MOVS	R3, #0
0x19B4	0x4A12    LDR	R2, [PC, #72]
0x19B6	0x7013    STRB	R3, [R2, #0]
0x19B8	0x2300    MOVS	R3, #0
0x19BA	0x4A0F    LDR	R2, [PC, #60]
0x19BC	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 568 :: 		WATCHDOG_START();
0x19BE	0x2300    MOVS	R3, #0
0x19C0	0x4A19    LDR	R2, [PC, #100]
0x19C2	0x6013    STR	R3, [R2, #0]
0x19C4	0x2301    MOVS	R3, #1
0x19C6	0x4A19    LDR	R2, [PC, #100]
0x19C8	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 569 :: 		WATCHDOG_STOP();
0x19CA	0x2300    MOVS	R3, #0
0x19CC	0x4A17    LDR	R2, [PC, #92]
0x19CE	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 570 :: 		TIMER_START();
0x19D0	0x2300    MOVS	R3, #0
0x19D2	0x4A17    LDR	R2, [PC, #92]
0x19D4	0x6013    STR	R3, [R2, #0]
0x19D6	0x2301    MOVS	R3, #1
0x19D8	0x4A16    LDR	R2, [PC, #88]
0x19DA	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 571 :: 		TIMER_STOP();
0x19DC	0x2300    MOVS	R3, #0
0x19DE	0x4A15    LDR	R2, [PC, #84]
0x19E0	0x7013    STRB	R3, [R2, #0]
;__gnss_driver.c, 572 :: 		CORE_SET_FREE();
0x19E2	0x4A15    LDR	R2, [PC, #84]
0x19E4	0x7812    LDRB	R2, [R2, #0]
0x19E6	0xB112    CBZ	R2, L_gnss_coreInit53
0x19E8	0x2001    MOVS	R0, #1
0x19EA	0xF7FFFB9D  BL	__gnss_driver_DTE_setState+0
L_gnss_coreInit53:
;__gnss_driver.c, 573 :: 		}
L_end_gnss_coreInit:
0x19EE	0xF8DDE000  LDR	LR, [SP, #0]
0x19F2	0xB001    ADD	SP, SP, #4
0x19F4	0x4770    BX	LR
0x19F6	0xBF00    NOP
0x19F8	0x03BA2000  	__gnss_driver_f_sequence_active+0
0x19FC	0x03BB2000  	__gnss_driver_f_buffer_warning+0
0x1A00	0x03C02000  	__gnss_driver_f_response_ready+0
0x1A04	0x03C12000  	__gnss_driver_f_wdog_timeout+0
0x1A08	0x03D42000  	__gnss_driver_hdlBuff+16
0x1A0C	0x03D02000  	__gnss_driver_hdlBuff+12
0x1A10	0x03922000  	?lstr1___gnss_driver+0
0x1A14	0x03CC2000  	__gnss_driver_hdlBuff+8
0x1A18	0x03C82000  	__gnss_driver_hdlBuff+4
0x1A1C	0x03C42000  	__gnss_driver_hdlBuff+0
0x1A20	0x05C82000  	__gnss_driver_rxBuff+0
0x1A24	0x05CA2000  	__gnss_driver_rxBuff+2
0x1A28	0x09B42000  	__gnss_driver_c_watchdog_timer+0
0x1A2C	0x03C22000  	__gnss_driver_f_watchdog_active+0
0x1A30	0x09B82000  	__gnss_driver_c_timer+0
0x1A34	0x03C32000  	__gnss_driver_f_timer_active+0
0x1A38	0x09B22000  	__gnss_driver_f_hfc_active+0
; end of _gnss_coreInit
__gnss_driver_generateHash:
;__gnss_driver.c, 434 :: 		static uint32_t generateHash( char *pCmd )
; pCmd start address is: 0 (R0)
; pCmd end address is: 0 (R0)
; pCmd start address is: 0 (R0)
;__gnss_driver.c, 436 :: 		uint8_t  cnt  = 0;
; cnt start address is: 4 (R1)
0x10A8	0x2100    MOVS	R1, #0
;__gnss_driver.c, 437 :: 		uint16_t ch   = 0;
;__gnss_driver.c, 438 :: 		uint32_t hash = 5;
; hash start address is: 16 (R4)
0x10AA	0xF04F0405  MOV	R4, #5
; pCmd end address is: 0 (R0)
; cnt end address is: 4 (R1)
; hash end address is: 16 (R4)
0x10AE	0x4603    MOV	R3, R0
0x10B0	0xB2C8    UXTB	R0, R1
;__gnss_driver.c, 440 :: 		while ( ch = *pCmd++ )
L___gnss_driver_generateHash34:
; hash start address is: 16 (R4)
; pCmd start address is: 12 (R3)
; cnt start address is: 0 (R0)
; pCmd start address is: 12 (R3)
0x10B2	0x461A    MOV	R2, R3
0x10B4	0x1C59    ADDS	R1, R3, #1
0x10B6	0x460B    MOV	R3, R1
; pCmd end address is: 12 (R3)
0x10B8	0x7811    LDRB	R1, [R2, #0]
; ch start address is: 8 (R2)
0x10BA	0xB2CA    UXTB	R2, R1
0x10BC	0xB14A    CBZ	R2, L___gnss_driver_generateHash35
; pCmd end address is: 12 (R3)
;__gnss_driver.c, 442 :: 		hash += (ch << (cnt % 8));
; pCmd start address is: 12 (R3)
0x10BE	0xF0000107  AND	R1, R0, #7
0x10C2	0xB2C9    UXTB	R1, R1
0x10C4	0xFA02F101  LSL	R1, R2, R1
0x10C8	0xB289    UXTH	R1, R1
0x10CA	0x1864    ADDS	R4, R4, R1
;__gnss_driver.c, 443 :: 		cnt++;
0x10CC	0x1C40    ADDS	R0, R0, #1
0x10CE	0xB2C0    UXTB	R0, R0
;__gnss_driver.c, 444 :: 		}
; pCmd end address is: 12 (R3)
; ch end address is: 8 (R2)
; cnt end address is: 0 (R0)
0x10D0	0xE7EF    B	L___gnss_driver_generateHash34
L___gnss_driver_generateHash35:
;__gnss_driver.c, 445 :: 		return hash;
0x10D2	0x4620    MOV	R0, R4
; hash end address is: 16 (R4)
;__gnss_driver.c, 446 :: 		}
L_end_generateHash:
0x10D4	0x4770    BX	LR
; end of __gnss_driver_generateHash
__gnss_driver_DTE_setState:
;__gnss_driver.c, 152 :: 		static void DTE_setState(bool state)
;__gnss_driver.c, 155 :: 		}
L_end_DTE_setState:
0x1128	0x4770    BX	LR
; end of __gnss_driver_DTE_setState
_gnss_hfcEnable:
;__gnss_driver.c, 575 :: 		void gnss_hfcEnable( bool hfcState )
; hfcState start address is: 0 (R0)
; hfcState end address is: 0 (R0)
; hfcState start address is: 0 (R0)
;__gnss_driver.c, 577 :: 		f_hfc_active = hfcState;
0x1BEC	0x4901    LDR	R1, [PC, #4]
0x1BEE	0x7008    STRB	R0, [R1, #0]
; hfcState end address is: 0 (R0)
;__gnss_driver.c, 578 :: 		}
L_end_gnss_hfcEnable:
0x1BF0	0x4770    BX	LR
0x1BF2	0xBF00    NOP
0x1BF4	0x09B22000  	__gnss_driver_f_hfc_active+0
; end of _gnss_hfcEnable
_gnss_modulePower:
;__gnss_driver.c, 163 :: 		void gnss_modulePower( bool powerState )
; powerState start address is: 0 (R0)
0x1730	0xB081    SUB	SP, SP, #4
0x1732	0xF8CDE000  STR	LR, [SP, #0]
; powerState end address is: 0 (R0)
; powerState start address is: 0 (R0)
;__gnss_driver.c, 165 :: 		if (0 != powerState)
0x1736	0xB1A0    CBZ	R0, L_gnss_modulePower0
; powerState end address is: 0 (R0)
;__gnss_driver.c, 167 :: 		hal_gpio_rstSet(1);
0x1738	0x2001    MOVS	R0, #1
0x173A	0x4C0F    LDR	R4, [PC, #60]
0x173C	0x6824    LDR	R4, [R4, #0]
0x173E	0x47A0    BLX	R4
;__gnss_driver.c, 168 :: 		Delay_100ms();
0x1740	0xF7FFFB76  BL	_Delay_100ms+0
;__gnss_driver.c, 169 :: 		hal_gpio_rstSet(0);
0x1744	0x2000    MOVS	R0, #0
0x1746	0x4C0C    LDR	R4, [PC, #48]
0x1748	0x6824    LDR	R4, [R4, #0]
0x174A	0x47A0    BLX	R4
;__gnss_driver.c, 170 :: 		Delay_100ms();
0x174C	0xF7FFFB70  BL	_Delay_100ms+0
;__gnss_driver.c, 171 :: 		Delay_100ms();
0x1750	0xF7FFFB6E  BL	_Delay_100ms+0
;__gnss_driver.c, 172 :: 		hal_gpio_rstSet(1);
0x1754	0x2001    MOVS	R0, #1
0x1756	0x4C08    LDR	R4, [PC, #32]
0x1758	0x6824    LDR	R4, [R4, #0]
0x175A	0x47A0    BLX	R4
;__gnss_driver.c, 173 :: 		Delay_100ms();
0x175C	0xF7FFFB68  BL	_Delay_100ms+0
;__gnss_driver.c, 174 :: 		}
0x1760	0xE005    B	L_gnss_modulePower1
L_gnss_modulePower0:
;__gnss_driver.c, 177 :: 		hal_gpio_rstSet(0);
0x1762	0x2000    MOVS	R0, #0
0x1764	0x4C04    LDR	R4, [PC, #16]
0x1766	0x6824    LDR	R4, [R4, #0]
0x1768	0x47A0    BLX	R4
;__gnss_driver.c, 178 :: 		Delay_100ms();
0x176A	0xF7FFFB61  BL	_Delay_100ms+0
;__gnss_driver.c, 179 :: 		}
L_gnss_modulePower1:
;__gnss_driver.c, 180 :: 		}
L_end_gnss_modulePower:
0x176E	0xF8DDE000  LDR	LR, [SP, #0]
0x1772	0xB001    ADD	SP, SP, #4
0x1774	0x4770    BX	LR
0x1776	0xBF00    NOP
0x1778	0x09D42000  	__gnss_driver_hal_gpio_rstSet+0
; end of _gnss_modulePower
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x112C	0x4901    LDR	R1, [PC, #4]
0x112E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x1130	0x4770    BX	LR
0x1132	0xBF00    NOP
0x1134	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1110	0x4901    LDR	R1, [PC, #4]
0x1112	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x1114	0x4770    BX	LR
0x1116	0xBF00    NOP
0x1118	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x111C	0x4901    LDR	R1, [PC, #4]
0x111E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x1120	0x4770    BX	LR
0x1122	0xBF00    NOP
0x1124	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1670	0x4901    LDR	R1, [PC, #4]
0x1672	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x1674	0x4770    BX	LR
0x1676	0xBF00    NOP
0x1678	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16F4	0x4901    LDR	R1, [PC, #4]
0x16F6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x16F8	0x4770    BX	LR
0x16FA	0xBF00    NOP
0x16FC	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16E8	0x4901    LDR	R1, [PC, #4]
0x16EA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x16EC	0x4770    BX	LR
0x16EE	0xBF00    NOP
0x16F0	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x170C	0x4901    LDR	R1, [PC, #4]
0x170E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x1710	0x4770    BX	LR
0x1712	0xBF00    NOP
0x1714	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1700	0x4901    LDR	R1, [PC, #4]
0x1702	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x1704	0x4770    BX	LR
0x1706	0xBF00    NOP
0x1708	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1724	0x4901    LDR	R1, [PC, #4]
0x1726	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x1728	0x4770    BX	LR
0x172A	0xBF00    NOP
0x172C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1718	0x4901    LDR	R1, [PC, #4]
0x171A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x171C	0x4770    BX	LR
0x171E	0xBF00    NOP
0x1720	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1694	0x4901    LDR	R1, [PC, #4]
0x1696	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x1698	0x4770    BX	LR
0x169A	0xBF00    NOP
0x169C	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16A0	0x4901    LDR	R1, [PC, #4]
0x16A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x16A4	0x4770    BX	LR
0x16A6	0xBF00    NOP
0x16A8	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x167C	0x4901    LDR	R1, [PC, #4]
0x167E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x1680	0x4770    BX	LR
0x1682	0xBF00    NOP
0x1684	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1688	0x4901    LDR	R1, [PC, #4]
0x168A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x168C	0x4770    BX	LR
0x168E	0xBF00    NOP
0x1690	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16AC	0x4901    LDR	R1, [PC, #4]
0x16AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x16B0	0x4770    BX	LR
0x16B2	0xBF00    NOP
0x16B4	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16D0	0x4901    LDR	R1, [PC, #4]
0x16D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x16D4	0x4770    BX	LR
0x16D6	0xBF00    NOP
0x16D8	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16DC	0x4901    LDR	R1, [PC, #4]
0x16DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x16E0	0x4770    BX	LR
0x16E2	0xBF00    NOP
0x16E4	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16B8	0x4901    LDR	R1, [PC, #4]
0x16BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x16BC	0x4770    BX	LR
0x16BE	0xBF00    NOP
0x16C0	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x16C4	0x4901    LDR	R1, [PC, #4]
0x16C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x16C8	0x4770    BX	LR
0x16CA	0xBF00    NOP
0x16CC	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0E60	0x4901    LDR	R1, [PC, #4]
0x0E62	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0E64	0x4770    BX	LR
0x0E66	0xBF00    NOP
0x0E68	0x81AC4222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0E54	0x4901    LDR	R1, [PC, #4]
0x0E56	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0E58	0x4770    BX	LR
0x0E5A	0xBF00    NOP
0x0E5C	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0E78	0x4901    LDR	R1, [PC, #4]
0x0E7A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0E7C	0x4770    BX	LR
0x0E7E	0xBF00    NOP
0x0E80	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0E6C	0x4901    LDR	R1, [PC, #4]
0x0E6E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0E70	0x4770    BX	LR
0x0E72	0xBF00    NOP
0x0E74	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0E48	0x4901    LDR	R1, [PC, #4]
0x0E4A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0E4C	0x4770    BX	LR
0x0E4E	0xBF00    NOP
0x0E50	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x0E30	0xF644777F  MOVW	R7, #20351
0x0E34	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x0E38	0x1E7F    SUBS	R7, R7, #1
0x0E3A	0xD1FD    BNE	L_Delay_100ms20
0x0E3C	0xBF00    NOP
0x0E3E	0xBF00    NOP
0x0E40	0xBF00    NOP
0x0E42	0xBF00    NOP
0x0E44	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x0E46	0x4770    BX	LR
; end of _Delay_100ms
_applicationTask:
;Click_GNSS_STM.c, 94 :: 		void applicationTask()
0x1D14	0xB08E    SUB	SP, SP, #56
0x1D16	0xF8CDE000  STR	LR, [SP, #0]
;Click_GNSS_STM.c, 99 :: 		char rspCom[ 50 ] = {0};
0x1D1A	0xF10D0B04  ADD	R11, SP, #4
0x1D1E	0xF10B0A32  ADD	R10, R11, #50
0x1D22	0xF8DFC13C  LDR	R12, [PC, #316]
0x1D26	0xF7FFFF67  BL	___CC2DW+0
;Click_GNSS_STM.c, 102 :: 		gnss_process();
0x1D2A	0xF7FFFE95  BL	_gnss_process+0
;Click_GNSS_STM.c, 104 :: 		if(timerCounter > 5000)
0x1D2E	0x484D    LDR	R0, [PC, #308]
0x1D30	0x6801    LDR	R1, [R0, #0]
0x1D32	0xF2413088  MOVW	R0, #5000
0x1D36	0x4281    CMP	R1, R0
0x1D38	0xD90F    BLS	L_applicationTask3
;Click_GNSS_STM.c, 106 :: 		pFlag++;
0x1D3A	0x494B    LDR	R1, [PC, #300]
0x1D3C	0x7808    LDRB	R0, [R1, #0]
0x1D3E	0x1C40    ADDS	R0, R0, #1
0x1D40	0xB2C0    UXTB	R0, R0
0x1D42	0x7008    STRB	R0, [R1, #0]
;Click_GNSS_STM.c, 107 :: 		if(pFlag > 2)
0x1D44	0x2802    CMP	R0, #2
0x1D46	0xD902    BLS	L_applicationTask4
;Click_GNSS_STM.c, 109 :: 		pFlag = 0;
0x1D48	0x2100    MOVS	R1, #0
0x1D4A	0x4847    LDR	R0, [PC, #284]
0x1D4C	0x7001    STRB	R1, [R0, #0]
;Click_GNSS_STM.c, 110 :: 		}
L_applicationTask4:
;Click_GNSS_STM.c, 111 :: 		timerCounter = 0;
0x1D4E	0x2100    MOVS	R1, #0
0x1D50	0x4844    LDR	R0, [PC, #272]
0x1D52	0x6001    STR	R1, [R0, #0]
;Click_GNSS_STM.c, 112 :: 		dispFlag = 1;
0x1D54	0x2101    MOVS	R1, #1
0x1D56	0x4845    LDR	R0, [PC, #276]
0x1D58	0x7001    STRB	R1, [R0, #0]
;Click_GNSS_STM.c, 113 :: 		}
L_applicationTask3:
;Click_GNSS_STM.c, 115 :: 		if(pFlag == 0 && dispFlag == 1)
0x1D5A	0x4843    LDR	R0, [PC, #268]
0x1D5C	0x7800    LDRB	R0, [R0, #0]
0x1D5E	0x2800    CMP	R0, #0
0x1D60	0xD125    BNE	L__applicationTask26
0x1D62	0x4842    LDR	R0, [PC, #264]
0x1D64	0x7800    LDRB	R0, [R0, #0]
0x1D66	0x2801    CMP	R0, #1
0x1D68	0xD121    BNE	L__applicationTask25
L__applicationTask24:
;Click_GNSS_STM.c, 117 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1D6A	0x4841    LDR	R0, [PC, #260]
0x1D6C	0x2102    MOVS	R1, #2
0x1D6E	0xF7FEFE3D  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 118 :: 		pLat = gnss_parser(&demoBuffer[0], &demoCommand[0], 2);
0x1D72	0x2202    MOVS	R2, #2
0x1D74	0x493F    LDR	R1, [PC, #252]
0x1D76	0x4840    LDR	R0, [PC, #256]
0x1D78	0xF7FFFD00  BL	_gnss_parser+0
; pLat start address is: 4 (R1)
0x1D7C	0x4601    MOV	R1, R0
;Click_GNSS_STM.c, 120 :: 		if(pLat == 0)
0x1D7E	0xB920    CBNZ	R0, L_applicationTask8
; pLat end address is: 4 (R1)
;Click_GNSS_STM.c, 122 :: 		mikrobus_logWrite( " Latitude : No data available!", _LOG_LINE);
0x1D80	0x483E    LDR	R0, [PC, #248]
0x1D82	0x2102    MOVS	R1, #2
0x1D84	0xF7FEFE32  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 123 :: 		}
0x1D88	0xE00A    B	L_applicationTask9
L_applicationTask8:
;Click_GNSS_STM.c, 126 :: 		strcpy(&rspCom[0], pLat);
; pLat start address is: 4 (R1)
0x1D8A	0xA801    ADD	R0, SP, #4
; pLat end address is: 4 (R1)
0x1D8C	0xF7FEFEA6  BL	_strcpy+0
;Click_GNSS_STM.c, 127 :: 		mikrobus_logWrite( " Latitude : ", _LOG_TEXT);
0x1D90	0x483B    LDR	R0, [PC, #236]
0x1D92	0x2101    MOVS	R1, #1
0x1D94	0xF7FEFE2A  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 128 :: 		mikrobus_logWrite(rspCom, _LOG_LINE);
0x1D98	0xA801    ADD	R0, SP, #4
0x1D9A	0x2102    MOVS	R1, #2
0x1D9C	0xF7FEFE26  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 129 :: 		}
L_applicationTask9:
;Click_GNSS_STM.c, 130 :: 		dispFlag = 0;
0x1DA0	0x2100    MOVS	R1, #0
0x1DA2	0x4832    LDR	R0, [PC, #200]
0x1DA4	0x7001    STRB	R1, [R0, #0]
;Click_GNSS_STM.c, 131 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1DA6	0x4837    LDR	R0, [PC, #220]
0x1DA8	0x2102    MOVS	R1, #2
0x1DAA	0xF7FEFE1F  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 115 :: 		if(pFlag == 0 && dispFlag == 1)
L__applicationTask26:
L__applicationTask25:
;Click_GNSS_STM.c, 134 :: 		if(pFlag == 2 &&  dispFlag == 1)
0x1DAE	0x482E    LDR	R0, [PC, #184]
0x1DB0	0x7800    LDRB	R0, [R0, #0]
0x1DB2	0x2802    CMP	R0, #2
0x1DB4	0xD125    BNE	L__applicationTask28
0x1DB6	0x482D    LDR	R0, [PC, #180]
0x1DB8	0x7800    LDRB	R0, [R0, #0]
0x1DBA	0x2801    CMP	R0, #1
0x1DBC	0xD121    BNE	L__applicationTask27
L__applicationTask23:
;Click_GNSS_STM.c, 136 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1DBE	0x4832    LDR	R0, [PC, #200]
0x1DC0	0x2102    MOVS	R1, #2
0x1DC2	0xF7FEFE13  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 137 :: 		pAlt = gnss_parser(&demoBuffer[0], &demoCommand[0], 9);
0x1DC6	0x2209    MOVS	R2, #9
0x1DC8	0x492A    LDR	R1, [PC, #168]
0x1DCA	0x482B    LDR	R0, [PC, #172]
0x1DCC	0xF7FFFCD6  BL	_gnss_parser+0
; pAlt start address is: 4 (R1)
0x1DD0	0x4601    MOV	R1, R0
;Click_GNSS_STM.c, 138 :: 		if(pAlt == 0)
0x1DD2	0xB920    CBNZ	R0, L_applicationTask13
; pAlt end address is: 4 (R1)
;Click_GNSS_STM.c, 140 :: 		mikrobus_logWrite( " Altitude : No data available!", _LOG_LINE);
0x1DD4	0x482D    LDR	R0, [PC, #180]
0x1DD6	0x2102    MOVS	R1, #2
0x1DD8	0xF7FEFE08  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 141 :: 		}
0x1DDC	0xE00A    B	L_applicationTask14
L_applicationTask13:
;Click_GNSS_STM.c, 144 :: 		strcpy(&rspCom[0], pAlt);
; pAlt start address is: 4 (R1)
0x1DDE	0xA801    ADD	R0, SP, #4
; pAlt end address is: 4 (R1)
0x1DE0	0xF7FEFE7C  BL	_strcpy+0
;Click_GNSS_STM.c, 145 :: 		mikrobus_logWrite( " Altitude : ", _LOG_TEXT);
0x1DE4	0x482A    LDR	R0, [PC, #168]
0x1DE6	0x2101    MOVS	R1, #1
0x1DE8	0xF7FEFE00  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 146 :: 		mikrobus_logWrite(rspCom, _LOG_LINE);
0x1DEC	0xA801    ADD	R0, SP, #4
0x1DEE	0x2102    MOVS	R1, #2
0x1DF0	0xF7FEFDFC  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 147 :: 		}
L_applicationTask14:
;Click_GNSS_STM.c, 148 :: 		dispFlag = 0;
0x1DF4	0x2100    MOVS	R1, #0
0x1DF6	0x481D    LDR	R0, [PC, #116]
0x1DF8	0x7001    STRB	R1, [R0, #0]
;Click_GNSS_STM.c, 149 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1DFA	0x4826    LDR	R0, [PC, #152]
0x1DFC	0x2102    MOVS	R1, #2
0x1DFE	0xF7FEFDF5  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 134 :: 		if(pFlag == 2 &&  dispFlag == 1)
L__applicationTask28:
L__applicationTask27:
;Click_GNSS_STM.c, 152 :: 		if(pFlag == 1 && dispFlag == 1)
0x1E02	0x4819    LDR	R0, [PC, #100]
0x1E04	0x7800    LDRB	R0, [R0, #0]
0x1E06	0x2801    CMP	R0, #1
0x1E08	0xD125    BNE	L__applicationTask30
0x1E0A	0x4818    LDR	R0, [PC, #96]
0x1E0C	0x7800    LDRB	R0, [R0, #0]
0x1E0E	0x2801    CMP	R0, #1
0x1E10	0xD121    BNE	L__applicationTask29
L__applicationTask22:
;Click_GNSS_STM.c, 154 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1E12	0x4821    LDR	R0, [PC, #132]
0x1E14	0x2102    MOVS	R1, #2
0x1E16	0xF7FEFDE9  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 155 :: 		pLong = gnss_parser(&demoBuffer[0], &demoCommand[0], 4);
0x1E1A	0x2204    MOVS	R2, #4
0x1E1C	0x4915    LDR	R1, [PC, #84]
0x1E1E	0x4816    LDR	R0, [PC, #88]
0x1E20	0xF7FFFCAC  BL	_gnss_parser+0
; pLong start address is: 4 (R1)
0x1E24	0x4601    MOV	R1, R0
;Click_GNSS_STM.c, 156 :: 		if(pLong == 0)
0x1E26	0xB920    CBNZ	R0, L_applicationTask18
; pLong end address is: 4 (R1)
;Click_GNSS_STM.c, 158 :: 		mikrobus_logWrite( " Longitude : No data available!", _LOG_LINE);
0x1E28	0x481C    LDR	R0, [PC, #112]
0x1E2A	0x2102    MOVS	R1, #2
0x1E2C	0xF7FEFDDE  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 159 :: 		}
0x1E30	0xE00A    B	L_applicationTask19
L_applicationTask18:
;Click_GNSS_STM.c, 162 :: 		strcpy(&rspCom[0], pLong);
; pLong start address is: 4 (R1)
0x1E32	0xA801    ADD	R0, SP, #4
; pLong end address is: 4 (R1)
0x1E34	0xF7FEFE52  BL	_strcpy+0
;Click_GNSS_STM.c, 163 :: 		mikrobus_logWrite( " Longitude : ", _LOG_TEXT);
0x1E38	0x4819    LDR	R0, [PC, #100]
0x1E3A	0x2101    MOVS	R1, #1
0x1E3C	0xF7FEFDD6  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 164 :: 		mikrobus_logWrite(rspCom, _LOG_LINE);
0x1E40	0xA801    ADD	R0, SP, #4
0x1E42	0x2102    MOVS	R1, #2
0x1E44	0xF7FEFDD2  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 165 :: 		}
L_applicationTask19:
;Click_GNSS_STM.c, 166 :: 		dispFlag = 0;
0x1E48	0x2100    MOVS	R1, #0
0x1E4A	0x4808    LDR	R0, [PC, #32]
0x1E4C	0x7001    STRB	R1, [R0, #0]
;Click_GNSS_STM.c, 167 :: 		mikrobus_logWrite( " ---------------------------------------- ", _LOG_LINE);
0x1E4E	0x4815    LDR	R0, [PC, #84]
0x1E50	0x2102    MOVS	R1, #2
0x1E52	0xF7FEFDCB  BL	_mikrobus_logWrite+0
;Click_GNSS_STM.c, 152 :: 		if(pFlag == 1 && dispFlag == 1)
L__applicationTask30:
L__applicationTask29:
;Click_GNSS_STM.c, 169 :: 		}
L_end_applicationTask:
0x1E56	0xF8DDE000  LDR	LR, [SP, #0]
0x1E5A	0xB00E    ADD	SP, SP, #56
0x1E5C	0x4770    BX	LR
0x1E5E	0xBF00    NOP
0x1E60	0x2AF80000  	?ICSapplicationTask_rspCom_L0+0
0x1E64	0x00002000  	_timerCounter+0
0x1E68	0x00042000  	_pFlag+0
0x1E6C	0x00052000  	_dispFlag+0
0x1E70	0x00062000  	?lstr1_Click_GNSS_STM+0
0x1E74	0x02252000  	_demoCommand+0
0x1E78	0x00312000  	_demoBuffer+0
0x1E7C	0x02352000  	?lstr2_Click_GNSS_STM+0
0x1E80	0x02542000  	?lstr3_Click_GNSS_STM+0
0x1E84	0x02612000  	?lstr4_Click_GNSS_STM+0
0x1E88	0x028C2000  	?lstr5_Click_GNSS_STM+0
0x1E8C	0x02B72000  	?lstr6_Click_GNSS_STM+0
0x1E90	0x02D62000  	?lstr7_Click_GNSS_STM+0
0x1E94	0x02E32000  	?lstr8_Click_GNSS_STM+0
0x1E98	0x030E2000  	?lstr9_Click_GNSS_STM+0
0x1E9C	0x03392000  	?lstr10_Click_GNSS_STM+0
0x1EA0	0x03592000  	?lstr11_Click_GNSS_STM+0
0x1EA4	0x03672000  	?lstr12_Click_GNSS_STM+0
; end of _applicationTask
_gnss_process:
;__gnss_driver.c, 728 :: 		void gnss_process()
0x1A58	0xB081    SUB	SP, SP, #4
0x1A5A	0xF8CDE000  STR	LR, [SP, #0]
;__gnss_driver.c, 731 :: 		if (0 != _GNSS_POLL_ENABLE)
0x1A5E	0x2000    MOVS	R0, #0
0x1A60	0x2801    CMP	R0, __GNSS_POLL_ENABLE
0x1A62	0xD006    BEQ	L_gnss_process88
;__gnss_driver.c, 733 :: 		if (0 != hal_uartReady())
0x1A64	0xF7FFFA4E  BL	__gnss_driver_hal_uartReady+0
0x1A68	0xB118    CBZ	R0, L_gnss_process89
;__gnss_driver.c, 735 :: 		char tmp = hal_uartRead();
0x1A6A	0xF7FFFA59  BL	__gnss_driver_hal_uartRead+0
;__gnss_driver.c, 736 :: 		gnss_putc( tmp );
0x1A6E	0xF7FFFA09  BL	_gnss_putc+0
;__gnss_driver.c, 737 :: 		}
L_gnss_process89:
;__gnss_driver.c, 738 :: 		}
L_gnss_process88:
;__gnss_driver.c, 741 :: 		if (f_buffer_warning)
0x1A72	0x4852    LDR	R0, [PC, #328]
0x1A74	0x7800    LDRB	R0, [R0, #0]
0x1A76	0x2800    CMP	R0, #0
0x1A78	0xF000803A  BEQ	L_gnss_process90
;__gnss_driver.c, 743 :: 		CORE_SET_BUSY();
0x1A7C	0x4850    LDR	R0, [PC, #320]
0x1A7E	0x7800    LDRB	R0, [R0, #0]
0x1A80	0xB110    CBZ	R0, L_gnss_process91
0x1A82	0x2000    MOVS	R0, #0
0x1A84	0xF7FFFB50  BL	__gnss_driver_DTE_setState+0
L_gnss_process91:
;__gnss_driver.c, 744 :: 		TIMER_STOP();
0x1A88	0x2100    MOVS	R1, #0
0x1A8A	0x484E    LDR	R0, [PC, #312]
0x1A8C	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 745 :: 		WATCHDOG_STOP();
0x1A8E	0x2100    MOVS	R1, #0
0x1A90	0x484D    LDR	R0, [PC, #308]
0x1A92	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 748 :: 		if (_GNSS_EVENT_BUFFER_OUT == currentEv.evArg[_GNSS_EVARG_EVENT_T])
0x1A94	0x484D    LDR	R0, [PC, #308]
0x1A96	0x7800    LDRB	R0, [R0, #0]
0x1A98	0x2802    CMP	R0, #2
0x1A9A	0xD105    BNE	L_gnss_process92
;__gnss_driver.c, 751 :: 		currentEv.fpHdl(rxBuff.storage, currentEv.evArg);
0x1A9C	0x494C    LDR	R1, [PC, #304]
0x1A9E	0x484D    LDR	R0, [PC, #308]
0x1AA0	0x4C4D    LDR	R4, [PC, #308]
0x1AA2	0x6824    LDR	R4, [R4, #0]
0x1AA4	0x47A0    BLX	R4
;__gnss_driver.c, 752 :: 		}
0x1AA6	0xE00B    B	L_gnss_process93
L_gnss_process92:
;__gnss_driver.c, 756 :: 		createEvent(rxBuff.storage, &currentEv);
0x1AA8	0x494B    LDR	R1, [PC, #300]
0x1AAA	0x484A    LDR	R0, [PC, #296]
0x1AAC	0xF7FFFA8A  BL	__gnss_driver_createEvent+0
;__gnss_driver.c, 757 :: 		EXEC_EVENT(_GNSS_EVENT_BUFFER_OUT);
0x1AB0	0x2102    MOVS	R1, #2
0x1AB2	0x4846    LDR	R0, [PC, #280]
0x1AB4	0x7001    STRB	R1, [R0, #0]
0x1AB6	0x4946    LDR	R1, [PC, #280]
0x1AB8	0x4846    LDR	R0, [PC, #280]
0x1ABA	0x4C47    LDR	R4, [PC, #284]
0x1ABC	0x6824    LDR	R4, [R4, #0]
0x1ABE	0x47A0    BLX	R4
;__gnss_driver.c, 758 :: 		}
L_gnss_process93:
;__gnss_driver.c, 759 :: 		f_buffer_warning = false;
0x1AC0	0x2100    MOVS	R1, #0
0x1AC2	0x483E    LDR	R0, [PC, #248]
0x1AC4	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 761 :: 		CORE_CLEAN_RX();
0x1AC6	0x2100    MOVS	R1, #0
0x1AC8	0x4844    LDR	R0, [PC, #272]
0x1ACA	0x8001    STRH	R1, [R0, #0]
0x1ACC	0x2100    MOVS	R1, #0
0x1ACE	0x4841    LDR	R0, [PC, #260]
0x1AD0	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 762 :: 		CORE_UNBLOCK();
0x1AD2	0x2100    MOVS	R1, #0
0x1AD4	0x4842    LDR	R0, [PC, #264]
0x1AD6	0x7001    STRB	R1, [R0, #0]
0x1AD8	0x2100    MOVS	R1, #0
0x1ADA	0x4842    LDR	R0, [PC, #264]
0x1ADC	0x7001    STRB	R1, [R0, #0]
0x1ADE	0x2100    MOVS	R1, #0
0x1AE0	0x4841    LDR	R0, [PC, #260]
0x1AE2	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 763 :: 		CORE_SET_FREE();
0x1AE4	0x4836    LDR	R0, [PC, #216]
0x1AE6	0x7800    LDRB	R0, [R0, #0]
0x1AE8	0xB110    CBZ	R0, L_gnss_process94
0x1AEA	0x2001    MOVS	R0, #1
0x1AEC	0xF7FFFB1C  BL	__gnss_driver_DTE_setState+0
L_gnss_process94:
;__gnss_driver.c, 764 :: 		}
L_gnss_process90:
;__gnss_driver.c, 767 :: 		if (f_response_ready)
0x1AF0	0x483C    LDR	R0, [PC, #240]
0x1AF2	0x7800    LDRB	R0, [R0, #0]
0x1AF4	0x2800    CMP	R0, #0
0x1AF6	0xD02C    BEQ	L_gnss_process95
;__gnss_driver.c, 769 :: 		CORE_SET_BUSY();
0x1AF8	0x4831    LDR	R0, [PC, #196]
0x1AFA	0x7800    LDRB	R0, [R0, #0]
0x1AFC	0xB110    CBZ	R0, L_gnss_process96
0x1AFE	0x2000    MOVS	R0, #0
0x1B00	0xF7FFFB12  BL	__gnss_driver_DTE_setState+0
L_gnss_process96:
;__gnss_driver.c, 770 :: 		TIMER_STOP();
0x1B04	0x2100    MOVS	R1, #0
0x1B06	0x482F    LDR	R0, [PC, #188]
0x1B08	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 771 :: 		WATCHDOG_STOP();
0x1B0A	0x2100    MOVS	R1, #0
0x1B0C	0x482E    LDR	R0, [PC, #184]
0x1B0E	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 773 :: 		createEvent(rxBuff.storage, &currentEv);
0x1B10	0x4931    LDR	R1, [PC, #196]
0x1B12	0x4830    LDR	R0, [PC, #192]
0x1B14	0xF7FFFA56  BL	__gnss_driver_createEvent+0
;__gnss_driver.c, 774 :: 		EXEC_EVENT(_GNSS_EVENT_RESPONSE);
0x1B18	0x2100    MOVS	R1, #0
0x1B1A	0x482C    LDR	R0, [PC, #176]
0x1B1C	0x7001    STRB	R1, [R0, #0]
0x1B1E	0x492C    LDR	R1, [PC, #176]
0x1B20	0x482C    LDR	R0, [PC, #176]
0x1B22	0x4C2D    LDR	R4, [PC, #180]
0x1B24	0x6824    LDR	R4, [R4, #0]
0x1B26	0x47A0    BLX	R4
;__gnss_driver.c, 776 :: 		CORE_CLEAN_RX();
0x1B28	0x2100    MOVS	R1, #0
0x1B2A	0x482C    LDR	R0, [PC, #176]
0x1B2C	0x8001    STRH	R1, [R0, #0]
0x1B2E	0x2100    MOVS	R1, #0
0x1B30	0x4828    LDR	R0, [PC, #160]
0x1B32	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 777 :: 		CORE_UNBLOCK();
0x1B34	0x2100    MOVS	R1, #0
0x1B36	0x482A    LDR	R0, [PC, #168]
0x1B38	0x7001    STRB	R1, [R0, #0]
0x1B3A	0x2100    MOVS	R1, #0
0x1B3C	0x4829    LDR	R0, [PC, #164]
0x1B3E	0x7001    STRB	R1, [R0, #0]
0x1B40	0x2100    MOVS	R1, #0
0x1B42	0x4829    LDR	R0, [PC, #164]
0x1B44	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 778 :: 		CORE_SET_FREE();
0x1B46	0x481E    LDR	R0, [PC, #120]
0x1B48	0x7800    LDRB	R0, [R0, #0]
0x1B4A	0xB110    CBZ	R0, L_gnss_process97
0x1B4C	0x2001    MOVS	R0, #1
0x1B4E	0xF7FFFAEB  BL	__gnss_driver_DTE_setState+0
L_gnss_process97:
;__gnss_driver.c, 779 :: 		}
L_gnss_process95:
;__gnss_driver.c, 782 :: 		if (f_wdog_timeout)
0x1B52	0x4823    LDR	R0, [PC, #140]
0x1B54	0x7800    LDRB	R0, [R0, #0]
0x1B56	0x2800    CMP	R0, #0
0x1B58	0xD02C    BEQ	L_gnss_process98
;__gnss_driver.c, 784 :: 		CORE_SET_BUSY();
0x1B5A	0x4819    LDR	R0, [PC, #100]
0x1B5C	0x7800    LDRB	R0, [R0, #0]
0x1B5E	0xB110    CBZ	R0, L_gnss_process99
0x1B60	0x2000    MOVS	R0, #0
0x1B62	0xF7FFFAE1  BL	__gnss_driver_DTE_setState+0
L_gnss_process99:
;__gnss_driver.c, 785 :: 		TIMER_STOP();
0x1B66	0x2100    MOVS	R1, #0
0x1B68	0x4816    LDR	R0, [PC, #88]
0x1B6A	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 786 :: 		WATCHDOG_STOP();
0x1B6C	0x2100    MOVS	R1, #0
0x1B6E	0x4816    LDR	R0, [PC, #88]
0x1B70	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 788 :: 		createEvent(rxBuff.storage, &currentEv);
0x1B72	0x4919    LDR	R1, [PC, #100]
0x1B74	0x4817    LDR	R0, [PC, #92]
0x1B76	0xF7FFFA25  BL	__gnss_driver_createEvent+0
;__gnss_driver.c, 789 :: 		EXEC_EVENT(_GNSS_EVENT_TIMEOUT);
0x1B7A	0x2101    MOVS	R1, #1
0x1B7C	0x4813    LDR	R0, [PC, #76]
0x1B7E	0x7001    STRB	R1, [R0, #0]
0x1B80	0x4913    LDR	R1, [PC, #76]
0x1B82	0x4814    LDR	R0, [PC, #80]
0x1B84	0x4C14    LDR	R4, [PC, #80]
0x1B86	0x6824    LDR	R4, [R4, #0]
0x1B88	0x47A0    BLX	R4
;__gnss_driver.c, 791 :: 		CORE_CLEAN_RX();
0x1B8A	0x2100    MOVS	R1, #0
0x1B8C	0x4813    LDR	R0, [PC, #76]
0x1B8E	0x8001    STRH	R1, [R0, #0]
0x1B90	0x2100    MOVS	R1, #0
0x1B92	0x4810    LDR	R0, [PC, #64]
0x1B94	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 792 :: 		CORE_UNBLOCK();
0x1B96	0x2100    MOVS	R1, #0
0x1B98	0x4811    LDR	R0, [PC, #68]
0x1B9A	0x7001    STRB	R1, [R0, #0]
0x1B9C	0x2100    MOVS	R1, #0
0x1B9E	0x4811    LDR	R0, [PC, #68]
0x1BA0	0x7001    STRB	R1, [R0, #0]
0x1BA2	0x2100    MOVS	R1, #0
0x1BA4	0x4810    LDR	R0, [PC, #64]
0x1BA6	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 793 :: 		CORE_SET_FREE();
0x1BA8	0x4805    LDR	R0, [PC, #20]
0x1BAA	0x7800    LDRB	R0, [R0, #0]
0x1BAC	0xB110    CBZ	R0, L_gnss_process100
0x1BAE	0x2001    MOVS	R0, #1
0x1BB0	0xF7FFFABA  BL	__gnss_driver_DTE_setState+0
L_gnss_process100:
;__gnss_driver.c, 794 :: 		}
L_gnss_process98:
;__gnss_driver.c, 795 :: 		}
L_end_gnss_process:
0x1BB4	0xF8DDE000  LDR	LR, [SP, #0]
0x1BB8	0xB001    ADD	SP, SP, #4
0x1BBA	0x4770    BX	LR
0x1BBC	0x03BB2000  	__gnss_driver_f_buffer_warning+0
0x1BC0	0x09B22000  	__gnss_driver_f_hfc_active+0
0x1BC4	0x03C32000  	__gnss_driver_f_timer_active+0
0x1BC8	0x03C22000  	__gnss_driver_f_watchdog_active+0
0x1BCC	0x09C62000  	__gnss_driver_currentEv+10
0x1BD0	0x09C42000  	__gnss_driver_currentEv+8
0x1BD4	0x05CA2000  	__gnss_driver_rxBuff+2
0x1BD8	0x09BC2000  	__gnss_driver_currentEv+0
0x1BDC	0x05C82000  	__gnss_driver_rxBuff+0
0x1BE0	0x03C12000  	__gnss_driver_f_wdog_timeout+0
0x1BE4	0x03C02000  	__gnss_driver_f_response_ready+0
0x1BE8	0x03BA2000  	__gnss_driver_f_sequence_active+0
; end of _gnss_process
_gnss_default_handler:
;Click_GNSS_STM.c, 53 :: 		void gnss_default_handler( uint8_t *rsp, uint8_t *evArgs )
; rsp start address is: 0 (R0)
0x0F3C	0xB083    SUB	SP, SP, #12
0x0F3E	0xF8CDE000  STR	LR, [SP, #0]
; rsp end address is: 0 (R0)
; rsp start address is: 0 (R0)
;Click_GNSS_STM.c, 56 :: 		tmp = rsp;
0x0F42	0x9002    STR	R0, [SP, #8]
;Click_GNSS_STM.c, 58 :: 		mikrobus_logWrite( tmp, _LOG_TEXT );
0x0F44	0x9001    STR	R0, [SP, #4]
0x0F46	0x2101    MOVS	R1, #1
0x0F48	0xF7FFFD50  BL	_mikrobus_logWrite+0
0x0F4C	0x9801    LDR	R0, [SP, #4]
;Click_GNSS_STM.c, 59 :: 		if(*rsp == '$')
0x0F4E	0x7802    LDRB	R2, [R0, #0]
; rsp end address is: 0 (R0)
0x0F50	0x2A24    CMP	R2, #36
0x0F52	0xD10A    BNE	L_gnss_default_handler0
;Click_GNSS_STM.c, 61 :: 		memset(&demoBuffer[0], 0, 500);
0x0F54	0xF24012F4  MOVW	R2, #500
0x0F58	0xB212    SXTH	R2, R2
0x0F5A	0x2100    MOVS	R1, #0
0x0F5C	0x4805    LDR	R0, [PC, #20]
0x0F5E	0xF7FFFDAD  BL	_memset+0
;Click_GNSS_STM.c, 62 :: 		strcpy(demoBuffer, tmp);
0x0F62	0x9902    LDR	R1, [SP, #8]
0x0F64	0x4803    LDR	R0, [PC, #12]
0x0F66	0xF7FFFDB9  BL	_strcpy+0
;Click_GNSS_STM.c, 63 :: 		}
L_gnss_default_handler0:
;Click_GNSS_STM.c, 64 :: 		}
L_end_gnss_default_handler:
0x0F6A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F6E	0xB003    ADD	SP, SP, #12
0x0F70	0x4770    BX	LR
0x0F72	0xBF00    NOP
0x0F74	0x00312000  	_demoBuffer+0
; end of _gnss_default_handler
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x09EC	0xB083    SUB	SP, SP, #12
0x09EE	0xF8CDE000  STR	LR, [SP, #0]
0x09F2	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x09F4	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x09F6	0x220D    MOVS	R2, #13
0x09F8	0xF88D2008  STRB	R2, [SP, #8]
0x09FC	0x220A    MOVS	R2, #10
0x09FE	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x0A02	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x0A04	0xF7FFFFE2  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x0A08	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x0A0A	0x7802    LDRB	R2, [R0, #0]
0x0A0C	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x0A0E	0x9001    STR	R0, [SP, #4]
0x0A10	0xF7FFFFDC  BL	easymx_v7_STM32F107VC__log_write+0
0x0A14	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x0A16	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x0A18	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x0A1A	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x0A1C	0x7802    LDRB	R2, [R0, #0]
0x0A1E	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x0A20	0x9001    STR	R0, [SP, #4]
0x0A22	0xF7FFFFD3  BL	easymx_v7_STM32F107VC__log_write+0
0x0A26	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x0A28	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x0A2A	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x0A2C	0xAA02    ADD	R2, SP, #8
0x0A2E	0x4610    MOV	R0, R2
0x0A30	0xF7FFFFCC  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x0A34	0xF10D0209  ADD	R2, SP, #9
0x0A38	0x4610    MOV	R0, R2
0x0A3A	0xF7FFFFC7  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x0A3E	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x0A40	0x2006    MOVS	R0, #6
0x0A42	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x0A44	0x2900    CMP	R1, #0
0x0A46	0xD0DD    BEQ	L_mikrobus_logWrite97
0x0A48	0x2901    CMP	R1, #1
0x0A4A	0xD0DE    BEQ	L_mikrobus_logWrite98
0x0A4C	0x2902    CMP	R1, #2
0x0A4E	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x0A50	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x0A52	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x0A54	0xF8DDE000  LDR	LR, [SP, #0]
0x0A58	0xB003    ADD	SP, SP, #12
0x0A5A	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x09CC	0xB081    SUB	SP, SP, #4
0x09CE	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x09D2	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x09D4	0xB2CC    UXTB	R4, R1
0x09D6	0xB2A0    UXTH	R0, R4
0x09D8	0x4C03    LDR	R4, [PC, #12]
0x09DA	0x6824    LDR	R4, [R4, #0]
0x09DC	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x09DE	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x09E0	0xF8DDE000  LDR	LR, [SP, #0]
0x09E4	0xB001    ADD	SP, SP, #4
0x09E6	0x4770    BX	LR
0x09E8	0x03BC2000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x039C	0xB081    SUB	SP, SP, #4
0x039E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x03A2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03A4	0x4803    LDR	R0, [PC, #12]
0x03A6	0xF7FFFED3  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x03AA	0xF8DDE000  LDR	LR, [SP, #0]
0x03AE	0xB001    ADD	SP, SP, #4
0x03B0	0x4770    BX	LR
0x03B2	0xBF00    NOP
0x03B4	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0152	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0156	0x4601    MOV	R1, R0
0x0158	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x015C	0x680B    LDR	R3, [R1, #0]
0x015E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0162	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0164	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0166	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0168	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x016A	0xB001    ADD	SP, SP, #4
0x016C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x03B8	0xB081    SUB	SP, SP, #4
0x03BA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x03BE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03C0	0x4803    LDR	R0, [PC, #12]
0x03C2	0xF7FFFEC5  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x03C6	0xF8DDE000  LDR	LR, [SP, #0]
0x03CA	0xB001    ADD	SP, SP, #4
0x03CC	0x4770    BX	LR
0x03CE	0xBF00    NOP
0x03D0	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x0214	0xB081    SUB	SP, SP, #4
0x0216	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x021A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x021C	0x4803    LDR	R0, [PC, #12]
0x021E	0xF7FFFF97  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x0222	0xF8DDE000  LDR	LR, [SP, #0]
0x0226	0xB001    ADD	SP, SP, #4
0x0228	0x4770    BX	LR
0x022A	0xBF00    NOP
0x022C	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x0380	0xB081    SUB	SP, SP, #4
0x0382	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x0386	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0388	0x4803    LDR	R0, [PC, #12]
0x038A	0xF7FFFEE1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x038E	0xF8DDE000  LDR	LR, [SP, #0]
0x0392	0xB001    ADD	SP, SP, #4
0x0394	0x4770    BX	LR
0x0396	0xBF00    NOP
0x0398	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x0364	0xB081    SUB	SP, SP, #4
0x0366	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x036A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x036C	0x4803    LDR	R0, [PC, #12]
0x036E	0xF7FFFEEF  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x0372	0xF8DDE000  LDR	LR, [SP, #0]
0x0376	0xB001    ADD	SP, SP, #4
0x0378	0x4770    BX	LR
0x037A	0xBF00    NOP
0x037C	0x50004000  	UART5_SR+0
; end of _UART5_Write
_memset:
;__Lib_CString.c, 84 :: 		
; n start address is: 8 (R2)
; character start address is: 4 (R1)
; p1 start address is: 0 (R0)
0x0ABC	0xB081    SUB	SP, SP, #4
0x0ABE	0xB213    SXTH	R3, R2
0x0AC0	0x4602    MOV	R2, R0
0x0AC2	0xB2C8    UXTB	R0, R1
; n end address is: 8 (R2)
; character end address is: 4 (R1)
; p1 end address is: 0 (R0)
; p1 start address is: 8 (R2)
; character start address is: 0 (R0)
; n start address is: 12 (R3)
;__Lib_CString.c, 87 :: 		
; pp start address is: 4 (R1)
0x0AC4	0x4611    MOV	R1, R2
; n end address is: 12 (R3)
; p1 end address is: 8 (R2)
; pp end address is: 4 (R1)
0x0AC6	0xB21D    SXTH	R5, R3
;__Lib_CString.c, 88 :: 		
L_memset20:
; pp start address is: 4 (R1)
; n start address is: 20 (R5)
; n start address is: 20 (R5)
; character start address is: 0 (R0)
; character end address is: 0 (R0)
; p1 start address is: 8 (R2)
0x0AC8	0xB22C    SXTH	R4, R5
0x0ACA	0x1E6B    SUBS	R3, R5, #1
0x0ACC	0xB21D    SXTH	R5, R3
; n end address is: 20 (R5)
0x0ACE	0xB114    CBZ	R4, L_memset21
; character end address is: 0 (R0)
; n end address is: 20 (R5)
;__Lib_CString.c, 89 :: 		
; n start address is: 20 (R5)
; character start address is: 0 (R0)
0x0AD0	0x7008    STRB	R0, [R1, #0]
0x0AD2	0x1C49    ADDS	R1, R1, #1
; character end address is: 0 (R0)
; n end address is: 20 (R5)
; pp end address is: 4 (R1)
0x0AD4	0xE7F8    B	L_memset20
L_memset21:
;__Lib_CString.c, 90 :: 		
0x0AD6	0x4610    MOV	R0, R2
; p1 end address is: 8 (R2)
;__Lib_CString.c, 91 :: 		
L_end_memset:
0x0AD8	0xB001    ADD	SP, SP, #4
0x0ADA	0x4770    BX	LR
; end of _memset
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0ADC	0xB081    SUB	SP, SP, #4
0x0ADE	0x9100    STR	R1, [SP, #0]
0x0AE0	0x4601    MOV	R1, R0
0x0AE2	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0AE4	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0AE6	0x461C    MOV	R4, R3
0x0AE8	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0AEA	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0AEC	0x4603    MOV	R3, R0
0x0AEE	0x1C42    ADDS	R2, R0, #1
0x0AF0	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0AF2	0x781A    LDRB	R2, [R3, #0]
0x0AF4	0x7022    STRB	R2, [R4, #0]
0x0AF6	0x7822    LDRB	R2, [R4, #0]
0x0AF8	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0AFA	0x462B    MOV	R3, R5
0x0AFC	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0AFE	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0B00	0xB001    ADD	SP, SP, #4
0x0B02	0x4770    BX	LR
; end of _strcpy
__gnss_driver_hal_uartReady:
;__hal_stm32.c, 152 :: 		static uint8_t hal_uartReady()
0x0F04	0xB081    SUB	SP, SP, #4
0x0F06	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 154 :: 		return ( uint8_t )fp_uartReady();
0x0F0A	0x4C04    LDR	R4, [PC, #16]
0x0F0C	0x6824    LDR	R4, [R4, #0]
0x0F0E	0x47A0    BLX	R4
0x0F10	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 155 :: 		}
L_end_hal_uartReady:
0x0F12	0xF8DDE000  LDR	LR, [SP, #0]
0x0F16	0xB001    ADD	SP, SP, #4
0x0F18	0x4770    BX	LR
0x0F1A	0xBF00    NOP
0x0F1C	0x09D02000  	__gnss_driver_fp_uartReady+0
; end of __gnss_driver_hal_uartReady
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x0B04	0xB081    SUB	SP, SP, #4
0x0B06	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x0B0A	0x4803    LDR	R0, [PC, #12]
0x0B0C	0xF7FFFCF6  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x0B10	0xF8DDE000  LDR	LR, [SP, #0]
0x0B14	0xB001    ADD	SP, SP, #4
0x0B16	0x4770    BX	LR
0x0B18	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x04FC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x04FE	0x6802    LDR	R2, [R0, #0]
0x0500	0xF3C21140  UBFX	R1, R2, #5, #1
0x0504	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x0506	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x0508	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x050A	0x6809    LDR	R1, [R1, #0]
0x050C	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x050E	0xB001    ADD	SP, SP, #4
0x0510	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x0B34	0xB081    SUB	SP, SP, #4
0x0B36	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x0B3A	0x4803    LDR	R0, [PC, #12]
0x0B3C	0xF7FFFCD8  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x0B40	0xF8DDE000  LDR	LR, [SP, #0]
0x0B44	0xB001    ADD	SP, SP, #4
0x0B46	0x4770    BX	LR
0x0B48	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x04F0	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x04F2	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x04F4	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x04F8	0xB001    ADD	SP, SP, #4
0x04FA	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x0B1C	0xB081    SUB	SP, SP, #4
0x0B1E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x0B22	0x4803    LDR	R0, [PC, #12]
0x0B24	0xF7FFFCDE  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x0B28	0xF8DDE000  LDR	LR, [SP, #0]
0x0B2C	0xB001    ADD	SP, SP, #4
0x0B2E	0x4770    BX	LR
0x0B30	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x04E4	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x04E6	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x04E8	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x04EC	0xB001    ADD	SP, SP, #4
0x04EE	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x0A5C	0xB081    SUB	SP, SP, #4
0x0A5E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x0A62	0x4803    LDR	R0, [PC, #12]
0x0A64	0xF7FFFD4A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x0A68	0xF8DDE000  LDR	LR, [SP, #0]
0x0A6C	0xB001    ADD	SP, SP, #4
0x0A6E	0x4770    BX	LR
0x0A70	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x0AA4	0xB081    SUB	SP, SP, #4
0x0AA6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x0AAA	0x4803    LDR	R0, [PC, #12]
0x0AAC	0xF7FFFD20  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x0AB0	0xF8DDE000  LDR	LR, [SP, #0]
0x0AB4	0xB001    ADD	SP, SP, #4
0x0AB6	0x4770    BX	LR
0x0AB8	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x0A8C	0xB081    SUB	SP, SP, #4
0x0A8E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x0A92	0x4803    LDR	R0, [PC, #12]
0x0A94	0xF7FFFD26  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x0A98	0xF8DDE000  LDR	LR, [SP, #0]
0x0A9C	0xB001    ADD	SP, SP, #4
0x0A9E	0x4770    BX	LR
0x0AA0	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x0A74	0xB081    SUB	SP, SP, #4
0x0A76	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x0A7A	0x4803    LDR	R0, [PC, #12]
0x0A7C	0xF7FFFD3E  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x0A80	0xF8DDE000  LDR	LR, [SP, #0]
0x0A84	0xB001    ADD	SP, SP, #4
0x0A86	0x4770    BX	LR
0x0A88	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x0B4C	0xB081    SUB	SP, SP, #4
0x0B4E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x0B52	0x4803    LDR	R0, [PC, #12]
0x0B54	0xF7FFFCCC  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x0B58	0xF8DDE000  LDR	LR, [SP, #0]
0x0B5C	0xB001    ADD	SP, SP, #4
0x0B5E	0x4770    BX	LR
0x0B60	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x0DD0	0xB081    SUB	SP, SP, #4
0x0DD2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x0DD6	0x4803    LDR	R0, [PC, #12]
0x0DD8	0xF7FFFB84  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x0DDC	0xF8DDE000  LDR	LR, [SP, #0]
0x0DE0	0xB001    ADD	SP, SP, #4
0x0DE2	0x4770    BX	LR
0x0DE4	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x0D78	0xB081    SUB	SP, SP, #4
0x0D7A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x0D7E	0x4803    LDR	R0, [PC, #12]
0x0D80	0xF7FFFBBC  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x0D84	0xF8DDE000  LDR	LR, [SP, #0]
0x0D88	0xB001    ADD	SP, SP, #4
0x0D8A	0x4770    BX	LR
0x0D8C	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x0D90	0xB081    SUB	SP, SP, #4
0x0D92	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x0D96	0x4803    LDR	R0, [PC, #12]
0x0D98	0xF7FFFBAA  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x0D9C	0xF8DDE000  LDR	LR, [SP, #0]
0x0DA0	0xB001    ADD	SP, SP, #4
0x0DA2	0x4770    BX	LR
0x0DA4	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x0D60	0xB081    SUB	SP, SP, #4
0x0D62	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x0D66	0x4803    LDR	R0, [PC, #12]
0x0D68	0xF7FFFBBC  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x0D6C	0xF8DDE000  LDR	LR, [SP, #0]
0x0D70	0xB001    ADD	SP, SP, #4
0x0D72	0x4770    BX	LR
0x0D74	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x0E00	0xB081    SUB	SP, SP, #4
0x0E02	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x0E06	0x4803    LDR	R0, [PC, #12]
0x0E08	0xF7FFFB78  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x0E0C	0xF8DDE000  LDR	LR, [SP, #0]
0x0E10	0xB001    ADD	SP, SP, #4
0x0E12	0x4770    BX	LR
0x0E14	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x0E18	0xB081    SUB	SP, SP, #4
0x0E1A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x0E1E	0x4803    LDR	R0, [PC, #12]
0x0E20	0xF7FFFB66  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x0E24	0xF8DDE000  LDR	LR, [SP, #0]
0x0E28	0xB001    ADD	SP, SP, #4
0x0E2A	0x4770    BX	LR
0x0E2C	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x0DE8	0xB081    SUB	SP, SP, #4
0x0DEA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x0DEE	0x4803    LDR	R0, [PC, #12]
0x0DF0	0xF7FFFB78  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x0DF4	0xF8DDE000  LDR	LR, [SP, #0]
0x0DF8	0xB001    ADD	SP, SP, #4
0x0DFA	0x4770    BX	LR
0x0DFC	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__gnss_driver_hal_uartRead:
;__hal_stm32.c, 147 :: 		static uint8_t hal_uartRead()
0x0F20	0xB081    SUB	SP, SP, #4
0x0F22	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 149 :: 		return ( uint8_t )fp_uartRead();
0x0F26	0x4C04    LDR	R4, [PC, #16]
0x0F28	0x6824    LDR	R4, [R4, #0]
0x0F2A	0x47A0    BLX	R4
0x0F2C	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 150 :: 		}
L_end_hal_uartRead:
0x0F2E	0xF8DDE000  LDR	LR, [SP, #0]
0x0F32	0xB001    ADD	SP, SP, #4
0x0F34	0x4770    BX	LR
0x0F36	0xBF00    NOP
0x0F38	0x09CC2000  	__gnss_driver_fp_uartRead+0
; end of __gnss_driver_hal_uartRead
_gnss_putc:
;__gnss_driver.c, 580 :: 		void gnss_putc( uint8_t rxInput )
; rxInput start address is: 0 (R0)
; rxInput end address is: 0 (R0)
; rxInput start address is: 0 (R0)
;__gnss_driver.c, 582 :: 		CORE_BLOCK();
0x0E84	0x2200    MOVS	R2, #0
0x0E86	0x4916    LDR	R1, [PC, #88]
0x0E88	0x700A    STRB	R2, [R1, #0]
0x0E8A	0x2200    MOVS	R2, #0
0x0E8C	0x4915    LDR	R1, [PC, #84]
0x0E8E	0x700A    STRB	R2, [R1, #0]
0x0E90	0x2201    MOVS	R2, #1
0x0E92	0x4915    LDR	R1, [PC, #84]
0x0E94	0x700A    STRB	R2, [R1, #0]
;__gnss_driver.c, 583 :: 		TIMER_START();
0x0E96	0x2200    MOVS	R2, #0
0x0E98	0x4914    LDR	R1, [PC, #80]
0x0E9A	0x600A    STR	R2, [R1, #0]
0x0E9C	0x2201    MOVS	R2, #1
0x0E9E	0x4914    LDR	R1, [PC, #80]
0x0EA0	0x700A    STRB	R2, [R1, #0]
;__gnss_driver.c, 584 :: 		rxBuff.storage[rxBuff.idx++] = rxInput;
0x0EA2	0x4914    LDR	R1, [PC, #80]
0x0EA4	0x880A    LDRH	R2, [R1, #0]
0x0EA6	0x4914    LDR	R1, [PC, #80]
0x0EA8	0x1889    ADDS	R1, R1, R2
0x0EAA	0x7008    STRB	R0, [R1, #0]
; rxInput end address is: 0 (R0)
0x0EAC	0x4911    LDR	R1, [PC, #68]
0x0EAE	0x8809    LDRH	R1, [R1, #0]
0x0EB0	0x1C4A    ADDS	R2, R1, #1
0x0EB2	0x4910    LDR	R1, [PC, #64]
0x0EB4	0x800A    STRH	R2, [R1, #0]
;__gnss_driver.c, 586 :: 		if (_GNSS_BUF_WARNING <= rxBuff.idx)
0x0EB6	0x490F    LDR	R1, [PC, #60]
0x0EB8	0x880A    LDRH	R2, [R1, #0]
0x0EBA	0x4910    LDR	R1, [PC, #64]
0x0EBC	0x428A    CMP	R2, R1
0x0EBE	0xD302    BCC	L_gnss_putc54
;__gnss_driver.c, 588 :: 		f_buffer_warning = true;
0x0EC0	0x2201    MOVS	R2, #1
0x0EC2	0x490F    LDR	R1, [PC, #60]
0x0EC4	0x700A    STRB	R2, [R1, #0]
;__gnss_driver.c, 589 :: 		}
L_gnss_putc54:
;__gnss_driver.c, 591 :: 		if((_GNSS_BUF_SIZE - 1) == rxBuff.idx)
0x0EC6	0x490B    LDR	R1, [PC, #44]
0x0EC8	0x880A    LDRH	R2, [R1, #0]
0x0ECA	0xF24031E7  MOVW	R1, #999
0x0ECE	0x428A    CMP	R2, R1
0x0ED0	0xD104    BNE	L_gnss_putc55
;__gnss_driver.c, 593 :: 		rxBuff.idx--;
0x0ED2	0x4908    LDR	R1, [PC, #32]
0x0ED4	0x8809    LDRH	R1, [R1, #0]
0x0ED6	0x1E4A    SUBS	R2, R1, #1
0x0ED8	0x4906    LDR	R1, [PC, #24]
0x0EDA	0x800A    STRH	R2, [R1, #0]
;__gnss_driver.c, 594 :: 		}
L_gnss_putc55:
;__gnss_driver.c, 595 :: 		}
L_end_gnss_putc:
0x0EDC	0x4770    BX	LR
0x0EDE	0xBF00    NOP
0x0EE0	0x03C12000  	__gnss_driver_f_wdog_timeout+0
0x0EE4	0x03C02000  	__gnss_driver_f_response_ready+0
0x0EE8	0x03BA2000  	__gnss_driver_f_sequence_active+0
0x0EEC	0x09B82000  	__gnss_driver_c_timer+0
0x0EF0	0x03C32000  	__gnss_driver_f_timer_active+0
0x0EF4	0x05C82000  	__gnss_driver_rxBuff+0
0x0EF8	0x05CA2000  	__gnss_driver_rxBuff+2
0x0EFC	0x00C00000  	__GNSS_BUF_WARNING
0x0F00	0x03BB2000  	__gnss_driver_f_buffer_warning+0
; end of _gnss_putc
__gnss_driver_createEvent:
;__gnss_driver.c, 509 :: 		static void createEvent( char *pInput, T_CORE_event *pEvent )
0x0FC4	0xB089    SUB	SP, SP, #36
0x0FC6	0xF8CDE000  STR	LR, [SP, #0]
0x0FCA	0x9006    STR	R0, [SP, #24]
0x0FCC	0x9107    STR	R1, [SP, #28]
;__gnss_driver.c, 511 :: 		uint8_t hIdx     = 0;
;__gnss_driver.c, 512 :: 		uint8_t startIdx = 0;
;__gnss_driver.c, 513 :: 		uint8_t startOff = 0;
;__gnss_driver.c, 514 :: 		uint8_t endIdx   = 0;
;__gnss_driver.c, 515 :: 		uint8_t endOff   = 0;
;__gnss_driver.c, 517 :: 		char tmp[_GNSS_CMD_MAXSIZE + 1] = { 0 };
0x0FCE	0xF10D0B04  ADD	R11, SP, #4
0x0FD2	0xF10B0A11  ADD	R10, R11, #17
0x0FD6	0xF8DFC0B0  LDR	R12, [PC, #176]
0x0FDA	0xF000FE0D  BL	___CC2DW+0
;__gnss_driver.c, 520 :: 		startIdx = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_IDX);
0x0FDE	0x2300    MOVS	R3, #0
0x0FE0	0x2207    MOVS	R2, #7
0x0FE2	0x492A    LDR	R1, [PC, #168]
0x0FE4	0x9806    LDR	R0, [SP, #24]
0x0FE6	0xF7FFFE4D  BL	__gnss_driver_searchLut+0
0x0FEA	0xF88D0020  STRB	R0, [SP, #32]
;__gnss_driver.c, 521 :: 		startOff = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_OFFSET);
0x0FEE	0x2301    MOVS	R3, #1
0x0FF0	0x2207    MOVS	R2, #7
0x0FF2	0x4926    LDR	R1, [PC, #152]
0x0FF4	0x9806    LDR	R0, [SP, #24]
0x0FF6	0xF7FFFE45  BL	__gnss_driver_searchLut+0
0x0FFA	0xF88D0021  STRB	R0, [SP, #33]
;__gnss_driver.c, 522 :: 		endIdx = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_IDX);
0x0FFE	0x2300    MOVS	R3, #0
0x1000	0x2206    MOVS	R2, #6
0x1002	0x4923    LDR	R1, [PC, #140]
0x1004	0x9806    LDR	R0, [SP, #24]
0x1006	0xF7FFFE3D  BL	__gnss_driver_searchLut+0
0x100A	0xF88D0022  STRB	R0, [SP, #34]
;__gnss_driver.c, 523 :: 		endOff = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_OFFSET);
0x100E	0x2301    MOVS	R3, #1
0x1010	0x2206    MOVS	R2, #6
0x1012	0x491F    LDR	R1, [PC, #124]
0x1014	0x9806    LDR	R0, [SP, #24]
0x1016	0xF7FFFE35  BL	__gnss_driver_searchLut+0
; endOff start address is: 4 (R1)
0x101A	0xB2C1    UXTB	R1, R0
;__gnss_driver.c, 525 :: 		if (0 == endOff)
0x101C	0xB908    CBNZ	R0, L___gnss_driver_createEvent113
; endOff end address is: 4 (R1)
;__gnss_driver.c, 527 :: 		endOff = _GNSS_CMD_MAXSIZE;
; endOff start address is: 0 (R0)
0x101E	0x2010    MOVS	R0, #16
; endOff end address is: 0 (R0)
;__gnss_driver.c, 528 :: 		}
0x1020	0xE000    B	L___gnss_driver_createEvent52
L___gnss_driver_createEvent113:
;__gnss_driver.c, 525 :: 		if (0 == endOff)
0x1022	0xB2C8    UXTB	R0, R1
;__gnss_driver.c, 528 :: 		}
L___gnss_driver_createEvent52:
;__gnss_driver.c, 531 :: 		_strncpy(tmp, pInput + startOff, endOff - startOff);
; endOff start address is: 0 (R0)
0x1024	0xF89D2021  LDRB	R2, [SP, #33]
0x1028	0x1A84    SUB	R4, R0, R2
; endOff end address is: 0 (R0)
0x102A	0xF89D3021  LDRB	R3, [SP, #33]
0x102E	0x9A06    LDR	R2, [SP, #24]
0x1030	0x18D3    ADDS	R3, R2, R3
0x1032	0xAA01    ADD	R2, SP, #4
0x1034	0x4619    MOV	R1, R3
0x1036	0x4610    MOV	R0, R2
0x1038	0xB2A2    UXTH	R2, R4
0x103A	0xF7FFFE09  BL	__gnss_driver__strncpy+0
;__gnss_driver.c, 532 :: 		hIdx                         = locateHandler(tmp);
0x103E	0xAA01    ADD	R2, SP, #4
0x1040	0x4610    MOV	R0, R2
0x1042	0xF7FFFDA3  BL	__gnss_driver_locateHandler+0
; hIdx start address is: 4 (R1)
0x1046	0xB2C1    UXTB	R1, R0
;__gnss_driver.c, 533 :: 		pEvent->fpHdl                = hdlBuff.storage[hIdx].handler;
0x1048	0xB2C2    UXTB	R2, R0
0x104A	0x0113    LSLS	R3, R2, #4
0x104C	0x4A11    LDR	R2, [PC, #68]
0x104E	0x18D2    ADDS	R2, R2, R3
0x1050	0x320C    ADDS	R2, #12
0x1052	0x6813    LDR	R3, [R2, #0]
0x1054	0x9A07    LDR	R2, [SP, #28]
0x1056	0x6013    STR	R3, [R2, #0]
;__gnss_driver.c, 534 :: 		pEvent->wDogLimit            = hdlBuff.storage[hIdx].timeout;
0x1058	0x9A07    LDR	R2, [SP, #28]
0x105A	0x1D14    ADDS	R4, R2, #4
0x105C	0x010B    LSLS	R3, R1, #4
; hIdx end address is: 4 (R1)
0x105E	0x4A0D    LDR	R2, [PC, #52]
0x1060	0x18D2    ADDS	R2, R2, R3
0x1062	0x3208    ADDS	R2, #8
0x1064	0x6812    LDR	R2, [R2, #0]
0x1066	0x6022    STR	R2, [R4, #0]
;__gnss_driver.c, 535 :: 		pEvent->evArg[_GNSS_EVARG_START_T]  = startIdx;
0x1068	0x9A07    LDR	R2, [SP, #28]
0x106A	0xF2020308  ADDW	R3, R2, #8
0x106E	0xF89D2020  LDRB	R2, [SP, #32]
0x1072	0x701A    STRB	R2, [R3, #0]
;__gnss_driver.c, 536 :: 		pEvent->evArg[_GNSS_EVARG_END_T]    = endIdx;
0x1074	0x9A07    LDR	R2, [SP, #28]
0x1076	0x3208    ADDS	R2, #8
0x1078	0x1C53    ADDS	R3, R2, #1
0x107A	0xF89D2022  LDRB	R2, [SP, #34]
0x107E	0x701A    STRB	R2, [R3, #0]
;__gnss_driver.c, 537 :: 		}
L_end_createEvent:
0x1080	0xF8DDE000  LDR	LR, [SP, #0]
0x1084	0xB009    ADD	SP, SP, #36
0x1086	0x4770    BX	LR
0x1088	0x2B2A0000  	?ICS__gnss_driver_createEvent_tmp_L0+0
0x108C	0x03932000  	__gnss_driver_LUT_START_MARK+0
0x1090	0x03A82000  	__gnss_driver_LUT_END_MARK+0
0x1094	0x03C82000  	__gnss_driver_hdlBuff+4
; end of __gnss_driver_createEvent
__gnss_driver_searchLut:
;__gnss_driver.c, 475 :: 		static uint8_t searchLut( char* pInput, char (*pLut)[ LUTS_WIDTH ], uint8_t lutSize, uint8_t flag )
; pInput start address is: 0 (R0)
0x0C84	0xB085    SUB	SP, SP, #20
0x0C86	0xF8CDE000  STR	LR, [SP, #0]
0x0C8A	0x4682    MOV	R10, R0
0x0C8C	0x9102    STR	R1, [SP, #8]
0x0C8E	0xF88D200C  STRB	R2, [SP, #12]
0x0C92	0xF88D3010  STRB	R3, [SP, #16]
; pInput end address is: 0 (R0)
; pInput start address is: 40 (R10)
;__gnss_driver.c, 477 :: 		uint8_t     inLen    = 0;
;__gnss_driver.c, 478 :: 		uint8_t     inOff    = 0;
;__gnss_driver.c, 479 :: 		uint8_t     lutLen   = 0;
;__gnss_driver.c, 480 :: 		uint8_t     lutIdx   = 0;
;__gnss_driver.c, 482 :: 		if (_GNSS_CMD_MAXSIZE < (inLen = _strlen(pInput)))
0x0C96	0x4650    MOV	R0, R10
0x0C98	0xF7FFFD5E  BL	__gnss_driver__strlen+0
0x0C9C	0xF88D0011  STRB	R0, [SP, #17]
0x0CA0	0xB2C4    UXTB	R4, R0
0x0CA2	0x2C10    CMP	R4, #16
0x0CA4	0xD902    BLS	L___gnss_driver_searchLut41
;__gnss_driver.c, 484 :: 		inLen = _GNSS_CMD_MAXSIZE;
0x0CA6	0x2410    MOVS	R4, #16
0x0CA8	0xF88D4011  STRB	R4, [SP, #17]
;__gnss_driver.c, 485 :: 		}
L___gnss_driver_searchLut41:
;__gnss_driver.c, 487 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
; lutIdx start address is: 28 (R7)
0x0CAC	0x2701    MOVS	R7, #1
; lutIdx end address is: 28 (R7)
; pInput end address is: 40 (R10)
0x0CAE	0x4651    MOV	R1, R10
L___gnss_driver_searchLut42:
; lutIdx start address is: 28 (R7)
; pInput start address is: 4 (R1)
0x0CB0	0xF89D400C  LDRB	R4, [SP, #12]
0x0CB4	0x42A7    CMP	R7, R4
0x0CB6	0xD23F    BCS	L___gnss_driver_searchLut43
;__gnss_driver.c, 489 :: 		lutLen = _strlen(pLut[lutIdx]);
0x0CB8	0x2403    MOVS	R4, #3
0x0CBA	0xFB04F507  MUL	R5, R4, R7
0x0CBE	0x9C02    LDR	R4, [SP, #8]
0x0CC0	0x1964    ADDS	R4, R4, R5
0x0CC2	0x9101    STR	R1, [SP, #4]
0x0CC4	0x4620    MOV	R0, R4
0x0CC6	0xF7FFFD47  BL	__gnss_driver__strlen+0
0x0CCA	0x9901    LDR	R1, [SP, #4]
; lutLen start address is: 8 (R2)
0x0CCC	0xB2C2    UXTB	R2, R0
;__gnss_driver.c, 491 :: 		for (inOff = 0; inOff < inLen; inOff++)
; inOff start address is: 48 (R12)
0x0CCE	0xF2400C00  MOVW	R12, #0
; lutIdx end address is: 28 (R7)
; pInput end address is: 4 (R1)
; lutLen end address is: 8 (R2)
; inOff end address is: 48 (R12)
0x0CD2	0x468A    MOV	R10, R1
0x0CD4	0xB2F9    UXTB	R1, R7
0x0CD6	0xFA5FFB8C  UXTB	R11, R12
0x0CDA	0xFA5FFC82  UXTB	R12, R2
L___gnss_driver_searchLut45:
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
; lutLen start address is: 48 (R12)
; lutLen end address is: 48 (R12)
; pInput start address is: 40 (R10)
; lutIdx start address is: 4 (R1)
0x0CDE	0xF89D4011  LDRB	R4, [SP, #17]
0x0CE2	0x45A3    CMP	R11, R4
0x0CE4	0xD223    BCS	L___gnss_driver_searchLut46
; lutLen end address is: 48 (R12)
;__gnss_driver.c, 493 :: 		if (!_strncmp(pLut[lutIdx], pInput + inOff, lutLen))
; lutLen start address is: 48 (R12)
0x0CE6	0xEB0A060B  ADD	R6, R10, R11, LSL #0
0x0CEA	0x2403    MOVS	R4, #3
0x0CEC	0xFB04F501  MUL	R5, R4, R1
0x0CF0	0x9C02    LDR	R4, [SP, #8]
0x0CF2	0x1964    ADDS	R4, R4, R5
0x0CF4	0xF88D1004  STRB	R1, [SP, #4]
0x0CF8	0xFA5FF28C  UXTB	R2, R12
0x0CFC	0x4631    MOV	R1, R6
0x0CFE	0x4620    MOV	R0, R4
0x0D00	0xF7FFFD3C  BL	__gnss_driver__strncmp+0
0x0D04	0xF89D1004  LDRB	R1, [SP, #4]
0x0D08	0xB958    CBNZ	R0, L___gnss_driver_searchLut48
;__gnss_driver.c, 495 :: 		if (SEARCH_IDX == flag)
0x0D0A	0xF89D4010  LDRB	R4, [SP, #16]
0x0D0E	0xB90C    CBNZ	R4, L___gnss_driver_searchLut49
; inOff end address is: 44 (R11)
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
;__gnss_driver.c, 497 :: 		return lutIdx;
0x0D10	0xB2C8    UXTB	R0, R1
; lutIdx end address is: 4 (R1)
0x0D12	0xE012    B	L_end_searchLut
;__gnss_driver.c, 498 :: 		}
L___gnss_driver_searchLut49:
;__gnss_driver.c, 499 :: 		else if (SEARCH_OFFSET == flag)
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
0x0D14	0xF89D4010  LDRB	R4, [SP, #16]
0x0D18	0x2C01    CMP	R4, #1
0x0D1A	0xD102    BNE	L___gnss_driver_searchLut51
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
; lutIdx end address is: 4 (R1)
;__gnss_driver.c, 501 :: 		return inOff;
0x0D1C	0xFA5FF08B  UXTB	R0, R11
; inOff end address is: 44 (R11)
0x0D20	0xE00B    B	L_end_searchLut
;__gnss_driver.c, 502 :: 		}
L___gnss_driver_searchLut51:
;__gnss_driver.c, 503 :: 		}
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
L___gnss_driver_searchLut48:
;__gnss_driver.c, 491 :: 		for (inOff = 0; inOff < inLen; inOff++)
0x0D22	0xF10B0401  ADD	R4, R11, #1
; inOff end address is: 44 (R11)
; inOff start address is: 0 (R0)
0x0D26	0xB2E0    UXTB	R0, R4
;__gnss_driver.c, 504 :: 		}
; lutLen end address is: 48 (R12)
; inOff end address is: 0 (R0)
0x0D28	0xFA5FFB80  UXTB	R11, R0
0x0D2C	0xE7D7    B	L___gnss_driver_searchLut45
L___gnss_driver_searchLut46:
;__gnss_driver.c, 487 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
0x0D2E	0x1C4C    ADDS	R4, R1, #1
; lutIdx end address is: 4 (R1)
; lutIdx start address is: 20 (R5)
0x0D30	0xB2E5    UXTB	R5, R4
;__gnss_driver.c, 505 :: 		}
0x0D32	0x4651    MOV	R1, R10
; pInput end address is: 40 (R10)
; lutIdx end address is: 20 (R5)
0x0D34	0xB2EF    UXTB	R7, R5
0x0D36	0xE7BB    B	L___gnss_driver_searchLut42
L___gnss_driver_searchLut43:
;__gnss_driver.c, 506 :: 		return 0;
0x0D38	0x2000    MOVS	R0, #0
;__gnss_driver.c, 507 :: 		}
L_end_searchLut:
0x0D3A	0xF8DDE000  LDR	LR, [SP, #0]
0x0D3E	0xB005    ADD	SP, SP, #20
0x0D40	0x4770    BX	LR
; end of __gnss_driver_searchLut
__gnss_driver__strlen:
;__gnss_driver.c, 329 :: 		static uint16_t _strlen(uint8_t *s)
; s start address is: 0 (R0)
0x0758	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__gnss_driver.c, 331 :: 		uint16_t i = 0;
; i start address is: 12 (R3)
0x075A	0xF2400300  MOVW	R3, #0
;__gnss_driver.c, 332 :: 		uint16_t c = 0;
; c start address is: 0 (R0)
0x075E	0xF2400000  MOVW	R0, #0
; s end address is: 4 (R1)
; c end address is: 0 (R0)
; i end address is: 12 (R3)
0x0762	0xB282    UXTH	R2, R0
0x0764	0x4608    MOV	R0, R1
;__gnss_driver.c, 334 :: 		while (0 != s[i])
L___gnss_driver__strlen17:
; c start address is: 8 (R2)
; i start address is: 12 (R3)
; s start address is: 0 (R0)
0x0766	0x18C1    ADDS	R1, R0, R3
0x0768	0x7809    LDRB	R1, [R1, #0]
0x076A	0xB121    CBZ	R1, L___gnss_driver__strlen18
;__gnss_driver.c, 336 :: 		i++;
0x076C	0x1C5B    ADDS	R3, R3, #1
0x076E	0xB29B    UXTH	R3, R3
;__gnss_driver.c, 337 :: 		c++;
0x0770	0x1C52    ADDS	R2, R2, #1
0x0772	0xB292    UXTH	R2, R2
;__gnss_driver.c, 338 :: 		}
; s end address is: 0 (R0)
; i end address is: 12 (R3)
0x0774	0xE7F7    B	L___gnss_driver__strlen17
L___gnss_driver__strlen18:
;__gnss_driver.c, 340 :: 		return c;
0x0776	0xB290    UXTH	R0, R2
; c end address is: 8 (R2)
;__gnss_driver.c, 341 :: 		}
L_end__strlen:
0x0778	0x4770    BX	LR
; end of __gnss_driver__strlen
__gnss_driver__strncmp:
;__gnss_driver.c, 261 :: 		static int8_t _strncmp(uint8_t *cs, uint8_t *ct, uint16_t count)
; count start address is: 8 (R2)
; ct start address is: 4 (R1)
; cs start address is: 0 (R0)
0x077C	0xB293    UXTH	R3, R2
0x077E	0x460A    MOV	R2, R1
0x0780	0x4601    MOV	R1, R0
; count end address is: 8 (R2)
; ct end address is: 4 (R1)
; cs end address is: 0 (R0)
; cs start address is: 4 (R1)
; ct start address is: 8 (R2)
; count start address is: 12 (R3)
;__gnss_driver.c, 265 :: 		uint16_t i = 0;
; i start address is: 16 (R4)
0x0782	0xF2400400  MOVW	R4, #0
;__gnss_driver.c, 266 :: 		uint16_t j = 0;
; j start address is: 0 (R0)
0x0786	0xF2400000  MOVW	R0, #0
; ct end address is: 8 (R2)
; count end address is: 12 (R3)
; j end address is: 0 (R0)
; i end address is: 16 (R4)
0x078A	0xFA1FF880  UXTH	R8, R0
0x078E	0x4610    MOV	R0, R2
0x0790	0xB29A    UXTH	R2, R3
;__gnss_driver.c, 268 :: 		while (0 != count)
L___gnss_driver__strncmp2:
; j start address is: 32 (R8)
; ct start address is: 0 (R0)
; i start address is: 16 (R4)
; count start address is: 8 (R2)
; ct start address is: 0 (R0)
; ct end address is: 0 (R0)
; cs start address is: 4 (R1)
; cs end address is: 4 (R1)
0x0792	0xB1EA    CBZ	R2, L___gnss_driver__strncmp3
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
;__gnss_driver.c, 270 :: 		c1 = cs[i++];
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x0794	0x190B    ADDS	R3, R1, R4
0x0796	0x781D    LDRB	R5, [R3, #0]
; c1 start address is: 24 (R6)
0x0798	0xB2EE    UXTB	R6, R5
0x079A	0x1C63    ADDS	R3, R4, #1
; i end address is: 16 (R4)
; i start address is: 28 (R7)
0x079C	0xB29F    UXTH	R7, R3
;__gnss_driver.c, 271 :: 		c2 = ct[j++];
0x079E	0xEB000308  ADD	R3, R0, R8, LSL #0
0x07A2	0x781C    LDRB	R4, [R3, #0]
; c2 start address is: 36 (R9)
0x07A4	0xFA5FF984  UXTB	R9, R4
0x07A8	0xF1080801  ADD	R8, R8, #1
0x07AC	0xFA1FF888  UXTH	R8, R8
;__gnss_driver.c, 273 :: 		if (c1 != c2)
0x07B0	0x42A5    CMP	R5, R4
0x07B2	0xD007    BEQ	L___gnss_driver__strncmp4
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__gnss_driver.c, 275 :: 		return c1 < c2 ? -1 : 1;
0x07B4	0x454E    CMP	R6, R9
0x07B6	0xD202    BCS	L___gnss_driver__strncmp5
; c1 end address is: 24 (R6)
; c2 end address is: 36 (R9)
; ?FLOC____gnss_driver__strncmp?T37 start address is: 0 (R0)
0x07B8	0x20FF    MOVS	R0, #-1
0x07BA	0xB240    SXTB	R0, R0
; ?FLOC____gnss_driver__strncmp?T37 end address is: 0 (R0)
0x07BC	0xE001    B	L___gnss_driver__strncmp6
L___gnss_driver__strncmp5:
; ?FLOC____gnss_driver__strncmp?T37 start address is: 0 (R0)
0x07BE	0x2001    MOVS	R0, #1
0x07C0	0xB240    SXTB	R0, R0
; ?FLOC____gnss_driver__strncmp?T37 end address is: 0 (R0)
L___gnss_driver__strncmp6:
; ?FLOC____gnss_driver__strncmp?T37 start address is: 0 (R0)
; ?FLOC____gnss_driver__strncmp?T37 end address is: 0 (R0)
0x07C2	0xE007    B	L_end__strncmp
;__gnss_driver.c, 276 :: 		}
L___gnss_driver__strncmp4:
;__gnss_driver.c, 277 :: 		if (0 == c1)
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; c1 start address is: 24 (R6)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x07C4	0xB906    CBNZ	R6, L___gnss_driver__strncmp7
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; c1 end address is: 24 (R6)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__gnss_driver.c, 279 :: 		break;
0x07C6	0xE003    B	L___gnss_driver__strncmp3
;__gnss_driver.c, 280 :: 		}
L___gnss_driver__strncmp7:
;__gnss_driver.c, 281 :: 		count--;
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x07C8	0x1E52    SUBS	R2, R2, #1
0x07CA	0xB292    UXTH	R2, R2
;__gnss_driver.c, 282 :: 		}
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
0x07CC	0xB2BC    UXTH	R4, R7
0x07CE	0xE7E0    B	L___gnss_driver__strncmp2
L___gnss_driver__strncmp3:
;__gnss_driver.c, 283 :: 		return 0;
0x07D0	0x2000    MOVS	R0, #0
0x07D2	0xB240    SXTB	R0, R0
;__gnss_driver.c, 284 :: 		}
L_end__strncmp:
0x07D4	0x4770    BX	LR
; end of __gnss_driver__strncmp
__gnss_driver__strncpy:
;__gnss_driver.c, 286 :: 		static void _strncpy(uint8_t *dest, uint8_t *src, uint16_t count)
; count start address is: 8 (R2)
; src start address is: 4 (R1)
; dest start address is: 0 (R0)
0x0C50	0xB081    SUB	SP, SP, #4
; count end address is: 8 (R2)
; src end address is: 4 (R1)
; dest end address is: 0 (R0)
; dest start address is: 0 (R0)
; src start address is: 4 (R1)
; count start address is: 8 (R2)
;__gnss_driver.c, 288 :: 		char *tmp  = dest;
; tmp start address is: 16 (R4)
0x0C52	0x4604    MOV	R4, R0
; dest end address is: 0 (R0)
;__gnss_driver.c, 290 :: 		uint16_t i = 0;
; i start address is: 0 (R0)
0x0C54	0xF2400000  MOVW	R0, #0
; src end address is: 4 (R1)
; count end address is: 8 (R2)
; i end address is: 0 (R0)
; tmp end address is: 16 (R4)
0x0C58	0xF8AD2000  STRH	R2, [SP, #0]
0x0C5C	0xB282    UXTH	R2, R0
0x0C5E	0x4608    MOV	R0, R1
0x0C60	0xF8BD1000  LDRH	R1, [SP, #0]
;__gnss_driver.c, 292 :: 		while (0 != count)
L___gnss_driver__strncpy8:
; i start address is: 8 (R2)
; src start address is: 0 (R0)
; tmp start address is: 16 (R4)
; count start address is: 4 (R1)
; src start address is: 0 (R0)
; src end address is: 0 (R0)
0x0C64	0xB159    CBZ	R1, L___gnss_driver__strncpy9
; src end address is: 0 (R0)
;__gnss_driver.c, 294 :: 		if (0 != (*tmp = src[i]))
; src start address is: 0 (R0)
0x0C66	0x1883    ADDS	R3, R0, R2
0x0C68	0x781B    LDRB	R3, [R3, #0]
0x0C6A	0x7023    STRB	R3, [R4, #0]
0x0C6C	0x7823    LDRB	R3, [R4, #0]
0x0C6E	0xB113    CBZ	R3, L___gnss_driver__strncpy108
;__gnss_driver.c, 296 :: 		i++;
0x0C70	0x1C52    ADDS	R2, R2, #1
0x0C72	0xB292    UXTH	R2, R2
; i end address is: 8 (R2)
;__gnss_driver.c, 297 :: 		}
0x0C74	0xE7FF    B	L___gnss_driver__strncpy10
L___gnss_driver__strncpy108:
;__gnss_driver.c, 294 :: 		if (0 != (*tmp = src[i]))
;__gnss_driver.c, 297 :: 		}
L___gnss_driver__strncpy10:
;__gnss_driver.c, 298 :: 		tmp++;
; i start address is: 8 (R2)
0x0C76	0x1C64    ADDS	R4, R4, #1
;__gnss_driver.c, 299 :: 		count--;
0x0C78	0x1E49    SUBS	R1, R1, #1
0x0C7A	0xB289    UXTH	R1, R1
;__gnss_driver.c, 300 :: 		}
; src end address is: 0 (R0)
; i end address is: 8 (R2)
; tmp end address is: 16 (R4)
; count end address is: 4 (R1)
0x0C7C	0xE7F2    B	L___gnss_driver__strncpy8
L___gnss_driver__strncpy9:
;__gnss_driver.c, 301 :: 		}
L_end__strncpy:
0x0C7E	0xB001    ADD	SP, SP, #4
0x0C80	0x4770    BX	LR
; end of __gnss_driver__strncpy
__gnss_driver_locateHandler:
;__gnss_driver.c, 448 :: 		static uint16_t locateHandler( char* pCmd )
; pCmd start address is: 0 (R0)
0x0B8C	0xB081    SUB	SP, SP, #4
0x0B8E	0xF8CDE000  STR	LR, [SP, #0]
0x0B92	0x4604    MOV	R4, R0
; pCmd end address is: 0 (R0)
; pCmd start address is: 16 (R4)
;__gnss_driver.c, 455 :: 		len = _strlen(pCmd);
0x0B94	0x4620    MOV	R0, R4
0x0B96	0xF7FFFDDF  BL	__gnss_driver__strlen+0
; len start address is: 20 (R5)
0x0B9A	0xB2C5    UXTB	R5, R0
;__gnss_driver.c, 456 :: 		hash = generateHash(pCmd);
0x0B9C	0x4620    MOV	R0, R4
; pCmd end address is: 16 (R4)
0x0B9E	0xF000FA83  BL	__gnss_driver_generateHash+0
; hash start address is: 0 (R0)
;__gnss_driver.c, 458 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
; idx start address is: 16 (R4)
0x0BA2	0x2401    MOVS	R4, #1
; len end address is: 20 (R5)
; idx end address is: 16 (R4)
0x0BA4	0xB2EB    UXTB	R3, R5
L___gnss_driver_locateHandler36:
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
; hash end address is: 0 (R0)
; len start address is: 12 (R3)
; len end address is: 12 (R3)
0x0BA6	0x490D    LDR	R1, [PC, #52]
0x0BA8	0x8809    LDRH	R1, [R1, #0]
0x0BAA	0x428C    CMP	R4, R1
0x0BAC	0xD211    BCS	L___gnss_driver_locateHandler37
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__gnss_driver.c, 460 :: 		if (hdlBuff.storage[idx].len == len)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
0x0BAE	0x0122    LSLS	R2, R4, #4
0x0BB0	0x490B    LDR	R1, [PC, #44]
0x0BB2	0x1889    ADDS	R1, R1, R2
0x0BB4	0x8809    LDRH	R1, [R1, #0]
0x0BB6	0x4299    CMP	R1, R3
0x0BB8	0xD108    BNE	L___gnss_driver_locateHandler39
;__gnss_driver.c, 462 :: 		if (hdlBuff.storage[idx].hash == hash)
0x0BBA	0x0122    LSLS	R2, R4, #4
0x0BBC	0x4908    LDR	R1, [PC, #32]
0x0BBE	0x1889    ADDS	R1, R1, R2
0x0BC0	0x1D09    ADDS	R1, R1, #4
0x0BC2	0x6809    LDR	R1, [R1, #0]
0x0BC4	0x4281    CMP	R1, R0
0x0BC6	0xD101    BNE	L___gnss_driver_locateHandler40
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__gnss_driver.c, 464 :: 		return idx;
0x0BC8	0xB2A0    UXTH	R0, R4
; idx end address is: 16 (R4)
0x0BCA	0xE003    B	L_end_locateHandler
;__gnss_driver.c, 465 :: 		}
L___gnss_driver_locateHandler40:
;__gnss_driver.c, 466 :: 		}
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
L___gnss_driver_locateHandler39:
;__gnss_driver.c, 458 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
0x0BCC	0x1C64    ADDS	R4, R4, #1
0x0BCE	0xB2A4    UXTH	R4, R4
;__gnss_driver.c, 467 :: 		}
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
; idx end address is: 16 (R4)
0x0BD0	0xE7E9    B	L___gnss_driver_locateHandler36
L___gnss_driver_locateHandler37:
;__gnss_driver.c, 469 :: 		return 0;
0x0BD2	0x2000    MOVS	R0, #0
;__gnss_driver.c, 470 :: 		}
L_end_locateHandler:
0x0BD4	0xF8DDE000  LDR	LR, [SP, #0]
0x0BD8	0xB001    ADD	SP, SP, #4
0x0BDA	0x4770    BX	LR
0x0BDC	0x03C42000  	__gnss_driver_hdlBuff+0
0x0BE0	0x03C82000  	__gnss_driver_hdlBuff+4
; end of __gnss_driver_locateHandler
_gnss_parser:
;__gnss_driver.c, 799 :: 		char *gnss_parser(char *dataIn, char *command, uint8_t dataPos)
; dataPos start address is: 8 (R2)
; command start address is: 4 (R1)
; dataIn start address is: 0 (R0)
0x177C	0xF2AD4D58  SUBW	SP, SP, #1112
0x1780	0xF8CDE000  STR	LR, [SP, #0]
; dataPos end address is: 8 (R2)
; command end address is: 4 (R1)
; dataIn end address is: 0 (R0)
; dataIn start address is: 0 (R0)
; command start address is: 4 (R1)
; dataPos start address is: 8 (R2)
;__gnss_driver.c, 803 :: 		volatile char *pReturn = 0;    /* Pointer for return data */
0x1784	0xF10D0B04  ADD	R11, SP, #4
0x1788	0xF50B6A8A  ADD	R10, R11, #1104
0x178C	0xF8DFC0A8  LDR	R12, [PC, #168]
0x1790	0xF000FA32  BL	___CC2DW+0
;__gnss_driver.c, 807 :: 		volatile char rspCom[ 1000 ] = {0};     /* Buffer for storage response of the command */
;__gnss_driver.c, 808 :: 		volatile char pData[ 100 ] = {0};       /* Buffer for storage data */
;__gnss_driver.c, 809 :: 		uint8_t nPos = dataPos;                 /* Number of position data */
; nPos start address is: 48 (R12)
0x1794	0xFA5FFC82  UXTB	R12, R2
; dataPos end address is: 8 (R2)
;__gnss_driver.c, 810 :: 		uint8_t curPos = 0;                     /* Current position */
0x1798	0x2300    MOVS	R3, #0
0x179A	0xF88D3454  STRB	R3, [SP, #1108]
;__gnss_driver.c, 813 :: 		pCom = _strstr(dataIn,command);
; command end address is: 4 (R1)
; dataIn end address is: 0 (R0)
0x179E	0xF7FFFBEB  BL	__gnss_driver__strstr+0
; pCom start address is: 20 (R5)
0x17A2	0x4605    MOV	R5, R0
;__gnss_driver.c, 814 :: 		if(pCom == 0)
0x17A4	0xB908    CBNZ	R0, L_gnss_parser101
; nPos end address is: 48 (R12)
; pCom end address is: 20 (R5)
;__gnss_driver.c, 816 :: 		return pReturn;
0x17A6	0x9801    LDR	R0, [SP, #4]
0x17A8	0xE040    B	L_end_gnss_parser
;__gnss_driver.c, 817 :: 		}
L_gnss_parser101:
;__gnss_driver.c, 819 :: 		pNew = _strchr( pCom + 1, '$' );
; pCom start address is: 20 (R5)
; nPos start address is: 48 (R12)
0x17AA	0x1C6B    ADDS	R3, R5, #1
0x17AC	0x2124    MOVS	R1, #36
0x17AE	0xB209    SXTH	R1, R1
0x17B0	0x4618    MOV	R0, R3
0x17B2	0xF7FFFA2B  BL	__gnss_driver__strchr+0
; pNew start address is: 4 (R1)
0x17B6	0x4601    MOV	R1, R0
;__gnss_driver.c, 820 :: 		if(pNew == 0)
0x17B8	0xB908    CBNZ	R0, L_gnss_parser102
; nPos end address is: 48 (R12)
; pNew end address is: 4 (R1)
; pCom end address is: 20 (R5)
;__gnss_driver.c, 822 :: 		return pReturn;
0x17BA	0x9801    LDR	R0, [SP, #4]
0x17BC	0xE036    B	L_end_gnss_parser
;__gnss_driver.c, 823 :: 		}
L_gnss_parser102:
;__gnss_driver.c, 826 :: 		_strncpy(rspCom, pCom, pNew - (pCom));
; pCom start address is: 20 (R5)
; pNew start address is: 4 (R1)
; nPos start address is: 48 (R12)
0x17BE	0x1B4C    SUB	R4, R1, R5
; pNew end address is: 4 (R1)
0x17C0	0xAB02    ADD	R3, SP, #8
0x17C2	0xB2A2    UXTH	R2, R4
0x17C4	0x4629    MOV	R1, R5
; pCom end address is: 20 (R5)
0x17C6	0x4618    MOV	R0, R3
0x17C8	0xF7FFFA42  BL	__gnss_driver__strncpy+0
;__gnss_driver.c, 828 :: 		pCom = rspCom;
0x17CC	0xAE02    ADD	R6, SP, #8
; pCom start address is: 24 (R6)
; nPos end address is: 48 (R12)
; pCom end address is: 24 (R6)
0x17CE	0xFA5FF48C  UXTB	R4, R12
0x17D2	0x4635    MOV	R5, R6
;__gnss_driver.c, 832 :: 		while(curPos != nPos)
L_gnss_parser103:
; pCom start address is: 20 (R5)
; nPos start address is: 16 (R4)
0x17D4	0xF89D3454  LDRB	R3, [SP, #1108]
0x17D8	0x42A3    CMP	R3, R4
0x17DA	0xD018    BEQ	L_gnss_parser104
;__gnss_driver.c, 834 :: 		pNew = _strchr( pCom, ',' );
0x17DC	0x212C    MOVS	R1, #44
0x17DE	0xB209    SXTH	R1, R1
0x17E0	0x4628    MOV	R0, R5
; pCom end address is: 20 (R5)
0x17E2	0xF7FFFA13  BL	__gnss_driver__strchr+0
;__gnss_driver.c, 836 :: 		pCom = pNew + 1;
0x17E6	0x1C43    ADDS	R3, R0, #1
; pCom start address is: 24 (R6)
0x17E8	0x461E    MOV	R6, R3
;__gnss_driver.c, 839 :: 		if((*(pCom) == ',') && ((curPos + 1) == nPos)) return pReturn;
0x17EA	0x781B    LDRB	R3, [R3, #0]
0x17EC	0x2B2C    CMP	R3, #44
0x17EE	0xD107    BNE	L__gnss_parser116
0x17F0	0xF89D3454  LDRB	R3, [SP, #1108]
0x17F4	0x1C5B    ADDS	R3, R3, #1
0x17F6	0xB21B    SXTH	R3, R3
0x17F8	0x42A3    CMP	R3, R4
0x17FA	0xD101    BNE	L__gnss_parser115
; nPos end address is: 16 (R4)
; pCom end address is: 24 (R6)
L__gnss_parser114:
0x17FC	0x9801    LDR	R0, [SP, #4]
0x17FE	0xE015    B	L_end_gnss_parser
L__gnss_parser116:
; pCom start address is: 24 (R6)
; nPos start address is: 16 (R4)
L__gnss_parser115:
;__gnss_driver.c, 840 :: 		curPos++;
0x1800	0xF89D3454  LDRB	R3, [SP, #1108]
0x1804	0x1C5B    ADDS	R3, R3, #1
0x1806	0xF88D3454  STRB	R3, [SP, #1108]
;__gnss_driver.c, 841 :: 		}
; nPos end address is: 16 (R4)
; pCom end address is: 24 (R6)
0x180A	0x4635    MOV	R5, R6
0x180C	0xE7E2    B	L_gnss_parser103
L_gnss_parser104:
;__gnss_driver.c, 842 :: 		pNew = _strchr( pCom + 1, ',' );
; pCom start address is: 20 (R5)
0x180E	0x1C6B    ADDS	R3, R5, #1
0x1810	0x212C    MOVS	R1, #44
0x1812	0xB209    SXTH	R1, R1
0x1814	0x4618    MOV	R0, R3
0x1816	0xF7FFF9F9  BL	__gnss_driver__strchr+0
;__gnss_driver.c, 844 :: 		_strncpy(pData, pCom, pNew - (pCom));
0x181A	0x1B44    SUB	R4, R0, R5
0x181C	0xABFC    ADD	R3, SP, #1008
0x181E	0xB2A2    UXTH	R2, R4
0x1820	0x4629    MOV	R1, R5
; pCom end address is: 20 (R5)
0x1822	0x4618    MOV	R0, R3
0x1824	0xF7FFFA14  BL	__gnss_driver__strncpy+0
;__gnss_driver.c, 845 :: 		pReturn = pData;
0x1828	0xABFC    ADD	R3, SP, #1008
;__gnss_driver.c, 847 :: 		return pReturn;
0x182A	0x4618    MOV	R0, R3
;__gnss_driver.c, 848 :: 		}
L_end_gnss_parser:
0x182C	0xF8DDE000  LDR	LR, [SP, #0]
0x1830	0xF20D4D58  ADDW	SP, SP, #1112
0x1834	0x4770    BX	LR
0x1836	0xBF00    NOP
0x1838	0x21440000  	?ICSgnss_parser_pReturn_L0+0
; end of _gnss_parser
__gnss_driver__strstr:
;__gnss_driver.c, 351 :: 		static char * _strstr(char * s1, char * s2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x0F78	0xB081    SUB	SP, SP, #4
0x0F7A	0xF8CDE000  STR	LR, [SP, #0]
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
0x0F7E	0x4683    MOV	R11, R0
; s1 end address is: 0 (R0)
; s2 end address is: 4 (R1)
0x0F80	0x468A    MOV	R10, R1
;__gnss_driver.c, 353 :: 		while((s1 != 0) && *s1)
L___gnss_driver__strstr22:
; s2 start address is: 40 (R10)
; s2 start address is: 40 (R10)
; s2 end address is: 40 (R10)
; s1 start address is: 44 (R11)
0x0F82	0xF1BB0F00  CMP	R11, #0
0x0F86	0xD018    BEQ	L___gnss_driver__strstr111
; s2 end address is: 40 (R10)
; s2 start address is: 40 (R10)
0x0F88	0xF89B2000  LDRB	R2, [R11, #0]
0x0F8C	0xB1AA    CBZ	R2, L___gnss_driver__strstr110
L___gnss_driver__strstr109:
;__gnss_driver.c, 355 :: 		if(_strncmp(s1, s2, _strlen(s2)) == 0)
0x0F8E	0x4650    MOV	R0, R10
0x0F90	0xF7FFFBE2  BL	__gnss_driver__strlen+0
0x0F94	0xB282    UXTH	R2, R0
0x0F96	0x4651    MOV	R1, R10
0x0F98	0x4658    MOV	R0, R11
0x0F9A	0xF7FFFBEF  BL	__gnss_driver__strncmp+0
0x0F9E	0xB908    CBNZ	R0, L___gnss_driver__strstr26
; s2 end address is: 40 (R10)
;__gnss_driver.c, 357 :: 		return (char *)s1;
0x0FA0	0x4658    MOV	R0, R11
; s1 end address is: 44 (R11)
0x0FA2	0xE00B    B	L_end__strstr
;__gnss_driver.c, 358 :: 		}
L___gnss_driver__strstr26:
;__gnss_driver.c, 359 :: 		s1 = _strchr(s1+1, *s2);
; s1 start address is: 44 (R11)
; s2 start address is: 40 (R10)
0x0FA4	0xF89A2000  LDRB	R2, [R10, #0]
0x0FA8	0xB2D3    UXTB	R3, R2
0x0FAA	0xF10B0201  ADD	R2, R11, #1
; s1 end address is: 44 (R11)
0x0FAE	0xB219    SXTH	R1, R3
0x0FB0	0x4610    MOV	R0, R2
0x0FB2	0xF7FFFE2B  BL	__gnss_driver__strchr+0
; s1 start address is: 44 (R11)
0x0FB6	0x4683    MOV	R11, R0
;__gnss_driver.c, 360 :: 		}
; s2 end address is: 40 (R10)
; s1 end address is: 44 (R11)
0x0FB8	0xE7E3    B	L___gnss_driver__strstr22
;__gnss_driver.c, 353 :: 		while((s1 != 0) && *s1)
L___gnss_driver__strstr111:
L___gnss_driver__strstr110:
;__gnss_driver.c, 361 :: 		return 0;
0x0FBA	0x2000    MOVS	R0, #0
;__gnss_driver.c, 362 :: 		}
L_end__strstr:
0x0FBC	0xF8DDE000  LDR	LR, [SP, #0]
0x0FC0	0xB001    ADD	SP, SP, #4
0x0FC2	0x4770    BX	LR
; end of __gnss_driver__strstr
__gnss_driver__strchr:
;__gnss_driver.c, 343 :: 		static char *_strchr(char *s, int c)
; c start address is: 4 (R1)
; s start address is: 0 (R0)
0x0C0C	0xB081    SUB	SP, SP, #4
; c end address is: 4 (R1)
; s end address is: 0 (R0)
; s start address is: 0 (R0)
; c start address is: 4 (R1)
0x0C0E	0xF8AD1000  STRH	R1, [SP, #0]
; s end address is: 0 (R0)
; c end address is: 4 (R1)
0x0C12	0x4601    MOV	R1, R0
0x0C14	0xF9BD0000  LDRSH	R0, [SP, #0]
;__gnss_driver.c, 345 :: 		while (*s != (char)c)
L___gnss_driver__strchr19:
; c start address is: 0 (R0)
; s start address is: 4 (R1)
0x0C18	0x780B    LDRB	R3, [R1, #0]
0x0C1A	0xB2C2    UXTB	R2, R0
0x0C1C	0x4293    CMP	R3, R2
0x0C1E	0xD007    BEQ	L___gnss_driver__strchr20
;__gnss_driver.c, 346 :: 		if (!*s++)
0x0C20	0x460B    MOV	R3, R1
0x0C22	0x1C49    ADDS	R1, R1, #1
0x0C24	0x781A    LDRB	R2, [R3, #0]
0x0C26	0x2A00    CMP	R2, #0
0x0C28	0xD101    BNE	L___gnss_driver__strchr21
; c end address is: 0 (R0)
; s end address is: 4 (R1)
;__gnss_driver.c, 347 :: 		return 0;
0x0C2A	0x2000    MOVS	R0, #0
0x0C2C	0xE001    B	L_end__strchr
L___gnss_driver__strchr21:
; s start address is: 4 (R1)
; c start address is: 0 (R0)
; c end address is: 0 (R0)
0x0C2E	0xE7F3    B	L___gnss_driver__strchr19
L___gnss_driver__strchr20:
;__gnss_driver.c, 348 :: 		return (char *)s;
0x0C30	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
;__gnss_driver.c, 349 :: 		}
L_end__strchr:
0x0C32	0xB001    ADD	SP, SP, #4
0x0C34	0x4770    BX	LR
; end of __gnss_driver__strchr
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 387 :: 		
0x1FEC	0xB081    SUB	SP, SP, #4
0x1FEE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 390 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1FF2	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 391 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1FF4	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 392 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x1FF6	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 393 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FF8	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 400 :: 		
0x1FFA	0xF64B3080  MOVW	R0, #48000
0x1FFE	0x4281    CMP	R1, R0
0x2000	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 401 :: 		
0x2002	0x4846    LDR	R0, [PC, #280]
0x2004	0x6800    LDR	R0, [R0, #0]
0x2006	0xF0400102  ORR	R1, R0, #2
0x200A	0x4844    LDR	R0, [PC, #272]
0x200C	0x6001    STR	R1, [R0, #0]
0x200E	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 402 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2010	0xF64550C0  MOVW	R0, #24000
0x2014	0x4281    CMP	R1, R0
0x2016	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 403 :: 		
0x2018	0x4840    LDR	R0, [PC, #256]
0x201A	0x6800    LDR	R0, [R0, #0]
0x201C	0xF0400101  ORR	R1, R0, #1
0x2020	0x483E    LDR	R0, [PC, #248]
0x2022	0x6001    STR	R1, [R0, #0]
0x2024	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 405 :: 		
0x2026	0x483D    LDR	R0, [PC, #244]
0x2028	0x6801    LDR	R1, [R0, #0]
0x202A	0xF06F0007  MVN	R0, #7
0x202E	0x4001    ANDS	R1, R0
0x2030	0x483A    LDR	R0, [PC, #232]
0x2032	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 407 :: 		
0x2034	0xF7FFFE38  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 409 :: 		
0x2038	0x4839    LDR	R0, [PC, #228]
0x203A	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 410 :: 		
0x203C	0x4839    LDR	R0, [PC, #228]
0x203E	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 411 :: 		
0x2040	0x4839    LDR	R0, [PC, #228]
0x2042	0xEA020100  AND	R1, R2, R0, LSL #0
0x2046	0x4839    LDR	R0, [PC, #228]
0x2048	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 413 :: 		
0x204A	0xF0020001  AND	R0, R2, #1
0x204E	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2050	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 414 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2052	0x4836    LDR	R0, [PC, #216]
0x2054	0x6800    LDR	R0, [R0, #0]
0x2056	0xF0000002  AND	R0, R0, #2
0x205A	0x2800    CMP	R0, #0
0x205C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 415 :: 		
0x205E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 416 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2060	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 413 :: 		
0x2062	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 416 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 418 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2064	0xF4023080  AND	R0, R2, #65536
0x2068	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x206A	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 419 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x206C	0x482F    LDR	R0, [PC, #188]
0x206E	0x6800    LDR	R0, [R0, #0]
0x2070	0xF4003000  AND	R0, R0, #131072
0x2074	0x2800    CMP	R0, #0
0x2076	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 420 :: 		
0x2078	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 421 :: 		
; ulRCC_CR end address is: 8 (R2)
0x207A	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 418 :: 		
0x207C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x207E	0xF0025080  AND	R0, R2, #268435456
0x2082	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 424 :: 		
0x2084	0x4829    LDR	R0, [PC, #164]
0x2086	0x6800    LDR	R0, [R0, #0]
0x2088	0xF0405180  ORR	R1, R0, #268435456
0x208C	0x4827    LDR	R0, [PC, #156]
0x208E	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 425 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x2090	0x4826    LDR	R0, [PC, #152]
0x2092	0x6800    LDR	R0, [R0, #0]
0x2094	0xF0005000  AND	R0, R0, #536870912
0x2098	0x2800    CMP	R0, #0
0x209A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 426 :: 		
0x209C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 427 :: 		
; ulRCC_CR end address is: 8 (R2)
0x209E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 423 :: 		
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x20A0	0xF0026080  AND	R0, R2, #67108864
0x20A4	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 430 :: 		
0x20A6	0x4821    LDR	R0, [PC, #132]
0x20A8	0x6800    LDR	R0, [R0, #0]
0x20AA	0xF0406180  ORR	R1, R0, #67108864
0x20AE	0x481F    LDR	R0, [PC, #124]
0x20B0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x20B2	0x4611    MOV	R1, R2
0x20B4	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 431 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x20B6	0x481D    LDR	R0, [PC, #116]
0x20B8	0x6800    LDR	R0, [R0, #0]
0x20BA	0xF0006000  AND	R0, R0, #134217728
0x20BE	0x2800    CMP	R0, #0
0x20C0	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 432 :: 		
0x20C2	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 433 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x20C4	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 429 :: 		
0x20C6	0x4611    MOV	R1, R2
0x20C8	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 435 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x20CA	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x20CE	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 436 :: 		
0x20D0	0x4816    LDR	R0, [PC, #88]
0x20D2	0x6800    LDR	R0, [R0, #0]
0x20D4	0xF0407180  ORR	R1, R0, #16777216
0x20D8	0x4814    LDR	R0, [PC, #80]
0x20DA	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x20DC	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 437 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x20DE	0x4813    LDR	R0, [PC, #76]
0x20E0	0x6800    LDR	R0, [R0, #0]
0x20E2	0xF0007000  AND	R0, R0, #33554432
0x20E6	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 438 :: 		
0x20E8	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 439 :: 		
0x20EA	0x460A    MOV	R2, R1
0x20EC	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 435 :: 		
;__Lib_System_105_107.c, 439 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 443 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x20EE	0x480C    LDR	R0, [PC, #48]
0x20F0	0x6800    LDR	R0, [R0, #0]
0x20F2	0xF000010C  AND	R1, R0, #12
0x20F6	0x0090    LSLS	R0, R2, #2
0x20F8	0xF000000C  AND	R0, R0, #12
0x20FC	0x4281    CMP	R1, R0
0x20FE	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 444 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2100	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpRCCRCC2:
0x2102	0xF8DDE000  LDR	LR, [SP, #0]
0x2106	0xB001    ADD	SP, SP, #4
0x2108	0x4770    BX	LR
0x210A	0xBF00    NOP
0x210C	0x00810501  	#83951745
0x2110	0x8402001D  	#1934338
0x2114	0x06440001  	#67140
0x2118	0x19400001  	#72000
0x211C	0x20004002  	FLASH_ACR+0
0x2120	0x10044002  	RCC_CFGR+0
0x2124	0x102C4002  	RCC_CFGR2+0
0x2128	0xFFFF000F  	#1048575
0x212C	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x1CA8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x1CAA	0x4815    LDR	R0, [PC, #84]
0x1CAC	0x6800    LDR	R0, [R0, #0]
0x1CAE	0xF0400101  ORR	R1, R0, #1
0x1CB2	0x4813    LDR	R0, [PC, #76]
0x1CB4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x1CB6	0x4913    LDR	R1, [PC, #76]
0x1CB8	0x4813    LDR	R0, [PC, #76]
0x1CBA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x1CBC	0x4810    LDR	R0, [PC, #64]
0x1CBE	0x6801    LDR	R1, [R0, #0]
0x1CC0	0x4812    LDR	R0, [PC, #72]
0x1CC2	0x4001    ANDS	R1, R0
0x1CC4	0x480E    LDR	R0, [PC, #56]
0x1CC6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x1CC8	0x480D    LDR	R0, [PC, #52]
0x1CCA	0x6801    LDR	R1, [R0, #0]
0x1CCC	0xF46F2080  MVN	R0, #262144
0x1CD0	0x4001    ANDS	R1, R0
0x1CD2	0x480B    LDR	R0, [PC, #44]
0x1CD4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x1CD6	0x480C    LDR	R0, [PC, #48]
0x1CD8	0x6801    LDR	R1, [R0, #0]
0x1CDA	0xF46F00FE  MVN	R0, #8323072
0x1CDE	0x4001    ANDS	R1, R0
0x1CE0	0x4809    LDR	R0, [PC, #36]
0x1CE2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x1CE4	0x4806    LDR	R0, [PC, #24]
0x1CE6	0x6801    LDR	R1, [R0, #0]
0x1CE8	0xF06F50A0  MVN	R0, #335544320
0x1CEC	0x4001    ANDS	R1, R0
0x1CEE	0x4804    LDR	R0, [PC, #16]
0x1CF0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x1CF2	0xF04F0100  MOV	R1, #0
0x1CF6	0x4806    LDR	R0, [PC, #24]
0x1CF8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x1CFA	0xB001    ADD	SP, SP, #4
0x1CFC	0x4770    BX	LR
0x1CFE	0xBF00    NOP
0x1D00	0x10004002  	RCC_CR+0
0x1D04	0x0000F0FF  	#-251723776
0x1D08	0x10044002  	RCC_CFGR+0
0x1D0C	0xFFFFFEF6  	#-17367041
0x1D10	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 447 :: 		
0x2130	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 448 :: 		
0x2132	0x4902    LDR	R1, [PC, #8]
0x2134	0x4802    LDR	R0, [PC, #8]
0x2136	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 449 :: 		
L_end_InitialSetUpFosc:
0x2138	0xB001    ADD	SP, SP, #4
0x213A	0x4770    BX	LR
0x213C	0x19400001  	#72000
0x2140	0x09D82000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x1F98	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x1F9A	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x1F9C	0xB001    ADD	SP, SP, #4
0x1F9E	0x4770    BX	LR
; end of ___GenExcept
0x2B6C	0xB500    PUSH	(R14)
0x2B6E	0xF8DFB014  LDR	R11, [PC, #20]
0x2B72	0xF8DFA014  LDR	R10, [PC, #20]
0x2B76	0xF8DFC014  LDR	R12, [PC, #20]
0x2B7A	0xF7FFF83D  BL	7160
0x2B7E	0xBD00    POP	(R15)
0x2B80	0x4770    BX	LR
0x2B82	0xBF00    NOP
0x2B84	0x00002000  	#536870912
0x2B88	0x03BA2000  	#536871866
0x2B8C	0x25980000  	#9624
0x2BEC	0xB500    PUSH	(R14)
0x2BEE	0xF8DFB010  LDR	R11, [PC, #16]
0x2BF2	0xF8DFA010  LDR	R10, [PC, #16]
0x2BF6	0xF7FFF9B1  BL	8028
0x2BFA	0xBD00    POP	(R15)
0x2BFC	0x4770    BX	LR
0x2BFE	0xBF00    NOP
0x2C00	0x00002000  	#536870912
0x2C04	0x09EC2000  	#536873452
_Timer_interrupt:
;click_gnss_timer.h, 27 :: 		void Timer_interrupt() iv IVT_INT_TIM2
0x1FA0	0xB081    SUB	SP, SP, #4
0x1FA2	0xF8CDE000  STR	LR, [SP, #0]
;click_gnss_timer.h, 29 :: 		gnss_tick();
0x1FA6	0xF7FFFE31  BL	_gnss_tick+0
;click_gnss_timer.h, 30 :: 		timerCounter++;
0x1FAA	0x4906    LDR	R1, [PC, #24]
0x1FAC	0x6808    LDR	R0, [R1, #0]
0x1FAE	0x1C40    ADDS	R0, R0, #1
0x1FB0	0x6008    STR	R0, [R1, #0]
;click_gnss_timer.h, 31 :: 		TIM2_SR.UIF = 0;
0x1FB2	0x2100    MOVS	R1, #0
0x1FB4	0xB249    SXTB	R1, R1
0x1FB6	0x4804    LDR	R0, [PC, #16]
0x1FB8	0x6001    STR	R1, [R0, #0]
;click_gnss_timer.h, 32 :: 		}
L_end_Timer_interrupt:
0x1FBA	0xF8DDE000  LDR	LR, [SP, #0]
0x1FBE	0xB001    ADD	SP, SP, #4
0x1FC0	0x4770    BX	LR
0x1FC2	0xBF00    NOP
0x1FC4	0x00002000  	_timerCounter+0
0x1FC8	0x02004200  	TIM2_SR+0
; end of _Timer_interrupt
_gnss_tick:
;__gnss_driver.c, 597 :: 		void gnss_tick()
;__gnss_driver.c, 599 :: 		if (f_watchdog_active)
0x1C0C	0x481C    LDR	R0, [PC, #112]
0x1C0E	0x7800    LDRB	R0, [R0, #0]
0x1C10	0xB1C8    CBZ	R0, L_gnss_tick56
;__gnss_driver.c, 601 :: 		if (c_watchdog_timer++ > currentEv.wDogLimit)
0x1C12	0x481C    LDR	R0, [PC, #112]
0x1C14	0x6802    LDR	R2, [R0, #0]
0x1C16	0x481B    LDR	R0, [PC, #108]
0x1C18	0x6800    LDR	R0, [R0, #0]
0x1C1A	0x1C41    ADDS	R1, R0, #1
0x1C1C	0x4819    LDR	R0, [PC, #100]
0x1C1E	0x6001    STR	R1, [R0, #0]
0x1C20	0x4819    LDR	R0, [PC, #100]
0x1C22	0x6800    LDR	R0, [R0, #0]
0x1C24	0x4282    CMP	R2, R0
0x1C26	0xD90E    BLS	L_gnss_tick57
;__gnss_driver.c, 603 :: 		f_watchdog_active = false;
0x1C28	0x2100    MOVS	R1, #0
0x1C2A	0x4815    LDR	R0, [PC, #84]
0x1C2C	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 604 :: 		c_watchdog_timer = 0;
0x1C2E	0x2100    MOVS	R1, #0
0x1C30	0x4814    LDR	R0, [PC, #80]
0x1C32	0x6001    STR	R1, [R0, #0]
;__gnss_driver.c, 605 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1C34	0x4815    LDR	R0, [PC, #84]
0x1C36	0x8801    LDRH	R1, [R0, #0]
0x1C38	0x4815    LDR	R0, [PC, #84]
0x1C3A	0x1841    ADDS	R1, R0, R1
0x1C3C	0x2000    MOVS	R0, #0
0x1C3E	0x7008    STRB	R0, [R1, #0]
;__gnss_driver.c, 606 :: 		f_wdog_timeout = true;
0x1C40	0x2101    MOVS	R1, #1
0x1C42	0x4814    LDR	R0, [PC, #80]
0x1C44	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 607 :: 		}
L_gnss_tick57:
;__gnss_driver.c, 608 :: 		}
L_gnss_tick56:
;__gnss_driver.c, 609 :: 		if (f_timer_active)
0x1C46	0x4814    LDR	R0, [PC, #80]
0x1C48	0x7800    LDRB	R0, [R0, #0]
0x1C4A	0xB1C0    CBZ	R0, L_gnss_tick58
;__gnss_driver.c, 611 :: 		if (c_timer++ > _GNSS_TIMER_LIMIT)
0x1C4C	0x4813    LDR	R0, [PC, #76]
0x1C4E	0x6802    LDR	R2, [R0, #0]
0x1C50	0x4812    LDR	R0, [PC, #72]
0x1C52	0x6800    LDR	R0, [R0, #0]
0x1C54	0x1C41    ADDS	R1, R0, #1
0x1C56	0x4811    LDR	R0, [PC, #68]
0x1C58	0x6001    STR	R1, [R0, #0]
0x1C5A	0x4811    LDR	R0, [PC, #68]
0x1C5C	0x4282    CMP	R2, R0
0x1C5E	0xD90E    BLS	L_gnss_tick59
;__gnss_driver.c, 613 :: 		f_timer_active = false;
0x1C60	0x2100    MOVS	R1, #0
0x1C62	0x480D    LDR	R0, [PC, #52]
0x1C64	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 614 :: 		c_timer = 0;
0x1C66	0x2100    MOVS	R1, #0
0x1C68	0x480C    LDR	R0, [PC, #48]
0x1C6A	0x6001    STR	R1, [R0, #0]
;__gnss_driver.c, 615 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1C6C	0x4807    LDR	R0, [PC, #28]
0x1C6E	0x8801    LDRH	R1, [R0, #0]
0x1C70	0x4807    LDR	R0, [PC, #28]
0x1C72	0x1841    ADDS	R1, R0, R1
0x1C74	0x2000    MOVS	R0, #0
0x1C76	0x7008    STRB	R0, [R1, #0]
;__gnss_driver.c, 616 :: 		f_response_ready = true;
0x1C78	0x2101    MOVS	R1, #1
0x1C7A	0x480A    LDR	R0, [PC, #40]
0x1C7C	0x7001    STRB	R1, [R0, #0]
;__gnss_driver.c, 617 :: 		}
L_gnss_tick59:
;__gnss_driver.c, 618 :: 		}
L_gnss_tick58:
;__gnss_driver.c, 619 :: 		}
L_end_gnss_tick:
0x1C7E	0x4770    BX	LR
0x1C80	0x03C22000  	__gnss_driver_f_watchdog_active+0
0x1C84	0x09B42000  	__gnss_driver_c_watchdog_timer+0
0x1C88	0x09C02000  	__gnss_driver_currentEv+4
0x1C8C	0x05C82000  	__gnss_driver_rxBuff+0
0x1C90	0x05CA2000  	__gnss_driver_rxBuff+2
0x1C94	0x03C12000  	__gnss_driver_f_wdog_timeout+0
0x1C98	0x03C32000  	__gnss_driver_f_timer_active+0
0x1C9C	0x09B82000  	__gnss_driver_c_timer+0
0x1CA0	0x00050000  	__GNSS_TIMER_LIMIT
0x1CA4	0x03C02000  	__gnss_driver_f_response_ready+0
; end of _gnss_tick
;__gnss_driver.c,0 :: ?ICSgnss_parser_pReturn_L0 [4]
0x2144	0x00000000 ;?ICSgnss_parser_pReturn_L0+0
; end of ?ICSgnss_parser_pReturn_L0
;__gnss_driver.c,0 :: ?ICSgnss_parser_rspCom_L0 [1000]
0x2148	0x00000000 ;?ICSgnss_parser_rspCom_L0+0
0x214C	0x00000000 ;?ICSgnss_parser_rspCom_L0+4
0x2150	0x00000000 ;?ICSgnss_parser_rspCom_L0+8
0x2154	0x00000000 ;?ICSgnss_parser_rspCom_L0+12
0x2158	0x00000000 ;?ICSgnss_parser_rspCom_L0+16
0x215C	0x00000000 ;?ICSgnss_parser_rspCom_L0+20
0x2160	0x00000000 ;?ICSgnss_parser_rspCom_L0+24
0x2164	0x00000000 ;?ICSgnss_parser_rspCom_L0+28
0x2168	0x00000000 ;?ICSgnss_parser_rspCom_L0+32
0x216C	0x00000000 ;?ICSgnss_parser_rspCom_L0+36
0x2170	0x00000000 ;?ICSgnss_parser_rspCom_L0+40
0x2174	0x00000000 ;?ICSgnss_parser_rspCom_L0+44
0x2178	0x00000000 ;?ICSgnss_parser_rspCom_L0+48
0x217C	0x00000000 ;?ICSgnss_parser_rspCom_L0+52
0x2180	0x00000000 ;?ICSgnss_parser_rspCom_L0+56
0x2184	0x00000000 ;?ICSgnss_parser_rspCom_L0+60
0x2188	0x00000000 ;?ICSgnss_parser_rspCom_L0+64
0x218C	0x00000000 ;?ICSgnss_parser_rspCom_L0+68
0x2190	0x00000000 ;?ICSgnss_parser_rspCom_L0+72
0x2194	0x00000000 ;?ICSgnss_parser_rspCom_L0+76
0x2198	0x00000000 ;?ICSgnss_parser_rspCom_L0+80
0x219C	0x00000000 ;?ICSgnss_parser_rspCom_L0+84
0x21A0	0x00000000 ;?ICSgnss_parser_rspCom_L0+88
0x21A4	0x00000000 ;?ICSgnss_parser_rspCom_L0+92
0x21A8	0x00000000 ;?ICSgnss_parser_rspCom_L0+96
0x21AC	0x00000000 ;?ICSgnss_parser_rspCom_L0+100
0x21B0	0x00000000 ;?ICSgnss_parser_rspCom_L0+104
0x21B4	0x00000000 ;?ICSgnss_parser_rspCom_L0+108
0x21B8	0x00000000 ;?ICSgnss_parser_rspCom_L0+112
0x21BC	0x00000000 ;?ICSgnss_parser_rspCom_L0+116
0x21C0	0x00000000 ;?ICSgnss_parser_rspCom_L0+120
0x21C4	0x00000000 ;?ICSgnss_parser_rspCom_L0+124
0x21C8	0x00000000 ;?ICSgnss_parser_rspCom_L0+128
0x21CC	0x00000000 ;?ICSgnss_parser_rspCom_L0+132
0x21D0	0x00000000 ;?ICSgnss_parser_rspCom_L0+136
0x21D4	0x00000000 ;?ICSgnss_parser_rspCom_L0+140
0x21D8	0x00000000 ;?ICSgnss_parser_rspCom_L0+144
0x21DC	0x00000000 ;?ICSgnss_parser_rspCom_L0+148
0x21E0	0x00000000 ;?ICSgnss_parser_rspCom_L0+152
0x21E4	0x00000000 ;?ICSgnss_parser_rspCom_L0+156
0x21E8	0x00000000 ;?ICSgnss_parser_rspCom_L0+160
0x21EC	0x00000000 ;?ICSgnss_parser_rspCom_L0+164
0x21F0	0x00000000 ;?ICSgnss_parser_rspCom_L0+168
0x21F4	0x00000000 ;?ICSgnss_parser_rspCom_L0+172
0x21F8	0x00000000 ;?ICSgnss_parser_rspCom_L0+176
0x21FC	0x00000000 ;?ICSgnss_parser_rspCom_L0+180
0x2200	0x00000000 ;?ICSgnss_parser_rspCom_L0+184
0x2204	0x00000000 ;?ICSgnss_parser_rspCom_L0+188
0x2208	0x00000000 ;?ICSgnss_parser_rspCom_L0+192
0x220C	0x00000000 ;?ICSgnss_parser_rspCom_L0+196
0x2210	0x00000000 ;?ICSgnss_parser_rspCom_L0+200
0x2214	0x00000000 ;?ICSgnss_parser_rspCom_L0+204
0x2218	0x00000000 ;?ICSgnss_parser_rspCom_L0+208
0x221C	0x00000000 ;?ICSgnss_parser_rspCom_L0+212
0x2220	0x00000000 ;?ICSgnss_parser_rspCom_L0+216
0x2224	0x00000000 ;?ICSgnss_parser_rspCom_L0+220
0x2228	0x00000000 ;?ICSgnss_parser_rspCom_L0+224
0x222C	0x00000000 ;?ICSgnss_parser_rspCom_L0+228
0x2230	0x00000000 ;?ICSgnss_parser_rspCom_L0+232
0x2234	0x00000000 ;?ICSgnss_parser_rspCom_L0+236
0x2238	0x00000000 ;?ICSgnss_parser_rspCom_L0+240
0x223C	0x00000000 ;?ICSgnss_parser_rspCom_L0+244
0x2240	0x00000000 ;?ICSgnss_parser_rspCom_L0+248
0x2244	0x00000000 ;?ICSgnss_parser_rspCom_L0+252
0x2248	0x00000000 ;?ICSgnss_parser_rspCom_L0+256
0x224C	0x00000000 ;?ICSgnss_parser_rspCom_L0+260
0x2250	0x00000000 ;?ICSgnss_parser_rspCom_L0+264
0x2254	0x00000000 ;?ICSgnss_parser_rspCom_L0+268
0x2258	0x00000000 ;?ICSgnss_parser_rspCom_L0+272
0x225C	0x00000000 ;?ICSgnss_parser_rspCom_L0+276
0x2260	0x00000000 ;?ICSgnss_parser_rspCom_L0+280
0x2264	0x00000000 ;?ICSgnss_parser_rspCom_L0+284
0x2268	0x00000000 ;?ICSgnss_parser_rspCom_L0+288
0x226C	0x00000000 ;?ICSgnss_parser_rspCom_L0+292
0x2270	0x00000000 ;?ICSgnss_parser_rspCom_L0+296
0x2274	0x00000000 ;?ICSgnss_parser_rspCom_L0+300
0x2278	0x00000000 ;?ICSgnss_parser_rspCom_L0+304
0x227C	0x00000000 ;?ICSgnss_parser_rspCom_L0+308
0x2280	0x00000000 ;?ICSgnss_parser_rspCom_L0+312
0x2284	0x00000000 ;?ICSgnss_parser_rspCom_L0+316
0x2288	0x00000000 ;?ICSgnss_parser_rspCom_L0+320
0x228C	0x00000000 ;?ICSgnss_parser_rspCom_L0+324
0x2290	0x00000000 ;?ICSgnss_parser_rspCom_L0+328
0x2294	0x00000000 ;?ICSgnss_parser_rspCom_L0+332
0x2298	0x00000000 ;?ICSgnss_parser_rspCom_L0+336
0x229C	0x00000000 ;?ICSgnss_parser_rspCom_L0+340
0x22A0	0x00000000 ;?ICSgnss_parser_rspCom_L0+344
0x22A4	0x00000000 ;?ICSgnss_parser_rspCom_L0+348
0x22A8	0x00000000 ;?ICSgnss_parser_rspCom_L0+352
0x22AC	0x00000000 ;?ICSgnss_parser_rspCom_L0+356
0x22B0	0x00000000 ;?ICSgnss_parser_rspCom_L0+360
0x22B4	0x00000000 ;?ICSgnss_parser_rspCom_L0+364
0x22B8	0x00000000 ;?ICSgnss_parser_rspCom_L0+368
0x22BC	0x00000000 ;?ICSgnss_parser_rspCom_L0+372
0x22C0	0x00000000 ;?ICSgnss_parser_rspCom_L0+376
0x22C4	0x00000000 ;?ICSgnss_parser_rspCom_L0+380
0x22C8	0x00000000 ;?ICSgnss_parser_rspCom_L0+384
0x22CC	0x00000000 ;?ICSgnss_parser_rspCom_L0+388
0x22D0	0x00000000 ;?ICSgnss_parser_rspCom_L0+392
0x22D4	0x00000000 ;?ICSgnss_parser_rspCom_L0+396
0x22D8	0x00000000 ;?ICSgnss_parser_rspCom_L0+400
0x22DC	0x00000000 ;?ICSgnss_parser_rspCom_L0+404
0x22E0	0x00000000 ;?ICSgnss_parser_rspCom_L0+408
0x22E4	0x00000000 ;?ICSgnss_parser_rspCom_L0+412
0x22E8	0x00000000 ;?ICSgnss_parser_rspCom_L0+416
0x22EC	0x00000000 ;?ICSgnss_parser_rspCom_L0+420
0x22F0	0x00000000 ;?ICSgnss_parser_rspCom_L0+424
0x22F4	0x00000000 ;?ICSgnss_parser_rspCom_L0+428
0x22F8	0x00000000 ;?ICSgnss_parser_rspCom_L0+432
0x22FC	0x00000000 ;?ICSgnss_parser_rspCom_L0+436
0x2300	0x00000000 ;?ICSgnss_parser_rspCom_L0+440
0x2304	0x00000000 ;?ICSgnss_parser_rspCom_L0+444
0x2308	0x00000000 ;?ICSgnss_parser_rspCom_L0+448
0x230C	0x00000000 ;?ICSgnss_parser_rspCom_L0+452
0x2310	0x00000000 ;?ICSgnss_parser_rspCom_L0+456
0x2314	0x00000000 ;?ICSgnss_parser_rspCom_L0+460
0x2318	0x00000000 ;?ICSgnss_parser_rspCom_L0+464
0x231C	0x00000000 ;?ICSgnss_parser_rspCom_L0+468
0x2320	0x00000000 ;?ICSgnss_parser_rspCom_L0+472
0x2324	0x00000000 ;?ICSgnss_parser_rspCom_L0+476
0x2328	0x00000000 ;?ICSgnss_parser_rspCom_L0+480
0x232C	0x00000000 ;?ICSgnss_parser_rspCom_L0+484
0x2330	0x00000000 ;?ICSgnss_parser_rspCom_L0+488
0x2334	0x00000000 ;?ICSgnss_parser_rspCom_L0+492
0x2338	0x00000000 ;?ICSgnss_parser_rspCom_L0+496
0x233C	0x00000000 ;?ICSgnss_parser_rspCom_L0+500
0x2340	0x00000000 ;?ICSgnss_parser_rspCom_L0+504
0x2344	0x00000000 ;?ICSgnss_parser_rspCom_L0+508
0x2348	0x00000000 ;?ICSgnss_parser_rspCom_L0+512
0x234C	0x00000000 ;?ICSgnss_parser_rspCom_L0+516
0x2350	0x00000000 ;?ICSgnss_parser_rspCom_L0+520
0x2354	0x00000000 ;?ICSgnss_parser_rspCom_L0+524
0x2358	0x00000000 ;?ICSgnss_parser_rspCom_L0+528
0x235C	0x00000000 ;?ICSgnss_parser_rspCom_L0+532
0x2360	0x00000000 ;?ICSgnss_parser_rspCom_L0+536
0x2364	0x00000000 ;?ICSgnss_parser_rspCom_L0+540
0x2368	0x00000000 ;?ICSgnss_parser_rspCom_L0+544
0x236C	0x00000000 ;?ICSgnss_parser_rspCom_L0+548
0x2370	0x00000000 ;?ICSgnss_parser_rspCom_L0+552
0x2374	0x00000000 ;?ICSgnss_parser_rspCom_L0+556
0x2378	0x00000000 ;?ICSgnss_parser_rspCom_L0+560
0x237C	0x00000000 ;?ICSgnss_parser_rspCom_L0+564
0x2380	0x00000000 ;?ICSgnss_parser_rspCom_L0+568
0x2384	0x00000000 ;?ICSgnss_parser_rspCom_L0+572
0x2388	0x00000000 ;?ICSgnss_parser_rspCom_L0+576
0x238C	0x00000000 ;?ICSgnss_parser_rspCom_L0+580
0x2390	0x00000000 ;?ICSgnss_parser_rspCom_L0+584
0x2394	0x00000000 ;?ICSgnss_parser_rspCom_L0+588
0x2398	0x00000000 ;?ICSgnss_parser_rspCom_L0+592
0x239C	0x00000000 ;?ICSgnss_parser_rspCom_L0+596
0x23A0	0x00000000 ;?ICSgnss_parser_rspCom_L0+600
0x23A4	0x00000000 ;?ICSgnss_parser_rspCom_L0+604
0x23A8	0x00000000 ;?ICSgnss_parser_rspCom_L0+608
0x23AC	0x00000000 ;?ICSgnss_parser_rspCom_L0+612
0x23B0	0x00000000 ;?ICSgnss_parser_rspCom_L0+616
0x23B4	0x00000000 ;?ICSgnss_parser_rspCom_L0+620
0x23B8	0x00000000 ;?ICSgnss_parser_rspCom_L0+624
0x23BC	0x00000000 ;?ICSgnss_parser_rspCom_L0+628
0x23C0	0x00000000 ;?ICSgnss_parser_rspCom_L0+632
0x23C4	0x00000000 ;?ICSgnss_parser_rspCom_L0+636
0x23C8	0x00000000 ;?ICSgnss_parser_rspCom_L0+640
0x23CC	0x00000000 ;?ICSgnss_parser_rspCom_L0+644
0x23D0	0x00000000 ;?ICSgnss_parser_rspCom_L0+648
0x23D4	0x00000000 ;?ICSgnss_parser_rspCom_L0+652
0x23D8	0x00000000 ;?ICSgnss_parser_rspCom_L0+656
0x23DC	0x00000000 ;?ICSgnss_parser_rspCom_L0+660
0x23E0	0x00000000 ;?ICSgnss_parser_rspCom_L0+664
0x23E4	0x00000000 ;?ICSgnss_parser_rspCom_L0+668
0x23E8	0x00000000 ;?ICSgnss_parser_rspCom_L0+672
0x23EC	0x00000000 ;?ICSgnss_parser_rspCom_L0+676
0x23F0	0x00000000 ;?ICSgnss_parser_rspCom_L0+680
0x23F4	0x00000000 ;?ICSgnss_parser_rspCom_L0+684
0x23F8	0x00000000 ;?ICSgnss_parser_rspCom_L0+688
0x23FC	0x00000000 ;?ICSgnss_parser_rspCom_L0+692
0x2400	0x00000000 ;?ICSgnss_parser_rspCom_L0+696
0x2404	0x00000000 ;?ICSgnss_parser_rspCom_L0+700
0x2408	0x00000000 ;?ICSgnss_parser_rspCom_L0+704
0x240C	0x00000000 ;?ICSgnss_parser_rspCom_L0+708
0x2410	0x00000000 ;?ICSgnss_parser_rspCom_L0+712
0x2414	0x00000000 ;?ICSgnss_parser_rspCom_L0+716
0x2418	0x00000000 ;?ICSgnss_parser_rspCom_L0+720
0x241C	0x00000000 ;?ICSgnss_parser_rspCom_L0+724
0x2420	0x00000000 ;?ICSgnss_parser_rspCom_L0+728
0x2424	0x00000000 ;?ICSgnss_parser_rspCom_L0+732
0x2428	0x00000000 ;?ICSgnss_parser_rspCom_L0+736
0x242C	0x00000000 ;?ICSgnss_parser_rspCom_L0+740
0x2430	0x00000000 ;?ICSgnss_parser_rspCom_L0+744
0x2434	0x00000000 ;?ICSgnss_parser_rspCom_L0+748
0x2438	0x00000000 ;?ICSgnss_parser_rspCom_L0+752
0x243C	0x00000000 ;?ICSgnss_parser_rspCom_L0+756
0x2440	0x00000000 ;?ICSgnss_parser_rspCom_L0+760
0x2444	0x00000000 ;?ICSgnss_parser_rspCom_L0+764
0x2448	0x00000000 ;?ICSgnss_parser_rspCom_L0+768
0x244C	0x00000000 ;?ICSgnss_parser_rspCom_L0+772
0x2450	0x00000000 ;?ICSgnss_parser_rspCom_L0+776
0x2454	0x00000000 ;?ICSgnss_parser_rspCom_L0+780
0x2458	0x00000000 ;?ICSgnss_parser_rspCom_L0+784
0x245C	0x00000000 ;?ICSgnss_parser_rspCom_L0+788
0x2460	0x00000000 ;?ICSgnss_parser_rspCom_L0+792
0x2464	0x00000000 ;?ICSgnss_parser_rspCom_L0+796
0x2468	0x00000000 ;?ICSgnss_parser_rspCom_L0+800
0x246C	0x00000000 ;?ICSgnss_parser_rspCom_L0+804
0x2470	0x00000000 ;?ICSgnss_parser_rspCom_L0+808
0x2474	0x00000000 ;?ICSgnss_parser_rspCom_L0+812
0x2478	0x00000000 ;?ICSgnss_parser_rspCom_L0+816
0x247C	0x00000000 ;?ICSgnss_parser_rspCom_L0+820
0x2480	0x00000000 ;?ICSgnss_parser_rspCom_L0+824
0x2484	0x00000000 ;?ICSgnss_parser_rspCom_L0+828
0x2488	0x00000000 ;?ICSgnss_parser_rspCom_L0+832
0x248C	0x00000000 ;?ICSgnss_parser_rspCom_L0+836
0x2490	0x00000000 ;?ICSgnss_parser_rspCom_L0+840
0x2494	0x00000000 ;?ICSgnss_parser_rspCom_L0+844
0x2498	0x00000000 ;?ICSgnss_parser_rspCom_L0+848
0x249C	0x00000000 ;?ICSgnss_parser_rspCom_L0+852
0x24A0	0x00000000 ;?ICSgnss_parser_rspCom_L0+856
0x24A4	0x00000000 ;?ICSgnss_parser_rspCom_L0+860
0x24A8	0x00000000 ;?ICSgnss_parser_rspCom_L0+864
0x24AC	0x00000000 ;?ICSgnss_parser_rspCom_L0+868
0x24B0	0x00000000 ;?ICSgnss_parser_rspCom_L0+872
0x24B4	0x00000000 ;?ICSgnss_parser_rspCom_L0+876
0x24B8	0x00000000 ;?ICSgnss_parser_rspCom_L0+880
0x24BC	0x00000000 ;?ICSgnss_parser_rspCom_L0+884
0x24C0	0x00000000 ;?ICSgnss_parser_rspCom_L0+888
0x24C4	0x00000000 ;?ICSgnss_parser_rspCom_L0+892
0x24C8	0x00000000 ;?ICSgnss_parser_rspCom_L0+896
0x24CC	0x00000000 ;?ICSgnss_parser_rspCom_L0+900
0x24D0	0x00000000 ;?ICSgnss_parser_rspCom_L0+904
0x24D4	0x00000000 ;?ICSgnss_parser_rspCom_L0+908
0x24D8	0x00000000 ;?ICSgnss_parser_rspCom_L0+912
0x24DC	0x00000000 ;?ICSgnss_parser_rspCom_L0+916
0x24E0	0x00000000 ;?ICSgnss_parser_rspCom_L0+920
0x24E4	0x00000000 ;?ICSgnss_parser_rspCom_L0+924
0x24E8	0x00000000 ;?ICSgnss_parser_rspCom_L0+928
0x24EC	0x00000000 ;?ICSgnss_parser_rspCom_L0+932
0x24F0	0x00000000 ;?ICSgnss_parser_rspCom_L0+936
0x24F4	0x00000000 ;?ICSgnss_parser_rspCom_L0+940
0x24F8	0x00000000 ;?ICSgnss_parser_rspCom_L0+944
0x24FC	0x00000000 ;?ICSgnss_parser_rspCom_L0+948
0x2500	0x00000000 ;?ICSgnss_parser_rspCom_L0+952
0x2504	0x00000000 ;?ICSgnss_parser_rspCom_L0+956
0x2508	0x00000000 ;?ICSgnss_parser_rspCom_L0+960
0x250C	0x00000000 ;?ICSgnss_parser_rspCom_L0+964
0x2510	0x00000000 ;?ICSgnss_parser_rspCom_L0+968
0x2514	0x00000000 ;?ICSgnss_parser_rspCom_L0+972
0x2518	0x00000000 ;?ICSgnss_parser_rspCom_L0+976
0x251C	0x00000000 ;?ICSgnss_parser_rspCom_L0+980
0x2520	0x00000000 ;?ICSgnss_parser_rspCom_L0+984
0x2524	0x00000000 ;?ICSgnss_parser_rspCom_L0+988
0x2528	0x00000000 ;?ICSgnss_parser_rspCom_L0+992
0x252C	0x00000000 ;?ICSgnss_parser_rspCom_L0+996
; end of ?ICSgnss_parser_rspCom_L0
;__gnss_driver.c,0 :: ?ICSgnss_parser_pData_L0 [100]
0x2530	0x00000000 ;?ICSgnss_parser_pData_L0+0
0x2534	0x00000000 ;?ICSgnss_parser_pData_L0+4
0x2538	0x00000000 ;?ICSgnss_parser_pData_L0+8
0x253C	0x00000000 ;?ICSgnss_parser_pData_L0+12
0x2540	0x00000000 ;?ICSgnss_parser_pData_L0+16
0x2544	0x00000000 ;?ICSgnss_parser_pData_L0+20
0x2548	0x00000000 ;?ICSgnss_parser_pData_L0+24
0x254C	0x00000000 ;?ICSgnss_parser_pData_L0+28
0x2550	0x00000000 ;?ICSgnss_parser_pData_L0+32
0x2554	0x00000000 ;?ICSgnss_parser_pData_L0+36
0x2558	0x00000000 ;?ICSgnss_parser_pData_L0+40
0x255C	0x00000000 ;?ICSgnss_parser_pData_L0+44
0x2560	0x00000000 ;?ICSgnss_parser_pData_L0+48
0x2564	0x00000000 ;?ICSgnss_parser_pData_L0+52
0x2568	0x00000000 ;?ICSgnss_parser_pData_L0+56
0x256C	0x00000000 ;?ICSgnss_parser_pData_L0+60
0x2570	0x00000000 ;?ICSgnss_parser_pData_L0+64
0x2574	0x00000000 ;?ICSgnss_parser_pData_L0+68
0x2578	0x00000000 ;?ICSgnss_parser_pData_L0+72
0x257C	0x00000000 ;?ICSgnss_parser_pData_L0+76
0x2580	0x00000000 ;?ICSgnss_parser_pData_L0+80
0x2584	0x00000000 ;?ICSgnss_parser_pData_L0+84
0x2588	0x00000000 ;?ICSgnss_parser_pData_L0+88
0x258C	0x00000000 ;?ICSgnss_parser_pData_L0+92
0x2590	0x00000000 ;?ICSgnss_parser_pData_L0+96
; end of ?ICSgnss_parser_pData_L0
;__gnss_driver.c,0 :: ?ICSgnss_parser_curPos_L0 [1]
0x2594	0x00 ;?ICSgnss_parser_curPos_L0+0
; end of ?ICSgnss_parser_curPos_L0
;Click_GNSS_STM.c,0 :: ?ICS_timerCounter [4]
0x2598	0x00000000 ;?ICS_timerCounter+0
; end of ?ICS_timerCounter
;,0 :: _initBlock_5 [2]
; Containing: ?ICS_pFlag [1]
;             ?ICS_dispFlag [1]
0x259C	0x0000 ;_initBlock_5+0 : ?ICS_pFlag at 0x259C : ?ICS_dispFlag at 0x259D
; end of _initBlock_5
;,0 :: _initBlock_6 [590]
; Containing: ?ICS?lstr1_Click_GNSS_STM [43]
;             ?ICS_demoBuffer [500]
;             ?ICS_demoCommand [16]
;             ?ICS?lstr2_Click_GNSS_STM [31]
0x259E	0x2D2D2D20 ;_initBlock_6+0 : ?ICS?lstr1_Click_GNSS_STM at 0x259E
0x25A2	0x2D2D2D2D ;_initBlock_6+4
0x25A6	0x2D2D2D2D ;_initBlock_6+8
0x25AA	0x2D2D2D2D ;_initBlock_6+12
0x25AE	0x2D2D2D2D ;_initBlock_6+16
0x25B2	0x2D2D2D2D ;_initBlock_6+20
0x25B6	0x2D2D2D2D ;_initBlock_6+24
0x25BA	0x2D2D2D2D ;_initBlock_6+28
0x25BE	0x2D2D2D2D ;_initBlock_6+32
0x25C2	0x2D2D2D2D ;_initBlock_6+36
0x25C6	0x0000202D ;_initBlock_6+40 : ?ICS_demoBuffer at 0x25C9
0x25CA	0x00000000 ;_initBlock_6+44
0x25CE	0x00000000 ;_initBlock_6+48
0x25D2	0x00000000 ;_initBlock_6+52
0x25D6	0x00000000 ;_initBlock_6+56
0x25DA	0x00000000 ;_initBlock_6+60
0x25DE	0x00000000 ;_initBlock_6+64
0x25E2	0x00000000 ;_initBlock_6+68
0x25E6	0x00000000 ;_initBlock_6+72
0x25EA	0x00000000 ;_initBlock_6+76
0x25EE	0x00000000 ;_initBlock_6+80
0x25F2	0x00000000 ;_initBlock_6+84
0x25F6	0x00000000 ;_initBlock_6+88
0x25FA	0x00000000 ;_initBlock_6+92
0x25FE	0x00000000 ;_initBlock_6+96
0x2602	0x00000000 ;_initBlock_6+100
0x2606	0x00000000 ;_initBlock_6+104
0x260A	0x00000000 ;_initBlock_6+108
0x260E	0x00000000 ;_initBlock_6+112
0x2612	0x00000000 ;_initBlock_6+116
0x2616	0x00000000 ;_initBlock_6+120
0x261A	0x00000000 ;_initBlock_6+124
0x261E	0x00000000 ;_initBlock_6+128
0x2622	0x00000000 ;_initBlock_6+132
0x2626	0x00000000 ;_initBlock_6+136
0x262A	0x00000000 ;_initBlock_6+140
0x262E	0x00000000 ;_initBlock_6+144
0x2632	0x00000000 ;_initBlock_6+148
0x2636	0x00000000 ;_initBlock_6+152
0x263A	0x00000000 ;_initBlock_6+156
0x263E	0x00000000 ;_initBlock_6+160
0x2642	0x00000000 ;_initBlock_6+164
0x2646	0x00000000 ;_initBlock_6+168
0x264A	0x00000000 ;_initBlock_6+172
0x264E	0x00000000 ;_initBlock_6+176
0x2652	0x00000000 ;_initBlock_6+180
0x2656	0x00000000 ;_initBlock_6+184
0x265A	0x00000000 ;_initBlock_6+188
0x265E	0x00000000 ;_initBlock_6+192
0x2662	0x00000000 ;_initBlock_6+196
0x2666	0x00000000 ;_initBlock_6+200
0x266A	0x00000000 ;_initBlock_6+204
0x266E	0x00000000 ;_initBlock_6+208
0x2672	0x00000000 ;_initBlock_6+212
0x2676	0x00000000 ;_initBlock_6+216
0x267A	0x00000000 ;_initBlock_6+220
0x267E	0x00000000 ;_initBlock_6+224
0x2682	0x00000000 ;_initBlock_6+228
0x2686	0x00000000 ;_initBlock_6+232
0x268A	0x00000000 ;_initBlock_6+236
0x268E	0x00000000 ;_initBlock_6+240
0x2692	0x00000000 ;_initBlock_6+244
0x2696	0x00000000 ;_initBlock_6+248
0x269A	0x00000000 ;_initBlock_6+252
0x269E	0x00000000 ;_initBlock_6+256
0x26A2	0x00000000 ;_initBlock_6+260
0x26A6	0x00000000 ;_initBlock_6+264
0x26AA	0x00000000 ;_initBlock_6+268
0x26AE	0x00000000 ;_initBlock_6+272
0x26B2	0x00000000 ;_initBlock_6+276
0x26B6	0x00000000 ;_initBlock_6+280
0x26BA	0x00000000 ;_initBlock_6+284
0x26BE	0x00000000 ;_initBlock_6+288
0x26C2	0x00000000 ;_initBlock_6+292
0x26C6	0x00000000 ;_initBlock_6+296
0x26CA	0x00000000 ;_initBlock_6+300
0x26CE	0x00000000 ;_initBlock_6+304
0x26D2	0x00000000 ;_initBlock_6+308
0x26D6	0x00000000 ;_initBlock_6+312
0x26DA	0x00000000 ;_initBlock_6+316
0x26DE	0x00000000 ;_initBlock_6+320
0x26E2	0x00000000 ;_initBlock_6+324
0x26E6	0x00000000 ;_initBlock_6+328
0x26EA	0x00000000 ;_initBlock_6+332
0x26EE	0x00000000 ;_initBlock_6+336
0x26F2	0x00000000 ;_initBlock_6+340
0x26F6	0x00000000 ;_initBlock_6+344
0x26FA	0x00000000 ;_initBlock_6+348
0x26FE	0x00000000 ;_initBlock_6+352
0x2702	0x00000000 ;_initBlock_6+356
0x2706	0x00000000 ;_initBlock_6+360
0x270A	0x00000000 ;_initBlock_6+364
0x270E	0x00000000 ;_initBlock_6+368
0x2712	0x00000000 ;_initBlock_6+372
0x2716	0x00000000 ;_initBlock_6+376
0x271A	0x00000000 ;_initBlock_6+380
0x271E	0x00000000 ;_initBlock_6+384
0x2722	0x00000000 ;_initBlock_6+388
0x2726	0x00000000 ;_initBlock_6+392
0x272A	0x00000000 ;_initBlock_6+396
0x272E	0x00000000 ;_initBlock_6+400
0x2732	0x00000000 ;_initBlock_6+404
0x2736	0x00000000 ;_initBlock_6+408
0x273A	0x00000000 ;_initBlock_6+412
0x273E	0x00000000 ;_initBlock_6+416
0x2742	0x00000000 ;_initBlock_6+420
0x2746	0x00000000 ;_initBlock_6+424
0x274A	0x00000000 ;_initBlock_6+428
0x274E	0x00000000 ;_initBlock_6+432
0x2752	0x00000000 ;_initBlock_6+436
0x2756	0x00000000 ;_initBlock_6+440
0x275A	0x00000000 ;_initBlock_6+444
0x275E	0x00000000 ;_initBlock_6+448
0x2762	0x00000000 ;_initBlock_6+452
0x2766	0x00000000 ;_initBlock_6+456
0x276A	0x00000000 ;_initBlock_6+460
0x276E	0x00000000 ;_initBlock_6+464
0x2772	0x00000000 ;_initBlock_6+468
0x2776	0x00000000 ;_initBlock_6+472
0x277A	0x00000000 ;_initBlock_6+476
0x277E	0x00000000 ;_initBlock_6+480
0x2782	0x00000000 ;_initBlock_6+484
0x2786	0x00000000 ;_initBlock_6+488
0x278A	0x00000000 ;_initBlock_6+492
0x278E	0x00000000 ;_initBlock_6+496
0x2792	0x00000000 ;_initBlock_6+500
0x2796	0x00000000 ;_initBlock_6+504
0x279A	0x00000000 ;_initBlock_6+508
0x279E	0x00000000 ;_initBlock_6+512
0x27A2	0x00000000 ;_initBlock_6+516
0x27A6	0x00000000 ;_initBlock_6+520
0x27AA	0x00000000 ;_initBlock_6+524
0x27AE	0x00000000 ;_initBlock_6+528
0x27B2	0x00000000 ;_initBlock_6+532
0x27B6	0x00000000 ;_initBlock_6+536
0x27BA	0x24000000 ;_initBlock_6+540 : ?ICS_demoCommand at 0x27BD
0x27BE	0x47475047 ;_initBlock_6+544
0x27C2	0x00000041 ;_initBlock_6+548
0x27C6	0x00000000 ;_initBlock_6+552
0x27CA	0x20000000 ;_initBlock_6+556 : ?ICS?lstr2_Click_GNSS_STM at 0x27CD
0x27CE	0x6974614C ;_initBlock_6+560
0x27D2	0x65647574 ;_initBlock_6+564
0x27D6	0x4E203A20 ;_initBlock_6+568
0x27DA	0x6164206F ;_initBlock_6+572
0x27DE	0x61206174 ;_initBlock_6+576
0x27E2	0x6C696176 ;_initBlock_6+580
0x27E6	0x656C6261 ;_initBlock_6+584
0x27EA	0x0021 ;_initBlock_6+588
; end of _initBlock_6
;,0 :: _initBlock_7 [56]
; Containing: ?ICS?lstr3_Click_GNSS_STM [13]
;             ?ICS?lstr4_Click_GNSS_STM [43]
0x27EC	0x74614C20 ;_initBlock_7+0 : ?ICS?lstr3_Click_GNSS_STM at 0x27EC
0x27F0	0x64757469 ;_initBlock_7+4
0x27F4	0x203A2065 ;_initBlock_7+8
0x27F8	0x2D2D2000 ;_initBlock_7+12 : ?ICS?lstr4_Click_GNSS_STM at 0x27F9
0x27FC	0x2D2D2D2D ;_initBlock_7+16
0x2800	0x2D2D2D2D ;_initBlock_7+20
0x2804	0x2D2D2D2D ;_initBlock_7+24
0x2808	0x2D2D2D2D ;_initBlock_7+28
0x280C	0x2D2D2D2D ;_initBlock_7+32
0x2810	0x2D2D2D2D ;_initBlock_7+36
0x2814	0x2D2D2D2D ;_initBlock_7+40
0x2818	0x2D2D2D2D ;_initBlock_7+44
0x281C	0x2D2D2D2D ;_initBlock_7+48
0x2820	0x00202D2D ;_initBlock_7+52
; end of _initBlock_7
;,0 :: _initBlock_8 [74]
; Containing: ?ICS?lstr5_Click_GNSS_STM [43]
;             ?ICS?lstr6_Click_GNSS_STM [31]
0x2824	0x2D2D2D20 ;_initBlock_8+0 : ?ICS?lstr5_Click_GNSS_STM at 0x2824
0x2828	0x2D2D2D2D ;_initBlock_8+4
0x282C	0x2D2D2D2D ;_initBlock_8+8
0x2830	0x2D2D2D2D ;_initBlock_8+12
0x2834	0x2D2D2D2D ;_initBlock_8+16
0x2838	0x2D2D2D2D ;_initBlock_8+20
0x283C	0x2D2D2D2D ;_initBlock_8+24
0x2840	0x2D2D2D2D ;_initBlock_8+28
0x2844	0x2D2D2D2D ;_initBlock_8+32
0x2848	0x2D2D2D2D ;_initBlock_8+36
0x284C	0x2000202D ;_initBlock_8+40 : ?ICS?lstr6_Click_GNSS_STM at 0x284F
0x2850	0x69746C41 ;_initBlock_8+44
0x2854	0x65647574 ;_initBlock_8+48
0x2858	0x4E203A20 ;_initBlock_8+52
0x285C	0x6164206F ;_initBlock_8+56
0x2860	0x61206174 ;_initBlock_8+60
0x2864	0x6C696176 ;_initBlock_8+64
0x2868	0x656C6261 ;_initBlock_8+68
0x286C	0x0021 ;_initBlock_8+72
; end of _initBlock_8
;,0 :: _initBlock_9 [56]
; Containing: ?ICS?lstr7_Click_GNSS_STM [13]
;             ?ICS?lstr8_Click_GNSS_STM [43]
0x286E	0x746C4120 ;_initBlock_9+0 : ?ICS?lstr7_Click_GNSS_STM at 0x286E
0x2872	0x64757469 ;_initBlock_9+4
0x2876	0x203A2065 ;_initBlock_9+8
0x287A	0x2D2D2000 ;_initBlock_9+12 : ?ICS?lstr8_Click_GNSS_STM at 0x287B
0x287E	0x2D2D2D2D ;_initBlock_9+16
0x2882	0x2D2D2D2D ;_initBlock_9+20
0x2886	0x2D2D2D2D ;_initBlock_9+24
0x288A	0x2D2D2D2D ;_initBlock_9+28
0x288E	0x2D2D2D2D ;_initBlock_9+32
0x2892	0x2D2D2D2D ;_initBlock_9+36
0x2896	0x2D2D2D2D ;_initBlock_9+40
0x289A	0x2D2D2D2D ;_initBlock_9+44
0x289E	0x2D2D2D2D ;_initBlock_9+48
0x28A2	0x00202D2D ;_initBlock_9+52
; end of _initBlock_9
;,0 :: _initBlock_10 [132]
; Containing: ?ICS?lstr9_Click_GNSS_STM [43]
;             ?ICS?lstr10_Click_GNSS_STM [32]
;             ?ICS?lstr11_Click_GNSS_STM [14]
;             ?ICS?lstr12_Click_GNSS_STM [43]
0x28A6	0x2D2D2D20 ;_initBlock_10+0 : ?ICS?lstr9_Click_GNSS_STM at 0x28A6
0x28AA	0x2D2D2D2D ;_initBlock_10+4
0x28AE	0x2D2D2D2D ;_initBlock_10+8
0x28B2	0x2D2D2D2D ;_initBlock_10+12
0x28B6	0x2D2D2D2D ;_initBlock_10+16
0x28BA	0x2D2D2D2D ;_initBlock_10+20
0x28BE	0x2D2D2D2D ;_initBlock_10+24
0x28C2	0x2D2D2D2D ;_initBlock_10+28
0x28C6	0x2D2D2D2D ;_initBlock_10+32
0x28CA	0x2D2D2D2D ;_initBlock_10+36
0x28CE	0x2000202D ;_initBlock_10+40 : ?ICS?lstr10_Click_GNSS_STM at 0x28D1
0x28D2	0x676E6F4C ;_initBlock_10+44
0x28D6	0x64757469 ;_initBlock_10+48
0x28DA	0x203A2065 ;_initBlock_10+52
0x28DE	0x64206F4E ;_initBlock_10+56
0x28E2	0x20617461 ;_initBlock_10+60
0x28E6	0x69617661 ;_initBlock_10+64
0x28EA	0x6C62616C ;_initBlock_10+68
0x28EE	0x20002165 ;_initBlock_10+72 : ?ICS?lstr11_Click_GNSS_STM at 0x28F1
0x28F2	0x676E6F4C ;_initBlock_10+76
0x28F6	0x64757469 ;_initBlock_10+80
0x28FA	0x203A2065 ;_initBlock_10+84
0x28FE	0x2D2D2000 ;_initBlock_10+88 : ?ICS?lstr12_Click_GNSS_STM at 0x28FF
0x2902	0x2D2D2D2D ;_initBlock_10+92
0x2906	0x2D2D2D2D ;_initBlock_10+96
0x290A	0x2D2D2D2D ;_initBlock_10+100
0x290E	0x2D2D2D2D ;_initBlock_10+104
0x2912	0x2D2D2D2D ;_initBlock_10+108
0x2916	0x2D2D2D2D ;_initBlock_10+112
0x291A	0x2D2D2D2D ;_initBlock_10+116
0x291E	0x2D2D2D2D ;_initBlock_10+120
0x2922	0x2D2D2D2D ;_initBlock_10+124
0x2926	0x00202D2D ;_initBlock_10+128
; end of _initBlock_10
;,0 :: _initBlock_11 [22]
; Containing: ?ICS?lstr1___gnss_driver [1]
;             ?ICS__gnss_driver_LUT_START_MARK [21]
0x292A	0x00000000 ;_initBlock_11+0 : ?ICS?lstr1___gnss_driver at 0x292A : ?ICS__gnss_driver_LUT_START_MARK at 0x292B
0x292E	0x2300002B ;_initBlock_11+4
0x2932	0x00240000 ;_initBlock_11+8
0x2936	0x005C2500 ;_initBlock_11+12
0x293A	0x00000026 ;_initBlock_11+16
0x293E	0x0000 ;_initBlock_11+20
; end of _initBlock_11
;__gnss_driver.c,0 :: ?ICS__gnss_driver_LUT_END_MARK [18]
0x2940	0x3D000000 ;?ICS__gnss_driver_LUT_END_MARK+0
0x2944	0x003F003F ;?ICS__gnss_driver_LUT_END_MARK+4
0x2948	0x00003D00 ;?ICS__gnss_driver_LUT_END_MARK+8
0x294C	0x0D00003A ;?ICS__gnss_driver_LUT_END_MARK+12
0x2950	0x0000 ;?ICS__gnss_driver_LUT_END_MARK+16
; end of ?ICS__gnss_driver_LUT_END_MARK
;__Lib_GPIO_32F10x_Defs.c,747 :: __GPIO_MODULE_USART3_PD89 [108]
0x2954	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x2958	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x295C	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x2960	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x2964	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x2968	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x296C	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x2970	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x2974	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x2978	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x297C	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x2980	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x2984	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x2988	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x298C	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x2990	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x2994	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x2998	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x299C	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x29A0	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x29A4	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x29A8	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x29AC	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x29B0	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x29B4	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x29B8	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x29BC	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,712 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x29C0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x29C4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x29C8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x29CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x29D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x29D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x29D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x29DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x29E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x29E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x29E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x29EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x29F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x29F4	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x29F8	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x29FC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2A00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2A04	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2A08	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2A0C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2A10	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2A14	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2A18	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2A1C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2A20	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2A24	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2A28	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,732 :: __GPIO_MODULE_USART2_PD56 [108]
0x2A2C	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x2A30	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x2A34	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x2A38	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x2A3C	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x2A40	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x2A44	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x2A48	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x2A4C	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x2A50	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2A54	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2A58	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x2A5C	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x2A60	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2A64	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2A68	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x2A6C	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x2A70	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2A74	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2A78	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x2A7C	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x2A80	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x2A84	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x2A88	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x2A8C	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x2A90	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x2A94	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2A98	0x0000112D ;__MIKROBUS1_GPIO+0
0x2A9C	0x00001111 ;__MIKROBUS1_GPIO+4
0x2AA0	0x0000111D ;__MIKROBUS1_GPIO+8
0x2AA4	0x00001671 ;__MIKROBUS1_GPIO+12
0x2AA8	0x000016F5 ;__MIKROBUS1_GPIO+16
0x2AAC	0x000016E9 ;__MIKROBUS1_GPIO+20
0x2AB0	0x0000170D ;__MIKROBUS1_GPIO+24
0x2AB4	0x00001701 ;__MIKROBUS1_GPIO+28
0x2AB8	0x00001725 ;__MIKROBUS1_GPIO+32
0x2ABC	0x00001719 ;__MIKROBUS1_GPIO+36
0x2AC0	0x00001695 ;__MIKROBUS1_GPIO+40
0x2AC4	0x000016A1 ;__MIKROBUS1_GPIO+44
0x2AC8	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x2ACC	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x2AD0	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x2AD4	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x2AD8	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x2ADC	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x2AE0	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x2AE4	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x2AE8	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x2AEC	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x2AF0	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x2AF4	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_GNSS_STM.c,0 :: ?ICSapplicationTask_rspCom_L0 [50]
0x2AF8	0x00000000 ;?ICSapplicationTask_rspCom_L0+0
0x2AFC	0x00000000 ;?ICSapplicationTask_rspCom_L0+4
0x2B00	0x00000000 ;?ICSapplicationTask_rspCom_L0+8
0x2B04	0x00000000 ;?ICSapplicationTask_rspCom_L0+12
0x2B08	0x00000000 ;?ICSapplicationTask_rspCom_L0+16
0x2B0C	0x00000000 ;?ICSapplicationTask_rspCom_L0+20
0x2B10	0x00000000 ;?ICSapplicationTask_rspCom_L0+24
0x2B14	0x00000000 ;?ICSapplicationTask_rspCom_L0+28
0x2B18	0x00000000 ;?ICSapplicationTask_rspCom_L0+32
0x2B1C	0x00000000 ;?ICSapplicationTask_rspCom_L0+36
0x2B20	0x00000000 ;?ICSapplicationTask_rspCom_L0+40
0x2B24	0x00000000 ;?ICSapplicationTask_rspCom_L0+44
0x2B28	0x0000 ;?ICSapplicationTask_rspCom_L0+48
; end of ?ICSapplicationTask_rspCom_L0
;,0 :: _initBlock_18 [33]
; Containing: ?ICS__gnss_driver_createEvent_tmp_L0 [17]
;             APBAHBPrescTable [16]
0x2B2A	0x00000000 ;_initBlock_18+0 : ?ICS__gnss_driver_createEvent_tmp_L0 at 0x2B2A
0x2B2E	0x00000000 ;_initBlock_18+4
0x2B32	0x00000000 ;_initBlock_18+8
0x2B36	0x00000000 ;_initBlock_18+12
0x2B3A	0x00000000 ;_initBlock_18+16 : APBAHBPrescTable at 0x2B3B
0x2B3E	0x03020100 ;_initBlock_18+20
0x2B42	0x03020104 ;_initBlock_18+24
0x2B46	0x08070604 ;_initBlock_18+28
0x2B4A	0x09 ;_initBlock_18+32
; end of _initBlock_18
;Click_GNSS_STM.c,8 :: __GNSS_UART_CFG [16]
0x2B4C	0x00002580 ;__GNSS_UART_CFG+0
0x2B50	0x00000000 ;__GNSS_UART_CFG+4
0x2B54	0x00000000 ;__GNSS_UART_CFG+8
0x2B58	0x00000000 ;__GNSS_UART_CFG+12
; end of __GNSS_UART_CFG
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_UART [12]
0x2B5C	0x00000215 ;__MIKROBUS1_UART+0
0x2B60	0x00000A75 ;__MIKROBUS1_UART+4
0x2B64	0x00000B4D ;__MIKROBUS1_UART+8
; end of __MIKROBUS1_UART
;__Lib_System_105_107.c,452 :: __Lib_System_105_107_ADCPrescTable [4]
0x2B68	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [30]    __Lib_UART_123_45_UARTx_Write
0x0170     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0208      [12]    _Get_Fosc_kHz
0x0214      [28]    _UART3_Write
0x0230     [140]    _GPIO_Clk_Enable
0x02BC     [168]    _RCC_GetClocksFrequency
0x0364      [28]    _UART5_Write
0x0380      [28]    _UART4_Write
0x039C      [28]    _UART1_Write
0x03B8      [28]    _UART2_Write
0x03D4     [272]    _GPIO_Alternate_Function_Enable
0x04E4      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x04F0      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x04FC      [22]    __Lib_UART_123_45_UARTx_Read
0x0514     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0758      [34]    __gnss_driver__strlen
0x077C      [90]    __gnss_driver__strncmp
0x07D8     [500]    _GPIO_Config
0x09CC      [32]    easymx_v7_STM32F107VC__log_write
0x09EC     [112]    _mikrobus_logWrite
0x0A5C      [24]    _UART2_Read
0x0A74      [24]    _UART3_Read
0x0A8C      [24]    _UART2_Tx_Idle
0x0AA4      [24]    _UART2_Data_Ready
0x0ABC      [32]    _memset
0x0ADC      [40]    _strcpy
0x0B04      [24]    _UART1_Read
0x0B1C      [24]    _UART1_Tx_Idle
0x0B34      [24]    _UART1_Data_Ready
0x0B4C      [24]    _UART3_Data_Ready
0x0B64      [40]    _UART3_Init_Advanced
0x0B8C      [88]    __gnss_driver_locateHandler
0x0BE4      [40]    _UART2_Init_Advanced
0x0C0C      [42]    __gnss_driver__strchr
0x0C38      [24]    _GPIO_Digital_Input
0x0C50      [50]    __gnss_driver__strncpy
0x0C84     [190]    __gnss_driver_searchLut
0x0D44      [28]    _GPIO_Digital_Output
0x0D60      [24]    _UART4_Tx_Idle
0x0D78      [24]    _UART4_Read
0x0D90      [24]    _UART4_Data_Ready
0x0DA8      [40]    _UART1_Init_Advanced
0x0DD0      [24]    _UART3_Tx_Idle
0x0DE8      [24]    _UART5_Tx_Idle
0x0E00      [24]    _UART5_Read
0x0E18      [24]    _UART5_Data_Ready
0x0E30      [24]    _Delay_100ms
0x0E48      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0E54      [12]    easymx_v7_STM32F107VC__setRX_2
0x0E60      [12]    easymx_v7_STM32F107VC__setINT_2
0x0E6C      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0E78      [12]    easymx_v7_STM32F107VC__setTX_2
0x0E84     [128]    _gnss_putc
0x0F04      [28]    __gnss_driver_hal_uartReady
0x0F20      [28]    __gnss_driver_hal_uartRead
0x0F3C      [60]    _gnss_default_handler
0x0F78      [76]    __gnss_driver__strstr
0x0FC4     [212]    __gnss_driver_createEvent
0x1098      [16]    __gnss_driver_hal_gpioMap
0x10A8      [46]    __gnss_driver_generateHash
0x10D8      [14]    _EnableInterrupts
0x10E8      [40]    __gnss_driver_hal_uartMap
0x1110      [12]    easymx_v7_STM32F107VC__setRST_1
0x111C      [12]    easymx_v7_STM32F107VC__setCS_1
0x1128       [2]    __gnss_driver_DTE_setState
0x112C      [12]    easymx_v7_STM32F107VC__setAN_1
0x1138     [120]    _NVIC_IntEnable
0x11B0      [56]    easymx_v7_STM32F107VC__uartInit_1
0x11E8      [56]    easymx_v7_STM32F107VC__uartInit_2
0x1220     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x13D8     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x1590      [56]    easymx_v7_STM32F107VC__log_initUartA
0x15C8      [56]    easymx_v7_STM32F107VC__log_initUartB
0x1600      [56]    easymx_v7_STM32F107VC__log_init1
0x1638      [56]    easymx_v7_STM32F107VC__log_init2
0x1670      [12]    easymx_v7_STM32F107VC__setSCK_1
0x167C      [12]    easymx_v7_STM32F107VC__setAN_2
0x1688      [12]    easymx_v7_STM32F107VC__setRST_2
0x1694      [12]    easymx_v7_STM32F107VC__setSCL_1
0x16A0      [12]    easymx_v7_STM32F107VC__setSDA_1
0x16AC      [12]    easymx_v7_STM32F107VC__setCS_2
0x16B8      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x16C4      [12]    easymx_v7_STM32F107VC__setPWM_2
0x16D0      [12]    easymx_v7_STM32F107VC__setSCK_2
0x16DC      [12]    easymx_v7_STM32F107VC__setMISO_2
0x16E8      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x16F4      [12]    easymx_v7_STM32F107VC__setMISO_1
0x1700      [12]    easymx_v7_STM32F107VC__setINT_1
0x170C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x1718      [12]    easymx_v7_STM32F107VC__setTX_1
0x1724      [12]    easymx_v7_STM32F107VC__setRX_1
0x1730      [76]    _gnss_modulePower
0x177C     [192]    _gnss_parser
0x183C      [66]    _mikrobus_gpioInit
0x1880      [46]    _mikrobus_uartInit
0x18B0      [70]    _mikrobus_logInit
0x18F8      [88]    Click_GNSS_STM_gnss_configTimer
0x1950     [236]    _gnss_coreInit
0x1A3C      [28]    _gnss_uartDriverInit
0x1A58     [404]    _gnss_process
0x1BEC      [12]    _gnss_hfcEnable
0x1BF8      [20]    ___CC2DW
0x1C0C     [156]    _gnss_tick
0x1CA8     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1D14     [404]    _applicationTask
0x1EA8      [92]    _applicationInit
0x1F04      [88]    _systemInit
0x1F5C      [58]    ___FillZeros
0x1F98       [8]    ___GenExcept
0x1FA0      [44]    _Timer_interrupt
0x1FCC      [32]    _main
0x1FEC     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x2130      [20]    __Lib_System_105_107_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    _timerCounter
0x20000004       [1]    _pFlag
0x20000005       [1]    _dispFlag
0x20000006      [43]    ?lstr1_Click_GNSS_STM
0x20000031     [500]    _demoBuffer
0x20000225      [16]    _demoCommand
0x20000235      [31]    ?lstr2_Click_GNSS_STM
0x20000254      [13]    ?lstr3_Click_GNSS_STM
0x20000261      [43]    ?lstr4_Click_GNSS_STM
0x2000028C      [43]    ?lstr5_Click_GNSS_STM
0x200002B7      [31]    ?lstr6_Click_GNSS_STM
0x200002D6      [13]    ?lstr7_Click_GNSS_STM
0x200002E3      [43]    ?lstr8_Click_GNSS_STM
0x2000030E      [43]    ?lstr9_Click_GNSS_STM
0x20000339      [32]    ?lstr10_Click_GNSS_STM
0x20000359      [14]    ?lstr11_Click_GNSS_STM
0x20000367      [43]    ?lstr12_Click_GNSS_STM
0x20000392       [1]    ?lstr1___gnss_driver
0x20000393      [21]    __gnss_driver_LUT_START_MARK
0x200003A8      [18]    __gnss_driver_LUT_END_MARK
0x200003BA       [1]    __gnss_driver_f_sequence_active
0x200003BB       [1]    __gnss_driver_f_buffer_warning
0x200003BC       [4]    _logger
0x200003C0       [1]    __gnss_driver_f_response_ready
0x200003C1       [1]    __gnss_driver_f_wdog_timeout
0x200003C2       [1]    __gnss_driver_f_watchdog_active
0x200003C3       [1]    __gnss_driver_f_timer_active
0x200003C4     [516]    __gnss_driver_hdlBuff
0x200005C8    [1002]    __gnss_driver_rxBuff
0x200009B2       [1]    __gnss_driver_f_hfc_active
0x200009B4       [4]    __gnss_driver_c_watchdog_timer
0x200009B8       [4]    __gnss_driver_c_timer
0x200009BC      [12]    __gnss_driver_currentEv
0x200009C8       [4]    __gnss_driver_fp_uartWrite
0x200009CC       [4]    __gnss_driver_fp_uartRead
0x200009D0       [4]    __gnss_driver_fp_uartReady
0x200009D4       [4]    __gnss_driver_hal_gpio_rstSet
0x200009D8       [4]    ___System_CLOCK_IN_KHZ
0x200009DC       [4]    _UART_Wr_Ptr
0x200009E0       [4]    _UART_Rd_Ptr
0x200009E4       [4]    _UART_Rdy_Ptr
0x200009E8       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2144       [4]    ?ICSgnss_parser_pReturn_L0
0x2148    [1000]    ?ICSgnss_parser_rspCom_L0
0x2530     [100]    ?ICSgnss_parser_pData_L0
0x2594       [1]    ?ICSgnss_parser_curPos_L0
0x2598       [4]    ?ICS_timerCounter
0x259C       [1]    ?ICS_pFlag
0x259D       [1]    ?ICS_dispFlag
0x259E      [43]    ?ICS?lstr1_Click_GNSS_STM
0x25C9     [500]    ?ICS_demoBuffer
0x27BD      [16]    ?ICS_demoCommand
0x27CD      [31]    ?ICS?lstr2_Click_GNSS_STM
0x27EC      [13]    ?ICS?lstr3_Click_GNSS_STM
0x27F9      [43]    ?ICS?lstr4_Click_GNSS_STM
0x2824      [43]    ?ICS?lstr5_Click_GNSS_STM
0x284F      [31]    ?ICS?lstr6_Click_GNSS_STM
0x286E      [13]    ?ICS?lstr7_Click_GNSS_STM
0x287B      [43]    ?ICS?lstr8_Click_GNSS_STM
0x28A6      [43]    ?ICS?lstr9_Click_GNSS_STM
0x28D1      [32]    ?ICS?lstr10_Click_GNSS_STM
0x28F1      [14]    ?ICS?lstr11_Click_GNSS_STM
0x28FF      [43]    ?ICS?lstr12_Click_GNSS_STM
0x292A       [1]    ?ICS?lstr1___gnss_driver
0x292B      [21]    ?ICS__gnss_driver_LUT_START_MARK
0x2940      [18]    ?ICS__gnss_driver_LUT_END_MARK
0x2954     [108]    __GPIO_MODULE_USART3_PD89
0x29C0     [108]    __GPIO_MODULE_USART1_PA9_10
0x2A2C     [108]    __GPIO_MODULE_USART2_PD56
0x2A98      [96]    __MIKROBUS1_GPIO
0x2AF8      [50]    ?ICSapplicationTask_rspCom_L0
0x2B2A      [17]    ?ICS__gnss_driver_createEvent_tmp_L0
0x2B3B      [16]    __Lib_System_105_107_APBAHBPrescTable
0x2B4C      [16]    __GNSS_UART_CFG
0x2B5C      [12]    __MIKROBUS1_UART
0x2B68       [4]    __Lib_System_105_107_ADCPrescTable
