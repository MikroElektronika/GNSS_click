'
'Example for GNSS Click
'
'    Date          : jan 2019.
'    Author        : Katarina Perendic
'
'Test configuration TIVA :
'    
'    MCU              : TM4C129XNCZAD
'    Dev. Board       : EasyMx PRO v7 for TIVA ARM
'    ARM Compiler ver : v6.1.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes all necessary GPIO pins, UART used for
'the communcation with GPS module and UART used for infromation logging
'- Application Initialization - Initializes driver, power on module
'- Application Task - running in parallel core state machine.
'If response detected parser will hang information of Latitude, Longitude and Altitude .
'
'Additional Functions :
'
'All additional functions such as timer initialization and default handler. 
'
'Notes :
'
'- The GPS module returns data in the form of NMEA responses
'- For example, we used the GGA response
'
'- $GPGGA,123519,4807.038,N,01131.000,E,1,08,0.9,545.4,M,46.9,M,,*47
'
'For parsing, use the GPS Parser function to send the following form of arguments:
'The name of the NMEA response that you want to parse, the position of the data that you need.
'As a response - you will get a separate buffer with the requested data
'
'
program Click_GNSS_TIVA

include Click_GNSS_types
include Click_GNSS_config
include Click_GNSS_timer
dim
    pFlag as uint8_t 
    dispFlag as uint8_t 
    demoBuffer as char[500] 
    demoCommand as char[16] 
    
sub procedure gnss_default_handler(dim rsp as ^uint8_t, dim evArgs as ^uint8_t) 
dim
    tmp as ^char 

    tmp = rsp 
    mikrobus_logWrite(tmp, _LOG_TEXT) 
    if (rsp^ = "$") then 
        memset(@demoBuffer[0], 0, 500) 
        strcpy(demoBuffer, tmp) 
    end if
end sub

sub procedure systemInit() 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT) 
    mikrobus_uartInit(_MIKROBUS1, @_GNSS_UART_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART_A, 9600) 
    mikrobus_logWrite(" ---- System Init ---- ", _LOG_LINE) 
end sub

sub procedure applicationInit() 
    gnss_configTimer() 
    gnss_uartDriverInit(T_GNSS_P(@_MIKROBUS1_GPIO), T_GNSS_P(@_MIKROBUS1_UART)) 
    gnss_coreInit(@gnss_default_handler, 1500) 
    gnss_hfcEnable(1) 
    gnss_modulePower(1) 
    Delay_ms(5000) 
    timerCounter = 0 
end sub

sub procedure applicationTask() 
dim
    pLat as ^char 
    pLong as ^char 
    pAlt as ^char 
    rspCom as char[50] 
    rspCom[0] = 0

    gnss_process() 
    if (timerCounter > 5000) then 
        inc(pFlag)
        if (pFlag > 2) then 
            pFlag = 0 
        end if
        timerCounter = 0 
        dispFlag = 1 
    end if
    if ((pFlag = 0) and (dispFlag = 1)) then 
        mikrobus_logWrite("  ", _LOG_LINE) 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
        pLat = gnss_parser(@demoBuffer[0], @demoCommand[0], 2) 
        if (pLat = 0) then 
            mikrobus_logWrite(" Latitude : No data available!", _LOG_LINE) 
        else 
            strcpy(@rspCom[0], pLat) 
            mikrobus_logWrite(" Latitude : ", _LOG_TEXT) 
            mikrobus_logWrite(rspCom, _LOG_LINE) 
        end if
        dispFlag = 0 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
    end if
    if ((pFlag = 2) and (dispFlag = 1)) then 
        mikrobus_logWrite("  ", _LOG_LINE) 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
        pAlt = gnss_parser(@demoBuffer[0], @demoCommand[0], 9) 
        if (pAlt = 0) then 
            mikrobus_logWrite(" Altitude : No data available!", _LOG_LINE) 
        else 
            strcpy(@rspCom[0], pAlt) 
            mikrobus_logWrite(" Altitude : ", _LOG_TEXT) 
            mikrobus_logWrite(rspCom, _LOG_LINE) 
        end if
        dispFlag = 0 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
    end if
    if ((pFlag = 1) and (dispFlag = 1)) then 
        mikrobus_logWrite("  ", _LOG_LINE) 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
        pLong = gnss_parser(@demoBuffer[0], @demoCommand[0], 4) 
        if (pLong = 0) then 
            mikrobus_logWrite(" Longitude : No data available!", _LOG_LINE) 
        else 
            strcpy(@rspCom[0], pLong) 
            mikrobus_logWrite(" Longitude : ", _LOG_TEXT) 
            mikrobus_logWrite(rspCom, _LOG_LINE) 
        end if
        dispFlag = 0 
        mikrobus_logWrite(" ---------------------------------------- ", _LOG_LINE) 
    end if
end sub

main :
    pFlag = 0
    dispFlag = 0
    demoBuffer[0] = 0
    demoCommand = "$GPGGA"

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.